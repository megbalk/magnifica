## Operculum height of left side: 4 to 20
oh.l.x <- abs((output$X4-output$X20))
oh.l.y <-  abs((output$Y4-output$Y20))
oh.l <- sqrt(((oh.l.x)^2 + (oh.l.y)^2))
## Operculum height of right side: 4 to 21
oh.r.x <- abs((output$X4-output$X20))
oh.r.y <-  abs((output$Y4-output$Y20))
oh.r <- sqrt(((oh.r.x)^2 + (oh.r.y)^2))
## Operculum mid-width (maximum width at centerline): 19 to 0
ow.m.x <- abs((output$X19-output$X0))
ow.m.y <-  abs((output$Y19-output$Y0))
ow.m <- sqrt(((ow.m.x)^2 + (ow.m.y)^2))
## Operculum base width: 21 to 20
ow.b.x <- abs((output$X21-output$X20))
ow.b.y <-  abs((output$Y21-output$Y20))
ow.b <- sqrt(((ow.b.x)^2 + (ow.b.y)^2))
## Median process base width: 5 to 6
mpw.b.x <- abs((output$X5-output$X6))
mpw.b.y <-  abs((output$Y5-output$Y6))
mpw.b <- sqrt(((mpw.b.x)^2 + (mpw.b.y)^2))
## Cryptocyst mid-width: 10 to 11
cw.m.x <- abs((output$X10-output$X11))
cw.m.y <-  abs((output$Y10-output$Y11))
cw.m <- sqrt(((cw.m.x)^2 + (cw.m.y)^2))
## Cryptocyst base width: 9 to 1
cw.b.x <- abs((output$X9-output$X1))
cw.b.y <-  abs((output$Y9-output$Y1))
cw.b <- sqrt(((cw.b.x)^2 + (cw.b.y)^2))
## Cryptocyst distal width: 8 to 7
cw.d.x <- abs((output$X8-output$X7))
cw.d.y <-  abs((output$Y8-output$Y7))
cw.d <- sqrt(((cw.d.x)^2 + (cw.d.y)^2))
traits.df <- data.frame(boxID = output.meta$box_id,
imageName = output.meta$imageName,
specimenNR = output.meta$SPECIMEN.NR,
formation = output.meta$FORMATION,
dates = output.meta$DATE,
zh = zh, #z = zooid; h = height
oh.l = oh.l, #o = operculum; l = left
oh.r = oh.r, #r = right
ow.m = ow.m, #w = width; m = mid
ow.b = ow.b, #b = base
mpw.b = mpw.b, #pt = polypide tube
cw.m = cw.m, #c = cryptocyst
cw.b = cw.b,
cw.d = cw.d) #d = distal
traits.melt <- melt(data = traits.df,
id.vars = c("boxID","imageName", "specimenNR", "formation", "dates"),
variable.name = "measurementType",
value.name = "measurementValue")
p <- ggplot(traits.df) +
geom_density(aes(x = zh,
group = formation,
col = formation)) + #all but Punneki Limestone are bimodal
ggtitle("Zooid height by formation, N = 16924") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_y_continuous(name = "Density") +
scale_x_continuous(name = "Zooid Height (pixels)")
p
##seems like first hump ends around 300 pixels
sm.traits <- traits.df[traits.df$zh < 300,]
length(unique(sm.traits$specimenNR)) #174 images out of 778
nrow(output) #16924
nrow(traits.df) #16924
traits.stats <- traits.melt %>%
group_by(measurementType) %>%
summarise(avg = mean(measurementValue))
traits.stats
## right v left side of operculum
p <- ggplot(data = traits.df) +
geom_point(aes(x = oh.l, y = oh.r)) +
ggtitle("Operculum Height, N = 16924") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_y_continuous(name = "Operculum Height Right Side (pixels)") +
scale_x_continuous(name = "Operculum Height Left Side (pixels)")
p
ggplot(data = traits.df) +
geom_smooth(aes(x = zh, y = ow.m), method = "lm") +
geom_point(aes(x = zh, y = ow.m)) + #two clusters
ggtitle("Scaling of operculum mid-width with zooid height, N = 16924") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_y_continuous(name = "Operculum mid-width (pixels)") +
scale_x_continuous(name = "Zooid height (pixels)")
slice_max(traits.df, n = 2, order_by = ow.m)
slice_max(traits.df, n = 2, order_by = zh)
## are the two clusters driven by formation? - NO
ggplot(data = traits.df) +
geom_smooth(aes(x = zh, y = ow.m), method = "lm") +
geom_point(aes(x = zh, y = ow.m,
group = formation,
col = formation)) + #two clusters
ggtitle("Scaling of operculum mid-width with zooid height, N = 16924") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_y_continuous(name = "Operculum mid-width (pixels)") +
scale_x_continuous(name = "Zooid height (pixels)")
colnames(output)
colnames(bryo.meta)
meta.trim <- bryo.meta[!duplicated(bryo.meta$SPECIMEN.NR),
c("DATE", "SPECIMEN.NR", "FORMATION", "MAGNIFICATION")]
nrow(bryo.meta) #880
nrow(meta.trim) #777; 103 rows removed
output.meta <- merge(output, meta.trim,
by = "SPECIMEN.NR",
all.x = TRUE, all.y = FALSE)
## Zooid height (maximum height at centerline): 4 to 12
zh.x <- abs((output$X4-output$X12))
zh.y <-  abs((output$Y4-output$Y12))
zh <- sqrt(((zh.x)^2 + (zh.y)^2))
## Operculum height of left side: 4 to 20
oh.l.x <- abs((output$X4-output$X20))
oh.l.y <-  abs((output$Y4-output$Y20))
oh.l <- sqrt(((oh.l.x)^2 + (oh.l.y)^2))
## Operculum height of right side: 4 to 21
oh.r.x <- abs((output$X4-output$X20))
oh.r.y <-  abs((output$Y4-output$Y20))
oh.r <- sqrt(((oh.r.x)^2 + (oh.r.y)^2))
## Operculum mid-width (maximum width at centerline): 19 to 0
ow.m.x <- abs((output$X19-output$X0))
ow.m.y <-  abs((output$Y19-output$Y0))
ow.m <- sqrt(((ow.m.x)^2 + (ow.m.y)^2))
## Operculum base width: 21 to 20
ow.b.x <- abs((output$X21-output$X20))
ow.b.y <-  abs((output$Y21-output$Y20))
ow.b <- sqrt(((ow.b.x)^2 + (ow.b.y)^2))
## Median process base width: 5 to 6
mpw.b.x <- abs((output$X5-output$X6))
mpw.b.y <-  abs((output$Y5-output$Y6))
mpw.b <- sqrt(((mpw.b.x)^2 + (mpw.b.y)^2))
## Cryptocyst mid-width: 10 to 11
cw.m.x <- abs((output$X10-output$X11))
cw.m.y <-  abs((output$Y10-output$Y11))
cw.m <- sqrt(((cw.m.x)^2 + (cw.m.y)^2))
## Cryptocyst base width: 9 to 1
cw.b.x <- abs((output$X9-output$X1))
cw.b.y <-  abs((output$Y9-output$Y1))
cw.b <- sqrt(((cw.b.x)^2 + (cw.b.y)^2))
## Cryptocyst distal width: 8 to 7
cw.d.x <- abs((output$X8-output$X7))
cw.d.y <-  abs((output$Y8-output$Y7))
cw.d <- sqrt(((cw.d.x)^2 + (cw.d.y)^2))
traits.df <- data.frame(boxID = output.meta$box_id,
magnification = output.meta$MAGNIFICATION,
imageName = output.meta$imageName,
specimenNR = output.meta$SPECIMEN.NR,
formation = output.meta$FORMATION,
dates = output.meta$DATE,
zh = zh, #z = zooid; h = height
oh.l = oh.l, #o = operculum; l = left
oh.r = oh.r, #r = right
ow.m = ow.m, #w = width; m = mid
ow.b = ow.b, #b = base
mpw.b = mpw.b, #pt = polypide tube
cw.m = cw.m, #c = cryptocyst
cw.b = cw.b,
cw.d = cw.d) #d = distal
traits.melt <- melt(data = traits.df,
id.vars = c("boxID","imageName", "specimenNR", "formation", "dates", "magnification"),
variable.name = "measurementType",
value.name = "measurementValue")
traits.stats <- traits.melt %>%
group_by(measurementType) %>%
summarise(avg = mean(measurementValue))
traits.stats
unique(traits.df$magnification)
imageName.parse
#### LOAD DATA ----
output <- read.csv("./Data/output.csv", header = TRUE)
nrow(output) #16924
colnames(output)
##### ID & SPECIMEN.NR -----
id.parse <- str_split(output$id,
pattern = "/")
id.only <- unlist(lapply(id.parse, function (x) x[9]))
id.imageName <- str_remove(id.only, "[^BSE]*$")
output$imageName <- id.imageName
imageName.parse <- str_split(id.imageName, fixed("_"))
specimen.NR <- c()
mag <- c()
for(i in 1:length(imageName.parse)){
specimen.NR[i] <- paste0(imageName.parse[[i]][1], imageName.parse[[i]][2])
mag[i] <- imageName.parse[[i]][5]
}
output$SPECIMEN.NR <- specimen.NR
nrow(output[!duplicated(output$SPECIMEN.NR),]) #777 #two less than in AP_images, same number as bryo metadata
output$mag <- mag
output$mag
unique(output$mag)
output$mag[output$mag == "x30.BSE"] <- "x30"
output$mag[output$mag == "x35.BSE"] <- "x35"
## overlap between A. Porto images with output:
output.spID <- unique(output$SPECIMEN.NR)
jpg.ID <- unique(AP_images$SPECIMEN.NR)
setdiff(output.spID, jpg.ID) #"NA"
setdiff(jpg.ID, output.spID) #"3131.jpg" "492CC"    "494CC" not in output
#### MATCH WITH METADATA ----
bryo.meta <- read.csv("./Data/Imaged Steginoporella magnifica specimens.csv",
header = TRUE)
meta.trim <- bryo.meta[!duplicated(bryo.meta$SPECIMEN.NR),
c("DATE", "SPECIMEN.NR", "FORMATION")]
nrow(bryo.meta) #880
nrow(meta.trim) #778; 102 rows removed
output.meta <- merge(output, meta.trim,
by = "SPECIMEN.NR",
all.x = TRUE, all.y = FALSE)
colnames(output.meta)
nrow(output) #1624
nrow(output.meta) #1624
## Zooid height (maximum height at centerline): 4 to 12
zh.x <- abs((output$X4-output$X12))
zh.y <-  abs((output$Y4-output$Y12))
zh <- sqrt(((zh.x)^2 + (zh.y)^2))
## Operculum height of left side: 4 to 20
oh.l.x <- abs((output$X4-output$X20))
oh.l.y <-  abs((output$Y4-output$Y20))
oh.l <- sqrt(((oh.l.x)^2 + (oh.l.y)^2))
## Operculum height of right side: 4 to 21
oh.r.x <- abs((output$X4-output$X20))
oh.r.y <-  abs((output$Y4-output$Y20))
oh.r <- sqrt(((oh.r.x)^2 + (oh.r.y)^2))
## Operculum mid-width (maximum width at centerline): 19 to 0
ow.m.x <- abs((output$X19-output$X0))
ow.m.y <-  abs((output$Y19-output$Y0))
ow.m <- sqrt(((ow.m.x)^2 + (ow.m.y)^2))
## Operculum base width: 21 to 20
ow.b.x <- abs((output$X21-output$X20))
ow.b.y <-  abs((output$Y21-output$Y20))
ow.b <- sqrt(((ow.b.x)^2 + (ow.b.y)^2))
## Median process base width: 5 to 6
mpw.b.x <- abs((output$X5-output$X6))
mpw.b.y <-  abs((output$Y5-output$Y6))
mpw.b <- sqrt(((mpw.b.x)^2 + (mpw.b.y)^2))
## Cryptocyst mid-width: 10 to 11
cw.m.x <- abs((output$X10-output$X11))
cw.m.y <-  abs((output$Y10-output$Y11))
cw.m <- sqrt(((cw.m.x)^2 + (cw.m.y)^2))
## Cryptocyst base width: 9 to 1
cw.b.x <- abs((output$X9-output$X1))
cw.b.y <-  abs((output$Y9-output$Y1))
cw.b <- sqrt(((cw.b.x)^2 + (cw.b.y)^2))
## Cryptocyst distal width: 8 to 7
cw.d.x <- abs((output$X8-output$X7))
cw.d.y <-  abs((output$Y8-output$Y7))
cw.d <- sqrt(((cw.d.x)^2 + (cw.d.y)^2))
traits.df <- data.frame(boxID = output.meta$box_id,
magnification = output.meta$mag,
imageName = output.meta$imageName,
specimenNR = output.meta$SPECIMEN.NR,
formation = output.meta$FORMATION,
dates = output.meta$DATE,
zh = zh, #z = zooid; h = height
oh.l = oh.l, #o = operculum; l = left
oh.r = oh.r, #r = right
ow.m = ow.m, #w = width; m = mid
ow.b = ow.b, #b = base
mpw.b = mpw.b, #pt = polypide tube
cw.m = cw.m, #c = cryptocyst
cw.b = cw.b,
cw.d = cw.d) #d = distal
nrow(output) #16924
nrow(traits.df) #16924
traits.melt <- melt(data = traits.df,
id.vars = c("boxID","imageName", "specimenNR", "formation", "dates", "magnification"),
variable.name = "measurementType",
value.name = "measurementValue")
traits.melt <- melt(data = traits.df,
id.vars = c("boxID","imageName", "specimenNR", "formation", "dates", "mag"),
variable.name = "measurementType",
value.name = "measurementValue")
traits.melt <- melt(data = traits.df,
id.vars = c("boxID","imageName", "specimenNR", "formation", "dates", "magnification"),
variable.name = "measurementType",
value.name = "measurementValue")
traits.stats <- traits.melt %>%
group_by(measurementType) %>%
summarise(avg = mean(measurementValue))
traits.stats
unique(traits.df$magnification)
p <- ggplot(traits.df) +
geom_density(aes(x = zh,
group = magnification,
col = magnification)) +
ggtitle("Zooid height by magnification, N = 16924") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_y_continuous(name = "Density") +
scale_x_continuous(name = "Zooid Height (pixels)")
p
ggsave(p, file = "./Results/zooid_height_by_magnification.png", width = 14, height = 10, units = "cm")
## are they driven by differences in magnification?
ggplot(data = traits.df) +
geom_smooth(aes(x = zh, y = ow.m), method = "lm") +
geom_point(aes(x = zh, y = ow.m,
group = magnification,
col = magnification)) + #two clusters
ggtitle("Scaling of operculum mid-width with zooid height, N = 16924") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_y_continuous(name = "Operculum mid-width (pixels)") +
scale_x_continuous(name = "Zooid height (pixels)")
## are they driven by differences in magnification?
ggplot(data = traits.df) +
geom_smooth(aes(x = zh, y = ow.m), method = "lm") +
geom_point(aes(x = zh, y = ow.m,
group = magnification,
col = magnification,
alpha = .3)) + #two clusters
ggtitle("Scaling of operculum mid-width with zooid height, N = 16924") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_y_continuous(name = "Operculum mid-width (pixels)") +
scale_x_continuous(name = "Zooid height (pixels)")
#### LOAD PACKAGES ----
require(stringr)
require(dplyr)
df.list <- read.csv("./Data/imageList.csv", header = TRUE)
##### LOAD DATA -----
bryo.meta <- read.csv("./Data/Imaged Steginoporella magnifica specimens.csv", header = TRUE)
bryo.meta$SPECIMEN.NR <- gsub(bryo.meta$SPECIMEN.NR,
pattern = " ",
replacement = "")
nrow(bryo.meta) #880
nrow(bryo.meta[!duplicated(bryo.meta$SPECIMEN.NR),]) #777
tots <- df.list %>%
group_by(specimenNR, ext) %>%
summarise(N = n()) %>%
as.data.frame()
nrow(tots) #1810
length(setdiff(tots$specimenNR, bryo.meta$SPECIMEN.NR)) #136 in df.list that are not in bryo.meta
df.list <- data.frame(folder = folder,
formation = formation,
image = image,
ext = ext,
imageName = imageName,
specimenNR = specimenNR,
number = number,
colonyCurve = colonyCurve,
pictureNumber = pictureNumber,
AV = AV,
magnification = magnification,
backscatter = backscatter,
stringsAsFactors = FALSE)
## get folder names
list = list.files(path = "/Users/meghanabalk/Library/CloudStorage/Dropbox/Rocks-Paradox/Bryozoans/Stegino images",
full.names = TRUE,
recursive = TRUE)
list
colnames(df.list)
unique(df.list$folder)
unique(df.list$formation)
colnames(df.list)
head(df.list$specimenNR)
df.list$newFormation <- ""
df.list$newFormation[grepl("^0", df.list$specimenNR)] <- "NKBS"
df.list$newFormation[grepl("^1", df.list$specimenNR)] <- "NKBS"
df.list$newFormation[grepl("^2", df.list$specimenNR)] <- "NKBS"
df.list$newFormation[grepl("^3", df.list$specimenNR)] <- "NKBS"
df.list$newFormation[grepl("^4", df.list$specimenNR)] <- "NKLS"
df.list$newFormation[grepl("^5", df.list$specimenNR)] <- "NKLS"
df.list$newFormation[grepl("^6", df.list$specimenNR)] <- "Tewkesbury"
df.list$newFormation[grepl("^7", df.list$specimenNR)] <- "SHCSBSB"
df.list$newFormation[grepl("^8", df.list$specimenNR)] <- "Tainui"
df.list$newFormation[grepl("^10", df.list$specimenNR)] <- "Upper Kai-Iwi"
df.list$newFormation[grepl("^11", df.list$specimenNR)] <- "Waipuru"
write.csv(df.list,
"imageList.csv",
row.names = FALSE)
##### LOAD DATA -----
bryo.meta <- read.csv("./Data/Imaged Steginoporella magnifica specimens.csv", header = TRUE)
bryo.meta$SPECIMEN.NR <- gsub(bryo.meta$SPECIMEN.NR,
pattern = " ",
replacement = "")
nrow(bryo.meta) #880
nrow(bryo.meta[!duplicated(bryo.meta$SPECIMEN.NR),]) #777
tots <- df.list %>%
group_by(specimenNR, ext) %>%
summarise(N = n()) %>%
as.data.frame()
nrow(tots) #1810
##### CREATE CSV -----
extra.df <- setdiff(tots$specimenNR, bryo.meta$SPECIMEN.NR)
extra.bryo <- setdiff(bryo.meta$SPECIMEN.NR, tots$specimenNR)
df.trim <- df.list[df.list$specimenNR %in% extra.df &
df.list$ext == "tif",]
df.trimmed <- df.trim[!duplicated(df.trim[c('specimenNR')]), ]
dates <- c(rep("NA", length(extra.df)), bryo.meta$DATE[bryo.meta$SPECIMEN.NR %in% extra.bryo])
folder <- c(df.trimmed$folder, rep("NA", length(extra.bryo)))
formation <- c(df.trimmed$newFormation, rep("NA", length(extra.bryo)))
fromDataset <- c(rep("imageFiles", length(extra.df)), rep("metadata", length(extra.bryo)))
imageDiff <- c(extra.df, extra.bryo)
errors.df <- cbind(fromDataset, imageDiff, folder, formation, dates)
nrow(errors.df)
write.csv(errors.df,
"./Results/errors.csv",
row.names = FALSE)
write.csv(errors.df,
"./Results/errors2.csv",
row.names = FALSE)
AP_images <- read.csv("./Data/images_from_AP.csv", header = TRUE)
##images from shared "JPG" folder
nrow(AP_images) #1654
head(AP_images$SPECIMEN.NR)
imageName.parse_AP <- str_split(AP_images$imageName, fixed("_"))
specimen.NR_AP <- c()
for(i in 1:length(imageName.parse_AP)){
specimen.NR_AP[i] <- paste0(imageName.parse_AP[[i]][1], imageName.parse_AP[[i]][2])
}
AP_images$SPECIMEN.NR <- specimen.NR_AP
nrow(AP_images[!duplicated(AP_images$SPECIMEN.NR),]) #779, two more than in bryo metadata
head(AP_images$SPECIMEN.NR)
head(bryo.meta$SPECIMEN.NR)
setdiff(AP_images$SPECIMEN.NR, bryo.meta$SPECIMEN.NR)
setdiff(bryo.meta$SPECIMEN.NR, AP_images$SPECIMEN.NR)
length(setdiff(AP_images$SPECIMEN.NR, bryo.meta$SPECIMEN.NR))
length(setdiff(bryo.meta$SPECIMEN.NR, AP_images$SPECIMEN.NR))
AP_meta <- read.csv("./Data/AP_Steginoporella.csv", header = TRUE)
head(AP_meta )
AP_meta <- read.table("./Data/AP_Steginoporella.csv",
header = TRUE,
sep = ";")
head(AP_meta )
length(setdiff(AP_images$SPECIMEN.NR, AP_meta$specimen.nr.)) #136
length(setdiff(AP_meta$specimen.nr., AP_images$SPECIMEN.NR)) #134
length(setdiff(bryo.meta$SPECIMEN.NR, AP_meta$specimen.nr.)) #137
length(setdiff(AP_meta$specimen.nr., bryo.meta$SPECIMEN.NR)) #136
setdiff(AP_images$SPECIMEN.NR, AP_meta$specimen.nr.)
AP_images.trimmed <- AP_images[!duplicated(AP_images$SPECIMEN.NR),]
length(setdiff(AP_images.trimmed$SPECIMEN.NR, bryo.meta$SPECIMEN.NR)) #136
length(setdiff(bryo.meta$SPECIMEN.NR, AP_images.trimmed$SPECIMEN.NR)) #134
length(setdiff(AP_images.trimmed$SPECIMEN.NR, AP_meta$specimen.nr.)) #137
length(setdiff(AP_meta$specimen.nr., AP_images.trimmed$SPECIMEN.NR)) #6
nrow(traits.df[traits.df$magnification == "x30"])
nrow(traits.df[traits.df$magnification == "x30",])
##what does it look like if all magnification is the same?
p <- ggplot(traits.df[traits.df$magnification == "x30",]) +
geom_density(aes(x = zh[traits.df$magnification == "x30"])) +
ggtitle("Zooid height by magnification x30, N = 16595") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_y_continuous(name = "Density") +
scale_x_continuous(name = "Zooid Height (pixels)")
p
ggsave(p, file = "./Results/zooid_height_magnification_x30.png", width = 14, height = 10, units = "cm")
## overlap between A. Porto images with output:
output.spID <- unique(output$SPECIMEN.NR)
output.spID
jpg.ID <- unique(AP_images$SPECIMEN.NR)
jpg.ID
setdiff(output.spID, jpg.ID) #"NA"
setdiff(jpg.ID, output.spID) #"3131.jpg" "492CC"    "494CC" not in output
##new match up csv between images and bryo meta
extra.images.AP <- setdiff(AP_images$SPECIMEN.NR, bryo.meta$SPECIMEN.NR)
extra.meta <- setdiff(bryo.meta$SPECIMEN.NR, AP_images$SPECIMEN.NR)
extra.images.AP
extra.meta
colnames(bryo.meta)
formation <- c(rep("NA", length(extra.images.AP), bryo.meta$FORMATION))
formation <- c(rep("NA", length(extra.images.AP)), bryo.meta$FORMATION)
fromDataset <- c(rep("AP.images", length(extra.images.AP)), rep("metadata", length(extra.meta)))
imageDiff <- c(extra.images.AP, extra.meta)
errors.df <- cbind(fromDataset, imageDiff, folder, formation, dates)
##new match up csv between images and bryo meta
extra.images.AP <- setdiff(AP_images$SPECIMEN.NR, bryo.meta$SPECIMEN.NR)
extra.meta <- setdiff(bryo.meta$SPECIMEN.NR, AP_images$SPECIMEN.NR)
errors.df <- cbind(fromDataset, imageDiff, formation)
formation <- c(rep("NA", length(extra.images.AP)), bryo.meta$FORMATION)
fromDataset <- c(rep("AP.images", length(extra.images.AP)), rep("metadata", length(extra.meta)))
imageDiff <- c(extra.images.AP, extra.meta)
errors.df <- cbind(fromDataset, imageDiff, formation)
fromDataset <- c(rep("AP.images", length(extra.images.AP)), rep("metadata", length(extra.meta)))
imageDiff <- c(extra.images.AP, extra.meta)
errors.df <- cbind(fromDataset, imageDiff)
##new match up csv between metadata from AP and bryo meta
extra.meta <- setdiff(bryo.meta$SPECIMEN.NR, AP_meta$specimen.nr.)
extra.meta.AP<- setdiff(AP_meta$specimen.nr., bryo.meta$SPECIMEN.NR)
fromDataset <- c(rep("AP.meta", length(extra.meta.AP)), rep("metadata", length(extra.meta)))
imageDiff <- c(extra.images.AP, extra.meta)
errors.df <- cbind(fromDataset, imageDiff)
AP.images.errors.df <- cbind(fromDataset, imageDiff)
meta.errors.df <- cbind(fromDataset, imageDiff)
fromDataset <- c(rep("AP.images", length(extra.images.AP)), rep("metadata", length(extra.meta)))
imageDiff <- c(extra.images.AP, extra.meta)
AP.images.errors.df <- cbind(fromDataset, imageDiff)
fromDataset <- c(rep("AP.meta", length(extra.meta.AP)), rep("metadata", length(extra.meta)))
imageDiff <- c(extra.images.AP, extra.meta)
meta.errors.df <- cbind(fromDataset, imageDiff)
##new match up csv between metadata from AP and bryo meta
extra.meta <- setdiff(bryo.meta$SPECIMEN.NR, AP_meta$specimen.nr.)
extra.meta.AP<- setdiff(AP_meta$specimen.nr., bryo.meta$SPECIMEN.NR)
fromDataset <- c(rep("AP.meta", length(extra.meta.AP)), rep("metadata", length(extra.meta)))
imageDiff <- c(extra.images.AP, extra.meta)
meta.errors.df <- cbind(fromDataset, imageDiff)
imageDiff <- c(extra.meta.AP, extra.meta)
fromDataset <- c(rep("AP.meta", length(extra.meta.AP)), rep("metadata", length(extra.meta)))
imageDiff <- c(extra.meta.AP, extra.meta)
meta.errors.df <- cbind(fromDataset, imageDiff)
write.csv(AP.images.errors.df,
"AP.images.errors.df.csv",
row.names = FALSE,
sep = ";")
write.csv(AP.images.errors.df,
"./Results/AP.images.errors.df.csv",
row.names = FALSE)
write.csv(meta.errors.df,
"./Results/meta.errors.df.csv",
row.names = FALSE)
view(bryo.meta)
view(AP_meta)
view(AP_images)
