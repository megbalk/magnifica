library(ggplot2)
library(data.table)
library(evolqg)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(eval = FALSE)
library(ggplot2)
library(data.table)
library(evolqg)
install.packages('evolqg')
library(ggplot2)
library(data.table)
library(evolqg)
install.packages("evolqg")
install.packages("classInt")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(eval = FALSE)
library(ggplot2)
library(data.table)
library(evolqg)
library(ggplot2)
library(data.table)
library(evolqg)
library(ggplot2)
library(data.table)
library(evolqg)
install.packages("evolqg")
install.packages('matrix')
install.packages('Matrix')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(eval = FALSE)
library(ggplot2)
library(data.table)
library(evolqg)
sessionInfo()
install.packages('evolqg')
install.packages('devtools')
sessionInfo()
library(devtools)
install_github("lem-usp/evolqg")
install_github("zarquon42b/Morpho", local=FALSE)
install.packages('units')
install.packages('rcpp')
install.packages('Rcpp')
install.packages('units')
install.packages('units')
install_github("zarquon42b/Morpho", local=FALSE)
install.packages('MCMCpack')
install.packages('Rvcg')
install.packages('Rvcg')
install.packages('sf')
install.packages('RcppEigen')
install.packages('SparseM')
install.packages('quantreg')
install.packages('quantreg')
install.packages('igraph')
devtools::install_github("igraph/rigraph")
install.packages('Matrix')
install.packages('Matrix')
install.packages("Matrix", repos="http://R-Forge.R-project.org")
install.packages("Matrix", repos="http://R-Forge.R-project.org")
devtools::install_github("igraph/rigraph")
install.packages('quantreg')
library(ggplot2)
library(data.table)
library(evolqg)
install.packages('evolqg')
library(ggplot2)
library(data.table)
library(evolqg)
library(dplyr)
library(nse)
install.packages('nse')
library(nse)
library(grid)
install.packages('grid')
install.packages("grid")
#library(grid)
library(gridBase)
library(gridExtra)
library(MCMCglmm)
library(MCMCglmm)
library(corrplot)
library(MASS)
library(reshape2)
library(scatterplot3d)
library(rgl)
library(scales)
library(RColorBrewer)
library(coin)
library(coin)
in_data<-read.table("chet_dat_rm.txt", header=TRUE,stringsAsFactors = F)
head(in_data)
in_age<-read.table("chet_age.txt", header=TRUE,stringsAsFactors = F)
colnames(in_age)=c("age","COL","SP")
head(in_age)
#Merge data sp by age
indat=merge(in_data,in_age,by="COL")
#Extract unique elements and trait names
colony_list<-unique(in_data$COL)
length(colony_list)
species_list<-unique(in_data$SP)
length(species_list)
traits=names(indat[,4:52])
colNums <- match(c(traits,"COL"),names(indat))
indat=as.data.frame(indat)
Fig <- list ()
for (i in 1:length(traits)){
trt=traits[i]
range_bin=c(min(indat[,3+i],na.rm = T),max(indat[,3+i],na.rm = T))
Fig[[i]] = ggplot(data=indat,aes_string(x=trt,fill="SP.x"))+
geom_histogram(position="identity",binwidth = (range_bin[2]-range_bin[1])/30)+
theme(legend.position="none",text = element_text(size=20))
rm(range_bin)
}
ml <- marrangeGrob(Fig, nrow=7, ncol=7)
capabilities()
Sys.getenv("DISPLAY")
x11()
x11()
Sys.getenv("DISPLAY")
capabilities()
capabilities()
#### LOAD PACKAGES ----
require(stringr)
require(dplyr)
require(ggplot2)
require(reshape2)
require(lmodel2)
require(tidyverse)
require(stringr)
setwd("~/Documents/GitHub/bryozoa/magnifica/Scripts")
setwd("~/Documents/GitHub/bryozoa/magnifica/")
#### LOAD DATA ----
bryo.images <- read.table("./Data/Steginoporella_magnifica_image_metadata_17Apr2023.csv",
header = TRUE,
sep = ";")
nrow(bryo.images) #1890
bryo.images.30 <- bryo.images[bryo.images$Magnification == 30,]
nrow(bryo.images.30) #1835
##### add in full file name #####
bryo.images.30$fileName.tif <- paste0(bryo.images.30$fileName, ".tif")
#### CREATE OLD FILE NAMES - DELETE LATER ####
recon.df <- read.table("./Data/image_merge_txt_usingfileName_DONE_17Apr2023.csv",
header = TRUE, sep = ";")
setdiff(recon.df$newFileName, bryo.images$fileName) #none
setdiff(bryo.images$fileName, recon.df$newFileName) #none
##### combine files to get path #####
recon.df.path <- recon.df[, c("newFileName", "path.tif")]
bryo.images.path <- merge(bryo.images.30, recon.df.path,
by.x = "fileName", by.y = "newFileName",
all.x = TRUE, all.y = FALSE)
nrow(bryo.images.path)
nrow(recon.df)
bryo.images.removed <- bryo.images[bryo.images$Magnification != 30,]
write.csv(bryo.images.removed,
"./Data/imagesRemoved.csv",
row.names = FALSE)
write.csv(bryo.images.path,
"./Data/filteredImageswithDupes.csv",
row.names = FALSE)
library(ggplot2)
library(data.table)
library(evolqg)
library(dplyr)
library(nse)
library(grid)
library(gridBase)
library(gridExtra)
library(MCMCglmm)
library(corrplot)
library(MASS)
library(reshape2)
library(scatterplot3d)
library(rgl)
library(scales)
library(RColorBrewer)
library(coin)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(eval = FALSE)
library(ggplot2)
library(data.table)
library(evolqg)
library(dplyr)
library(nse)
library(grid)
library(gridBase)
library(gridExtra)
library(MCMCglmm)
library(corrplot)
library(MASS)
library(reshape2)
library(scatterplot3d)
library(rgl)
library(scales)
library(RColorBrewer)
library(coin)
in_data<-read.table("chet_dat_rm.txt", header=TRUE,stringsAsFactors = F)
head(in_data)
in_age<-read.table("chet_age.txt", header=TRUE,stringsAsFactors = F)
colnames(in_age)=c("age","COL","SP")
head(in_age)
#Merge data sp by age
indat=merge(in_data,in_age,by="COL")
#Extract unique elements and trait names
colony_list<-unique(in_data$COL)
length(colony_list)
species_list<-unique(in_data$SP)
length(species_list)
traits=names(indat[,4:52])
colNums <- match(c(traits,"COL"),names(indat))
indat=as.data.frame(indat)
Fig <- list ()
for (i in 1:length(traits)){
trt=traits[i]
range_bin=c(min(indat[,3+i],na.rm = T),max(indat[,3+i],na.rm = T))
Fig[[i]] = ggplot(data=indat,aes_string(x=trt,fill="SP.x"))+
geom_histogram(position="identity",binwidth = (range_bin[2]-range_bin[1])/30)+
theme(legend.position="none",text = element_text(size=20))
rm(range_bin)
}
ml <- marrangeGrob(Fig, nrow=7, ncol=7)
ml
trt_lg_N=c("COL","SP.x","age","LZ","WZ","LO","WO","LD","LAVS", "LAVL","NUMA")
dat_lg_N=indat[ intersect(colnames(indat), trt_lg_N)]
head(dat_lg_N)
mean_by_age=setDT(na.omit(dat_lg_N))[, lapply(.SD, mean, na.rm=F), by = .(SP.x,age)]
head(mean_by_age[order(mean_by_age$SP.x)])
colony_means=setDT(na.omit(dat_lg_N))[, lapply(.SD, mean, na.rm=F), by = .(SP.x,COL)]
head(colony_means[order(colony_means$SP.x)])
sp_mean=setDT(na.omit(dat_lg_N))[, lapply(.SD, mean, na.rm=F), by = .(SP.x)]
head(sp_mean[order(sp_mean$SP.x)])
dat_lda=dat_lg_N
dat_lda[,3:10]=scale(dat_lda[,3:10],center=F,scale=T)
data_discriminant=dat_lda
#Selecting the species that are present in Cheetham's Figure for comparison.
data_discriminant=data_discriminant[data_discriminant$SP.x=='auric'|
data_discriminant$SP.x=='lacry'|
data_discriminant$SP.x=='nsp09'|
data_discriminant$SP.x=='nsp10'|
data_discriminant$SP.x=='coll'|
data_discriminant$SP.x=='nsp03'|
data_discriminant$SP.x=='nsp04',]
data_plot=na.omit(data_discriminant[,1:10])
r3 <- lda(formula = SP.x ~ .,
data = data_plot[,2:10], method='mle')
plda = predict(object = r3, # predictions
newdata = data_plot)
prop.lda = r3$svd^2/sum(r3$svd^2) #proportion of the variance explained by each LD axis
dataset = data.frame(species = (data_plot)[,"SP.x"],
lda = plda$x)
p1 <- ggplot(dataset) + geom_point(aes(lda.LD1, lda.LD2, color = species), size = 4) +
labs(x = paste("LD1 (", percent(prop.lda[1]), ")", sep=""),
y = paste("LD2 (", percent(prop.lda[2]), ")", sep=""))
#Preparing the data
colony_SP=split.data.frame(dat_lg_N,dat_lg_N$SP.x)
sample_sizes=lapply(colony_SP,function(x){dim(x)[1]})
enough=as.matrix(sample_sizes)>100
colony_final=colony_SP[names(enough[enough==T,])]
col_data=lapply(colony_final,function(x) x[complete.cases(x),])
#Setting priors for MCMC chain
phen.var=lapply(col_data,function (x){ (cov(x[,3:10]))})
prior=lapply(phen.var, function (x){list(G=list(G1=list(V=x/2,nu=2),
G2=list(V=x/4,nu=2)),
R=list(V=x/4,nu=2))})
length(col_data)
col_data
length(formations)
prior
phen.var
prior
head(in_data)
prior
library(ggplot2)
library(data.table)
library(evolqg)
library(dplyr)
library(nse)
library(grid)
library(gridBase)
library(gridExtra)
library(MCMCglmm)
library(corrplot)
library(MASS)
library(reshape2)
library(scatterplot3d)
library(rgl)
library(scales)
library(RColorBrewer)
library(coin)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(eval = FALSE)
library(ggplot2)
library(data.table)
library(evolqg)
library(dplyr)
library(nse)
library(grid)
library(gridBase)
library(gridExtra)
library(MCMCglmm)
library(corrplot)
library(MASS)
library(reshape2)
library(scatterplot3d)
library(rgl)
library(scales)
library(RColorBrewer)
library(coin)
in_data<-read.table("chet_dat_rm.txt", header=TRUE,stringsAsFactors = F)
head(in_data)
in_age<-read.table("chet_age.txt", header=TRUE,stringsAsFactors = F)
colnames(in_age)=c("age","COL","SP")
head(in_age)
#Merge data sp by age
indat=merge(in_data,in_age,by="COL")
#Extract unique elements and trait names
colony_list<-unique(in_data$COL)
length(colony_list)
species_list<-unique(in_data$SP)
length(species_list)
traits=names(indat[,4:52])
colNums <- match(c(traits,"COL"),names(indat))
indat=as.data.frame(indat)
Fig <- list ()
for (i in 1:length(traits)){
trt=traits[i]
range_bin=c(min(indat[,3+i],na.rm = T),max(indat[,3+i],na.rm = T))
Fig[[i]] = ggplot(data=indat,aes_string(x=trt,fill="SP.x"))+
geom_histogram(position="identity",binwidth = (range_bin[2]-range_bin[1])/30)+
theme(legend.position="none",text = element_text(size=20))
rm(range_bin)
}
ml <- marrangeGrob(Fig, nrow=7, ncol=7)
ml
trt_lg_N=c("COL","SP.x","age","LZ","WZ","LO","WO","LD","LAVS", "LAVL","NUMA")
dat_lg_N=indat[ intersect(colnames(indat), trt_lg_N)]
head(dat_lg_N)
mean_by_age=setDT(na.omit(dat_lg_N))[, lapply(.SD, mean, na.rm=F), by = .(SP.x,age)]
head(mean_by_age[order(mean_by_age$SP.x)])
colony_means=setDT(na.omit(dat_lg_N))[, lapply(.SD, mean, na.rm=F), by = .(SP.x,COL)]
head(colony_means[order(colony_means$SP.x)])
sp_mean=setDT(na.omit(dat_lg_N))[, lapply(.SD, mean, na.rm=F), by = .(SP.x)]
head(sp_mean[order(sp_mean$SP.x)])
dat_lda=dat_lg_N
dat_lda[,3:10]=scale(dat_lda[,3:10],center=F,scale=T)
data_discriminant=dat_lda
#Selecting the species that are present in Cheetham's Figure for comparison.
data_discriminant=data_discriminant[data_discriminant$SP.x=='auric'|
data_discriminant$SP.x=='lacry'|
data_discriminant$SP.x=='nsp09'|
data_discriminant$SP.x=='nsp10'|
data_discriminant$SP.x=='coll'|
data_discriminant$SP.x=='nsp03'|
data_discriminant$SP.x=='nsp04',]
data_plot=na.omit(data_discriminant[,1:10])
r3 <- lda(formula = SP.x ~ .,
data = data_plot[,2:10], method='mle')
plda = predict(object = r3, # predictions
newdata = data_plot)
prop.lda = r3$svd^2/sum(r3$svd^2) #proportion of the variance explained by each LD axis
dataset = data.frame(species = (data_plot)[,"SP.x"],
lda = plda$x)
p1 <- ggplot(dataset) + geom_point(aes(lda.LD1, lda.LD2, color = species), size = 4) +
labs(x = paste("LD1 (", percent(prop.lda[1]), ")", sep=""),
y = paste("LD2 (", percent(prop.lda[2]), ")", sep=""))
plda_all=predict(object = r3, # predictions
newdata =na.omit(data_discriminant)[,3:10] )
dat_ld=data.frame(as.data.frame(plda_all$x),na.omit(data_discriminant)$age,
na.omit(data_discriminant)$SP.x)
colnames(dat_ld)[7:8]=c("Age", "SP")
ld_by_age=setDT(dat_ld)[, lapply(.SD, mean, na.rm = TRUE), by = .(Age,SP)]
ld_sort=ld_by_age[order(Age),]
split_sp_LD=dlply(ld_sort, .(SP))
pairing_sp=lapply(split_sp_LD, function(x) { cbind(x[-nrow(x),],x[-1,])})
listNames=c("Age","SP","LD1","LD2","LD3","LD4","LD5",
"LD6","Age.1","SP.1","LD1.1","LD2.1",
"LD3.1","LD4.1","LD5.1","LD6.1")
pairing_sp=lapply(pairing_sp, setNames, listNames)
combined_ready=do.call(rbind, pairing_sp)
combined_ready=combined_ready[order(combined_ready$Age),]
ld_sort=subset(ld_sort,ld_sort$SP%in%combined_ready$SP)
#Phylomorphospace
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
pal=getPalette(13)[3:13]
s3d=scatterplot3d(ld_sort$LD1,ld_sort$LD2,-ld_sort$Age,type="p",
color = getPalette(13)[as.integer(factor(ld_sort$SP))], pch=20,
main="Phylomorphospace",
xlab="LD1",
ylab="LD2",
zlab="Age", angle=30)
orig <- s3d$xyz.convert(combined_ready$LD1,
combined_ready$LD2,
-combined_ready$Age)
plane <- s3d$xyz.convert(combined_ready$LD1.1,
combined_ready$LD2.1,
-combined_ready$Age.1)
segments(orig$x, orig$y, plane$x,plane$y,
getPalette(13)[as.integer(factor(combined_ready$SP))],lwd=1)
#Rotatable Phylomophospace
plot3d(ld_sort$LD1, ld_sort$LD2, -ld_sort$Age,
col=getPalette(13)[as.integer(factor(ld_sort$SP))],
size=1.3,type='s', xlab='LD1',ylab='LD2',zlab='Time')
segments3d(x=as.vector(t(combined_ready[,c(3,11)])),
y=as.vector(t(combined_ready[,c(4,12)])),
z=-as.vector(t(combined_ready[,c(1,9)])),  col=getPalette(13)[as.integer(factor(rep(combined_ready$SP,each=2)))],lwd=2)
#movie3d(spin3d(axis = c(0, 0, 1)), duration = 30, #This line can be used to save a gif
#       dir = getwd())
dat_lda=dat_lg_N
dat_lda[,3:10]=scale(dat_lda[,3:10],center=F,scale=T)
data_discriminant=dat_lda
#Selecting the species that are present in Cheetham's Figure for comparison.
data_discriminant=data_discriminant[data_discriminant$SP.x=='auric'|
data_discriminant$SP.x=='lacry'|
data_discriminant$SP.x=='nsp09'|
data_discriminant$SP.x=='nsp10'|
data_discriminant$SP.x=='coll'|
data_discriminant$SP.x=='nsp03'|
data_discriminant$SP.x=='nsp04',]
data_plot=na.omit(data_discriminant[,1:10])
r3 <- lda(formula = SP.x ~ .,
data = data_plot[,2:10], method='mle')
plda = predict(object = r3, # predictions
newdata = data_plot)
prop.lda = r3$svd^2/sum(r3$svd^2) #proportion of the variance explained by each LD axis
dataset = data.frame(species = (data_plot)[,"SP.x"],
lda = plda$x)
p1 <- ggplot(dataset) + geom_point(aes(lda.LD1, lda.LD2, color = species), size = 4) +
labs(x = paste("LD1 (", percent(prop.lda[1]), ")", sep=""),
y = paste("LD2 (", percent(prop.lda[2]), ")", sep=""))
#Preparing the data
colony_SP=split.data.frame(dat_lg_N,dat_lg_N$SP.x)
sample_sizes=lapply(colony_SP,function(x){dim(x)[1]})
enough=as.matrix(sample_sizes)>100
colony_final=colony_SP[names(enough[enough==T,])]
col_data=lapply(colony_final,function(x) x[complete.cases(x),])
#Setting priors for MCMC chain
phen.var=lapply(col_data,function (x){ (cov(x[,3:10]))})
prior=lapply(phen.var, function (x){list(G=list(G1=list(V=x/2,nu=2),
G2=list(V=x/4,nu=2)),
R=list(V=x/4,nu=2))})
colony_SP
head(data_plot)
data_plot
r3 <- lda(formula = SP.x ~ .,
data = data_plot[,2:10], method='mle')
r3
plda = predict(object = r3, # predictions
newdata = data_plot)
prop.lda = r3$svd^2/sum(r3$svd^2) #proportion of the variance explained by each LD axis
dataset = data.frame(species = (data_plot)[,"SP.x"],
lda = plda$x)
p1 <- ggplot(dataset) + geom_point(aes(lda.LD1, lda.LD2, color = species), size = 4) +
labs(x = paste("LD1 (", percent(prop.lda[1]), ")", sep=""),
y = paste("LD2 (", percent(prop.lda[2]), ")", sep=""))
p1
#Preparing the data
colony_SP=split.data.frame(dat_lg_N,dat_lg_N$SP.x)
colony_SP
head(dat_lg_N)
sample_sizes=lapply(colony_SP,function(x){dim(x)[1]})
sample_sizes
