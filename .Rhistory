diag(corr_mat) = 1
paste("Random Skewers similarity matrix")
corrplot.mixed(corr_mat,upper = "number", lower = "pie")
pop.size = c(5:500) #Starting at 500 individuals and going down to 5
#is.positive.definite(G_ext[[1]]) #No
#is.positive.definite(round(G_ext[[1]], 10))
#cov.matrix = RandomMatrix(8, 1, 1, 100) #for testing
#G_ext = list(G_ext$NKLS, cov.matrix) #for testing
pop.dist <- lapply(pop.size, function (x){mvrnorm(n = x, rep(0, 8), G_ext[[1]])})
pop.cv <- lapply(pop.dist, cov)
Ext_std_variances = lapply(G_ext, diag)
Ext_eig_variances = lapply(G_ext, function (x) {eigen(x)$values})
comp_mat = RandomSkewers(G_ext) #need at least
corr_mat = comp_mat$correlations + t(comp_mat$correlations)
diag(corr_mat) = 1
paste("Random Skewers similarity matrix")
corrplot.mixed(corr_mat,upper = "number", lower = "pie")
pop.size = c(5:500) #Starting at 500 individuals and going down to 5
#is.positive.definite(G_ext[[1]]) #No
#is.positive.definite(round(G_ext[[1]], 10))
#cov.matrix = RandomMatrix(8, 1, 1, 100) #for testing
#G_ext = list(G_ext$NKLS, cov.matrix) #for testing
pop.dist <- lapply(pop.size, function (x){mvrnorm(n = x, rep(0, 8), G_ext[[1]])})
pop.cv <- lapply(pop.dist, cov)
RS_result = RandomSkewers(pop.cv, G_ext[[1]])
results.RS <- Rarefaction(log(mean_by_colony[, 1:8]), RandomSkewers, num.reps = 20)
res_melt=as.data.frame(data.matrix(melt(results.RS))) #melted dataframe
results.RS <- Rarefaction(log(mean_by_colony[, 1:8]), RandomSkewers, num.reps = 20)
mean_by_colony
length(mean_by_colony)
results.RS <- Rarefaction(log(mean_by_colony[, 2:9]), RandomSkewers, num.reps = 20)
results.RS
results.RS <- Rarefaction(mean_by_colony[, 2:9], RandomSkewers, num.reps = 20)
results.RS
res_melt = as.data.frame(data.matrix(melt(results.RS))) #melted dataframe
x <- mean(1,2,3,4)
log10(x)
x
mean(1,2,3,4)
help(mean)
x <- c(1,2,3,4)
mean(x)
x.m <- mean(x)
log10(x.m)
x.l <- log(x)
x.l
mean(x.l)
x.l <- log10(x)
mean(x.l)
res_melt
colony_means
mean_by_colony
mean_by_form
# Meghan A. Balk
# meghan.balk@gmail.com
# initially created: Jun 2023
# last updated:
print("update 'last updated!'")
# Meghan A. Balk
# meghan.balk@gmail.com
# initially created: Jun 2023
# last updated:
print("update 'last updated!' & set working directory")
# Meghan A. Balk
# meghan.balk@gmail.com
# initially created: Jun 2023
# last updated:
print("update 'last updated' & set working directory!")
zooid_form
dat_lg_N
head(dat_lg_N)
sample_sizes
mean_by_formation
mean_by_formation = dat_lg_N %>%
group_by(formation, specimenNR) %>%
summarize(avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
mean_by_formation
#### SUMMARY STATISTICS ----
mean_by_formation = dat_lg_N %>%
group_by(formation) %>%
summarize(n = nrow(),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
#### SUMMARY STATISTICS ----
mean_by_formation = dat_lg_N %>%
group_by(formation) %>%
summarize(n = count(),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
#### SUMMARY STATISTICS ----
mean_by_formation = dat_lg_N %>%
group_by(formation) %>%
summarize(n = tally(),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
#### SUMMARY STATISTICS ----
mean_by_formation = dat_lg_N %>%
group_by(formation) %>%
summarize(n = n(),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
mean_by_formation
#### SUMMARY STATISTICS ----
mean_by_formation = dat_lg_N %>%
group_by(formation) %>%
summarize(n.zooid = n(),
n.col = count(unique(specimenNR)),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
#### SUMMARY STATISTICS ----
mean_by_formation = dat_lg_N %>%
group_by(formation) %>%
summarize(n.zooid = n(),
n.col = tally(unique(specimenNR)),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
#### SUMMARY STATISTICS ----
mean_by_formation = dat_lg_N %>%
group_by(formation) %>%
summarize(n.zooid = n(),
n.col = n(unique(specimenNR)),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
#### SUMMARY STATISTICS ----
mean_by_formation = dat_lg_N %>%
group_by(formation) %>%
summarize(n.zooid = n(),
n.col = length(unique(specimenNR)),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
mean_by_formation
mean_by_formation = dat_lg_N %>%
group_by(formation, specimenNR) %>%
summarize(n = length(unique(new.id)),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
mean_by_formation
#### SUMMARY STATISTICS ----
mean_by_form.col = dat_lg_N %>%
group_by(formation) %>%
summarize(n.zooid = length(unique(new.id)),
n.col = length(unique(specimenNR)),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
mean_by_form.col
mean_by_colony = dat_lg_N %>%
group_by(specimenNR) %>%
summarize(n.zooid = length(unique(new.id)),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
dat_lg_N
head(dat_lg_N)
mean_by_colony = dat_lg_N %>%
group_by(specimenNR) %>%
summarize(n.zooid = length(unique(new.id)),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
mean_by_formation = dat_lg_N %>%
group_by(formation, specimenNR) %>%
summarize(n.zooid = length(unique(new.id)),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
#### SUMMARY STATISTICS ----
mean_by_form.col = dat_lg_N %>%
group_by(formation) %>%
summarize(n.zooid = length(unique(new.id)),
n.col = length(unique(specimenNR)),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
mean_by_colony = dat_lg_N %>%
group_by(specimenNR) %>%
summarize(n.zooid = length(unique(new.id)),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
mean_by_colony
col_means = dat_lg_N %>%
group_by(specimenNR) %>%
summarize(n.zooid = length(unique(new.id)),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
col_means
colony_samples = split.data.frame(col_means, col_means$specimenNR) #Sample size
sample_sizes_G = lapply(colony_samples, function(x){dim(x)[1]})
phen.var
form_data
#### SUMMARY STATISTICS ----
mean_by_formation = dat_lg_N %>%
group_by(formation) %>%
summarize(n.zooid = length(unique(new.id)),
n.col = length(unique(specimenNR)),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
mean_by_formation
mean_by_formation = dat_lg_N %>%
group_by(formation, specimenNR) %>%
summarize(n.zooid = length(unique(new.id)),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
mean_by_formation
mean_by_formation_colony = dat_lg_N %>%
group_by(formation, specimenNR) %>%
summarize(n.zooid = length(unique(new.id)),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
mean_by_formation = mean_by_formation_colony %>%
group_by(formation) %>%
summarize(n.col = length(unique(specimenNR)),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
colnames(mean_by_formation_colony)
mean_by_formation = mean_by_formation_colony %>%
group_by(formation) %>%
summarize(n.col = length(unique(specimenNR)),
avg.zh = mean(avg.zh, na.rm = T),
avg.mpw.b = mean(avg.mpw.b, na.rm = T),
avg.cw.m = mean(avg.cw.m, na.rm = T),
avg.cw.d = mean(avg.cw.d, na.rm = T),
avg.ow.m = mean(avg.ow.m, na.rm = T),
avg.o.side = mean(avg.o.side, na.rm = T),
avg.c.side = mean(avg.c.side, na.rm = T),
avg.oh = mean(avg.oh, na.rm = T)) %>%
as.data.frame()
mean_by_formation
colony_means = dat_lg_N %>%
group_by(specimenNR) %>%
summarize(n.zooid = length(unique(new.id)),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
colony_means
traits = names(df[, c("zh", "mpw.b", "cw.m", "cw.d",
"ow.m", "oh", "c.side", "o.side")])
colNums <- match(c(traits,"new.id"), names(df))
df = as.data.frame(df)
#### PLOT TRAITS ----
Fig <- list ()
for (i in 1:length(traits)){
Fig[[i]] = ggplot(data = df)+
geom_density(aes(x = log10(df[,5+i]),
group = formation,
col = formation)) +
theme(legend.position="none", text = element_text(size=20)) +
scale_x_continuous(name = traits[i])
}
ml <- marrangeGrob(Fig, nrow = 4, ncol = 2)
ml
ggsave(ml, file = "./Results/trait.interest_distribution_notLog_26June2023.png",
width = 14, height = 10, units = "cm")
#### REDUCE TO TRAITS OF INTEREST ----
trt_lg_N = c("formation", "specimenNR", "new.id", traits)
dat_lg_N = df[intersect(colnames(df), trt_lg_N)]
head(dat_lg_N)
mean_by_formation_colony = dat_lg_N %>%
group_by(formation, specimenNR) %>%
summarize(n.zooid = length(unique(new.id)),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
mean_by_formation_colony
#means of means
mean_by_formation = mean_by_formation_colony %>%
group_by(formation) %>%
summarize(n.col = length(unique(specimenNR)),
avg.zh = mean(avg.zh, na.rm = T),
avg.mpw.b = mean(avg.mpw.b, na.rm = T),
avg.cw.m = mean(avg.cw.m, na.rm = T),
avg.cw.d = mean(avg.cw.d, na.rm = T),
avg.ow.m = mean(avg.ow.m, na.rm = T),
avg.o.side = mean(avg.o.side, na.rm = T),
avg.c.side = mean(avg.c.side, na.rm = T),
avg.oh = mean(avg.oh, na.rm = T)) %>%
as.data.frame()
mean_by_formation
colony_means = dat_lg_N %>%
group_by(specimenNR) %>%
summarize(n.zooid = length(unique(new.id)),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T),
avg.oh = mean(oh, na.rm = T)) %>%
as.data.frame()
colony_means
head(mean_by_formation_colony)
head(sort(mean_by_formation_colony))
df <- read.csv("./Results/traits_26Jun2023.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
df$new.id <- paste0(df$boxID, "_", df$image)
zooid_list <- unique(df$image)
length(zooid_list) #1464
colony_list <- unique(df$specimenNR)
length(colony_list) #742
# arrange formations from oldest to youngest
df$formation <- factor(df$formation, levels = c("NKLS", "NKBS", "Tewkesbury",
"Waipuru", "Upper Kai-Iwi",
"Tainui", "SHCSBSB"))
formation_list<-unique(df$formation)
length(formation_list) #7
traits = names(df[, c("zh", "mpw.b", "cw.m", "cw.d",
"ow.m", "oh", "c.side", "o.side")])
colNums <- match(c(traits,"new.id"), names(df))
df = as.data.frame(df)
#### PLOT TRAITS ----
Fig <- list ()
for (i in 1:length(traits)){
Fig[[i]] = ggplot(data = df)+
geom_density(aes(x = log10(df[,5+i]),
group = formation,
col = formation)) +
theme(legend.position="none", text = element_text(size=20)) +
scale_x_continuous(name = traits[i])
}
ml <- marrangeGrob(Fig, nrow = 4, ncol = 2)
ml
traits
head(df)
ml
head(df)
length(df)
df.x <- df[, c(1:5, which(names(df) %in% traits)), 18] #750
colnames(df.x)
df.x <- df[, c(1:5, 18, which(names(df) %in% traits)), 18] #750
colnames(df.x)
df <- df[, c(1:5, 18, which(names(df) %in% traits))] #750
#### PLOT TRAITS ----
Fig <- list ()
for (i in 1:length(traits)){
Fig[[i]] = ggplot(data = df)+
geom_density(aes(x = log10(c[, 6+i]),
group = formation,
col = formation)) +
theme(legend.position="none", text = element_text(size=20)) +
scale_x_continuous(name = traits[i])
}
ml <- marrangeGrob(Fig, nrow = 4, ncol = 2)
length(traits)
length(df)
df <- df[, c(1:5, 18, which(names(df) %in% traits))] #750
df.x <- df[, c(1:5, 18, which(names(df) %in% traits))] #750
source("~/Documents/GitHub/bryozoa/magnifica/Scripts/gp.R")
df.x
head(df.x)
df.trim <- df[, c(1:5, 18, which(names(df) %in% traits))]
setwd("~/Documents/GitHub/bryozoa/magnifica/Scripts")
setwd("~/Documents/GitHub/bryozoa/magnifica/)
)
setwd("~/Documents/GitHub/bryozoa/magnifica/")
