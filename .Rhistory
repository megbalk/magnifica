p.vcv.unt[5] <- model_G[[2]]$VCV[5, 101] #ow.m
p.vcv.unt[6] <- model_G[[2]]$VCV[8, 128] #oh
p.vcv.unt[7] <- model_G[[2]]$VCV[6, 110] #c.side
p.vcv.unt[8] <- model_G[[2]]$VCV[7, 119] #o.side
p.vcv.unt
diag(phen.var[[2]])
Pmat
Gmat
colnams(model_G[[2]]$VCV)
colnames(model_G[[2]]$VCV)
# why aren't traits labeled??
trait.mat <- c("ln.zh", "ln.mpb.w", "ln.cw.m", "ln.cw.d",
"ln.ow.m", "ln.oh", "ln.c.side", "ln.o.side")
for (i in seq_along(Gmat)){
colnames(Gmat[[i]]) <- colnames(trait.mat)
}
for (i in seq_along(Gmat)){
rownames(Gmat[[i]]) <- colnames(trait.mat)
}
Gmat
# why aren't traits labeled??
trait.mat <- c("ln.zh", "ln.mpb.w", "ln.cw.m", "ln.cw.d",
"ln.ow.m", "ln.oh", "ln.c.side", "ln.o.side")
for (i in seq_along(Gmat)){
colnames(Gmat[[i]]) <- colnames(trait.mat)
}
for (i in seq_along(Gmat)){
rownames(Gmat[[i]]) <- colnames(trait.mat)
}
Gmat
colnames(Gmat[[i]]) <- names(trait.mat)
for (i in seq_along(Gmat)){
colnames(Gmat[[i]]) <- names(trait.mat)
}
for (i in seq_along(Gmat)){
rownames(Gmat[[i]]) <- names(trait.mat)
}
# why aren't traits labeled??
trait.mat <- c("ln.zh", "ln.mpb.w", "ln.cw.m", "ln.cw.d",
"ln.ow.m", "ln.oh", "ln.c.side", "ln.o.side")
for (i in seq_along(Gmat)){
colnames(Gmat[[i]]) <- names(trait.mat)
}
for (i in seq_along(Gmat)){
rownames(Gmat[[i]]) <- names(trait.mat)
}
Gmat = lapply(g.model, function (x) {
matrix(posterior.mode(x$VCV)[1:ntraits^2], ntraits, ntraits)})
#label lists as formations
names(Gmat) = names(zooid_by_form[2]) #formation_list
# why aren't traits labeled??
trait.mat <- c("ln.zh", "ln.mpb.w", "ln.cw.m", "ln.cw.d",
"ln.ow.m", "ln.oh", "ln.c.side", "ln.o.side")
for (i in seq_along(Gmat)){
colnames(Gmat[[i]]) <- names(trait.mat)
}
for (i in seq_along(Gmat)){
rownames(Gmat[[i]]) <- names(trait.mat)
}
Gmat
Gmat = lapply(g.model, function (x) {
matrix(posterior.mode(x$VCV)[1:ntraits^2], ntraits, ntraits)})
###### POSTERIOR G MATRIX ------
#Retrieving G from posterior
g.model = model_G
ntraits = 8
Gmat = lapply(g.model, function (x) {
matrix(posterior.mode(x$VCV)[1:ntraits^2], ntraits, ntraits)})
#label lists as formations
names(Gmat) = names(zooid_by_form[2]) #formation_list
# why aren't traits labeled??
trait.mat <- c("ln.zh", "ln.mpb.w", "ln.cw.m", "ln.cw.d",
"ln.ow.m", "ln.oh", "ln.c.side", "ln.o.side")
for (i in seq_along(Gmat)){
colnames(Gmat[[i]]) <- names(trait.mat)
}
for (i in seq_along(Gmat)){
rownames(Gmat[[i]]) <- names(trait.mat)
}
Gmat
names(trait.mat)
for (i in seq_along(Gmat)){
colnames(Gmat[[i]]) <- trait.mat[i]
}
for (i in seq_along(Gmat)){
rownames(Gmat[[i]]) <- trait.mat[i]
}
##### G VARIANCES -----
lapply(Gmat, isSymmetric)  #is.symmetric.matrix
names(means)
names(zooid_by_form)
names(mean_by_formation)
names(mean_by_formation_colony)
names(Pmat)
rownames(Pmat)
rownames(Pmat[[1]])
for (i in seq_along(Gmat)){
colnames(Gmat[[i]]) <- c("ln.zh", "ln.mpb.w", "ln.cw.m", "ln.cw.d",
"ln.ow.m", "ln.c.side", "ln.o.side", "ln.oh")
}
for (i in seq_along(Gmat)){
rownames(Gmat[[i]]) <- c("ln.zh", "ln.mpb.w", "ln.cw.m", "ln.cw.d",
"ln.ow.m", "ln.c.side", "ln.o.side", "ln.oh")
}
Gmat
diag(Gmat)
diag(Pmat[[2]])
diag(Gmat[[2]])
plot(diag(Gmat[[1]]), diag(Pmat[[1]]),
pch = 19, col = col.form[1],
xlab = "G non-standardized diagonal",
ylab = "P non-standardized diagonal",
main = "NKLS",
xlim = c(0, .05),
ylim = c(0, .2))
abline(0, 1)
plot(diag(Gmat[[1]]), diag(Pmat[[1]]),
pch = 19, col = col.form[1],
xlab = "G non-standardized diagonal",
ylab = "P non-standardized diagonal",
main = "NKLS",
xlim = c(0, .05),
ylim = c(0, .2))
plot(diag(Gmat[[1]]), diag(Pmat[[1]]),
pch = 19, col = col.form[1],
xlab = "G non-standardized diagonal",
ylab = "P non-standardized diagonal",
main = "NKLS",
xlim = c(0, .05),
ylim = c(0, .2))
abline(0, 1)
summary(lm(diag(Pmat[[1]]) ~ diag(Gmat[[1]])))
plot(diag(Gmat[[2]]), diag(Pmat[[2]]),
pch = 19, col = col.form[2],
xlab = "G non-standardized diagonal",
ylab = "P non-standardized diagonal",
main = "NKBS")
abline(0, 1)
diag(Gmat[[4]])
diag(Pmat[[4]])
diag(Pmat[[5]])
diag(Gmat[[5]])
traits
prior$NKBS$G$G1$V
colnames(model_G[[2]]$VCV)
diag(Gmat[[1]])
d.gmat.nkbs <- diag(Gmat[[1]])[1,2,3,4,5,8,6,7]
diag(Gmat[[1]])
xx <- diag(Gmat[[1]])
xx[1,2,3,4,5,8,6,7]
p.vcv.col.nkbs
model_G[[4]]
formations
formation_list
colnames(model_G[[4]]$VCV)
#just colony.id
#c(1, 10, 19, 28, 37, 46, 55, 64)
p.vcv.col.wp <- c()
p.vcv.col.wp[1] <- model_G[[2]]$VCV[1, 1] #zh
p.vcv.col.wp[2] <- model_G[[2]]$VCV[2, 10] #mpb.w
p.vcv.col.wp[3] <- model_G[[2]]$VCV[3, 19] #cw.m
p.vcv.col.wp[4] <- model_G[[2]]$VCV[4, 28] #cw.d
p.vcv.col.wp[5] <- model_G[[2]]$VCV[5, 37] #ow.m
p.vcv.col.wp[6] <- model_G[[2]]$VCV[8, 64] #oh
p.vcv.col.wp[7] <- model_G[[2]]$VCV[6, 46] #c.side
p.vcv.col.wp[8] <- model_G[[2]]$VCV[7, 55] #o.side
p.vcv.col.wp
diag(phen.var[[2]]) #oh not bigger, of course
#just units
#c(65, 74, 83, 92, 101, 110, 119, 128) #model g has oh coming last
p.vcv.unt.wp <- c()
p.vcv.unt.wp[1] <- model_G[[2]]$VCV[1, 65] #zh
p.vcv.unt.wp[2] <- model_G[[2]]$VCV[2, 74] #mpb.w
p.vcv.unt.wp[3] <- model_G[[2]]$VCV[3, 83] #cw.m
p.vcv.unt.wp[4] <- model_G[[2]]$VCV[4, 92] #cw.d
p.vcv.unt.wp[5] <- model_G[[2]]$VCV[5, 101] #ow.m
p.vcv.unt.wp[6] <- model_G[[2]]$VCV[8, 128] #oh
p.vcv.unt.wp[7] <- model_G[[2]]$VCV[6, 110] #c.side
p.vcv.unt.wp[8] <- model_G[[2]]$VCV[7, 119] #o.side
p.vcv.unt.wp
diag(phen.var[[2]])
p.vcv.unt.nkbs
diag(phen.var[[4]])
diag(phen.var[[4]])
p.vcv.unt.wp
diag(phen.var[[4]]) #oh not bigger, of course
p.vcv.col.wp
colnames(model_G[[5]]$VCV)
#just colony.id
#c(1, 10, 19, 28, 37, 46, 55, 64)
p.vcv.col.uki <- c()
p.vcv.col.uki[1] <- model_G[[2]]$VCV[1, 1] #zh
p.vcv.col.uki[2] <- model_G[[2]]$VCV[2, 10] #mpb.w
p.vcv.col.uki[3] <- model_G[[2]]$VCV[3, 19] #cw.m
p.vcv.col.uki[4] <- model_G[[2]]$VCV[4, 28] #cw.d
p.vcv.col.uki[5] <- model_G[[2]]$VCV[5, 37] #ow.m
p.vcv.col.uki[6] <- model_G[[2]]$VCV[8, 64] #oh
p.vcv.col.uki[7] <- model_G[[2]]$VCV[6, 46] #c.side
p.vcv.col.uki[8] <- model_G[[2]]$VCV[7, 55] #o.side
diag(phen.var[[5]]) #oh not bigger, of course
p.vcv.col.uki
#just units
#c(65, 74, 83, 92, 101, 110, 119, 128) #model g has oh coming last
p.vcv.unt.uki <- c()
p.vcv.unt.uki[1] <- model_G[[2]]$VCV[1, 65] #zh
p.vcv.unt.uki[2] <- model_G[[2]]$VCV[2, 74] #mpb.w
p.vcv.unt.uki[3] <- model_G[[2]]$VCV[3, 83] #cw.m
p.vcv.unt.uki[4] <- model_G[[2]]$VCV[4, 92] #cw.d
p.vcv.unt.uki[5] <- model_G[[2]]$VCV[5, 101] #ow.m
p.vcv.unt.uki[6] <- model_G[[2]]$VCV[8, 128] #oh
p.vcv.unt.uki[7] <- model_G[[2]]$VCV[6, 110] #c.side
p.vcv.unt.uki[8] <- model_G[[2]]$VCV[7, 119] #o.side
p.vcv.unt.uki
diag(phen.var[[5]]) #cw.d is smaller
#just units
#c(65, 74, 83, 92, 101, 110, 119, 128) #model g has oh coming last
p.vcv.unt.wp <- c()
p.vcv.unt.wp[1] <- model_G[[2]]$VCV[1, 65] #zh
p.vcv.unt.wp[2] <- model_G[[2]]$VCV[2, 74] #mpb.w
p.vcv.unt.wp[3] <- model_G[[2]]$VCV[3, 83] #cw.m
p.vcv.unt.wp[4] <- model_G[[2]]$VCV[4, 92] #cw.d
p.vcv.unt.wp[5] <- model_G[[2]]$VCV[5, 101] #ow.m
#just colony.id
#c(1, 10, 19, 28, 37, 46, 55, 64)
p.vcv.col.nkbs <- c()
p.vcv.col.nkbs[1] <- model_G[[2]]$VCV[1, 1] #zh
p.vcv.col.nkbs[2] <- model_G[[2]]$VCV[2, 10] #mpb.w
p.vcv.col.nkbs[3] <- model_G[[2]]$VCV[3, 19] #cw.m
p.vcv.col.nkbs[4] <- model_G[[2]]$VCV[4, 28] #cw.d
p.vcv.col.nkbs[5] <- model_G[[2]]$VCV[5, 37] #ow.m
p.vcv.col.nkbs[6] <- model_G[[2]]$VCV[8, 64] #oh
p.vcv.col.nkbs[7] <- model_G[[2]]$VCV[6, 46] #c.side
p.vcv.col.nkbs[8] <- model_G[[2]]$VCV[7, 55] #o.side
p.vcv.col.nkbs
diag(phen.var[[2]]) #oh not bigger, of course
#just units
#c(65, 74, 83, 92, 101, 110, 119, 128) #model g has oh coming last
p.vcv.unt.nkbs <- c()
p.vcv.unt.nkbs[1] <- model_G[[2]]$VCV[1, 65] #zh
p.vcv.unt.nkbs[2] <- model_G[[2]]$VCV[2, 74] #mpb.w
p.vcv.unt.nkbs[3] <- model_G[[2]]$VCV[3, 83] #cw.m
p.vcv.unt.nkbs[4] <- model_G[[2]]$VCV[4, 92] #cw.d
p.vcv.unt.nkbs[5] <- model_G[[2]]$VCV[5, 101] #ow.m
p.vcv.unt.nkbs[6] <- model_G[[2]]$VCV[8, 128] #oh
p.vcv.unt.nkbs[7] <- model_G[[2]]$VCV[6, 110] #c.side
p.vcv.unt.nkbs[8] <- model_G[[2]]$VCV[7, 119] #o.side
p.vcv.unt.nkbs
diag(phen.var[[2]])
colnames(model_G[[4]]$VCV)
#just colony.id
#c(1, 10, 19, 28, 37, 46, 55, 64)
p.vcv.col.wp <- c()
p.vcv.col.wp[1] <- model_G[[4]]$VCV[1, 1] #zh
p.vcv.col.wp[2] <- model_G[[4]]$VCV[2, 10] #mpb.w
p.vcv.col.wp[3] <- model_G[[4]]$VCV[3, 19] #cw.m
p.vcv.col.wp[4] <- model_G[[4]]$VCV[4, 28] #cw.d
p.vcv.col.wp[5] <- model_G[[4]]$VCV[5, 37] #ow.m
p.vcv.col.wp[6] <- model_G[[4]]$VCV[8, 64] #oh
p.vcv.col.wp[7] <- model_G[[4]]$VCV[6, 46] #c.side
p.vcv.col.wp[8] <- model_G[[4]]$VCV[7, 55] #o.side
diag(phen.var[[4]]) #oh not bigger, of course
p.vcv.col.wp
#just units
#c(65, 74, 83, 92, 101, 110, 119, 128) #model g has oh coming last
p.vcv.unt.wp <- c()
p.vcv.unt.wp[1] <- model_G[[4]]$VCV[1, 65] #zh
p.vcv.unt.wp[2] <- model_G[[4]]$VCV[2, 74] #mpb.w
p.vcv.unt.wp[3] <- model_G[[4]]$VCV[3, 83] #cw.m
p.vcv.unt.wp[4] <- model_G[[4]]$VCV[4, 92] #cw.d
p.vcv.unt.wp[5] <- model_G[[4]]$VCV[5, 101] #ow.m
p.vcv.unt.wp[6] <- model_G[[4]]$VCV[8, 128] #oh
p.vcv.unt.wp[7] <- model_G[[4]]$VCV[6, 110] #c.side
p.vcv.unt.wp[8] <- model_G[[4]]$VCV[7, 119] #o.side
diag(phen.var[[4]]) #cw.d is smaller
p.vcv.unt.wp
#just colony.id
#c(1, 10, 19, 28, 37, 46, 55, 64)
p.vcv.col.uki <- c()
p.vcv.col.uki[1] <- model_G[[5]]$VCV[1, 1] #zh
p.vcv.col.uki[2] <- model_G[[5]]$VCV[2, 10] #mpb.w
p.vcv.col.uki[3] <- model_G[[5]]$VCV[3, 19] #cw.m
p.vcv.col.uki[4] <- model_G[[5]]$VCV[4, 28] #cw.d
p.vcv.col.uki[5] <- model_G[[5]]$VCV[5, 37] #ow.m
p.vcv.col.uki[6] <- model_G[[5]]$VCV[8, 64] #oh
p.vcv.col.uki[7] <- model_G[[5]]$VCV[6, 46] #c.side
p.vcv.col.uki[8] <- model_G[[5]]$VCV[7, 55] #o.side
p.vcv.col.uki
diag(phen.var[[5]]) #oh not bigger, of course
#just units
#c(65, 74, 83, 92, 101, 110, 119, 128) #model g has oh coming last
p.vcv.unt.uki <- c()
p.vcv.unt.uki[1] <- model_G[[5]]$VCV[1, 65] #zh
p.vcv.unt.uki[2] <- model_G[[5]]$VCV[2, 74] #mpb.w
p.vcv.unt.uki[3] <- model_G[[5]]$VCV[3, 83] #cw.m
p.vcv.unt.uki[4] <- model_G[[5]]$VCV[4, 92] #cw.d
p.vcv.unt.uki[5] <- model_G[[5]]$VCV[5, 101] #ow.m
p.vcv.unt.uki[6] <- model_G[[5]]$VCV[8, 128] #oh
p.vcv.unt.uki[7] <- model_G[[5]]$VCV[6, 110] #c.side
p.vcv.unt.uki[8] <- model_G[[5]]$VCV[7, 119] #o.side
p.vcv.unt.uki
diag(phen.var[[5]]) #cw.d is smaller
#just to look; highest 7836, smallest 454
by_form = lapply(by_form, function(x){dim(x)[1]})
by_form
#### SPLIT BY FORMATION ----
## by zooids:
by_form = split.data.frame(dat_lg_N,
dat_lg_N$formation)
#### SPLIT BY FORMATION ----
## by zooids:
by_form = split.data.frame(dat_lg_N,
dat_lg_N$formation)
#### LOAD LIBRARIES ----
library(ggplot2)
library(data.table)
library(evolqg)
library(dplyr)
library(nse)
library(grid)
library(gridBase)
library(gridExtra)
library(MCMCglmm)
library(corrplot)
library(MASS)
library(reshape2)
library(scatterplot3d)
library(rgl)
library(scales)
library(RColorBrewer)
library(coin)
df <- read.csv("./Results/traits_26Jun2023.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
df$zooid.id <- paste0(df$boxID, "_", df$image)
colnames(df)[colnames(df) == 'specimenNR'] <- 'colony.id'
#### PLOT THEME ----
#formations and colors:
#NKLS = #F8766D
#NKBS = #CD9600
#Twekesbury = #7CAE00
#Waipuru = #00BE67
#Upper Kai-Iwi = #00A9FF
#Tainui = #C77CFF
#SHCSBSB = #FF61CC
col.form = c("#F8766D", "#CD9600", "#7CAE00", "#00BE67", "#00A9FF", "#C77CFF", "#FF61CC")
zooid_list <- unique(df$zooid.id)
length(zooid_list) #15773
colony_list <- unique(df$colony.id)
length(colony_list) #742
##### FORMATIONS ----
# arrange formations from oldest to youngest
df$formation <- factor(df$formation, levels = c("NKLS", "NKBS", "Tewkesbury",
"Waipuru", "Upper Kai-Iwi",
"Tainui", "SHCSBSB"))
formation_list <- unique(df$formation)
length(formation_list) #7
##### LN TRANSFORM -----
df$ln.zh <- log(df$zh)
df$ln.mpw.b <- log(df$mpw.b)
df$ln.cw.m <- log(df$cw.m)
df$ln.cw.d <- log(df$cw.d)
df$ln.ow.m <- log(df$ow.m)
df$ln.oh <- log(df$oh)
df$ln.o.side <- log(df$o.side)
df$ln.c.side <- log(df$c.side)
traits = names(df[, c("ln.zh", "ln.mpw.b", "ln.cw.m", "ln.cw.d",
"ln.ow.m", "ln.oh", "ln.c.side", "ln.o.side")])
##### TRIM DATASET ----
df.trim <- df %>%
dplyr::select(zooid.id, colony.id, formation, matches(traits))
colNums <- match(c(traits, "zooid.id"), names(df.trim))
df = as.data.frame(df.trim)
##### DISTRIBUTIONS -----
p.zh = ggplot(data = df) +
geom_density(aes(x = df[, traits[1]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[1]) +
scale_color_manual(values = col.form)
names(df)
p.mpw.b = ggplot(data = df) +
geom_density(aes(x = df[, traits[2]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[2]) +
scale_color_manual(values = col.form)
p.cw.m = ggplot(data = df) +
geom_density(aes(x = df[, traits[3]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[3]) +
scale_color_manual(values = col.form)
p.cw.d = ggplot(data = df) +
geom_density(aes(x = df[, traits[4]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[4]) +
scale_color_manual(values = col.form)
p.ow.m = ggplot(data = df) +
geom_density(aes(x = df[, traits[5]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[5]) +
scale_color_manual(values = col.form)
p.oh = ggplot(data = df) +
geom_density(aes(x = df[, traits[6]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[6]) +
scale_color_manual(values = col.form)
p.c.side = ggplot(data = df) +
geom_density(aes(x = df[, traits[7]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[7]) +
scale_color_manual(values = col.form)
p.o.side = ggplot(data = df) +
geom_density(aes(x = df[, traits[8]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[8]) +
scale_color_manual(values = col.form)
Fig = list(p.zh, p.mpw.b, p.cw.m, p.cw.d, p.ow.m, p.oh, p.c.side, p.o.side)
ml <- marrangeGrob(Fig, nrow = 4, ncol = 2)
ml
#### REDUCE TO TRAITS OF INTEREST ----
trt_lg_N = c("formation", "colony.id", "zooid.id", traits)
dat_lg_N = df[intersect(colnames(df), trt_lg_N)]
head(dat_lg_N)
dat_lg_N
mean_by_formation_colony = dat_lg_N %>% #use this going forward
group_by(formation, colony.id) %>%
summarize(n.zooid = length(unique(zooid.id)),
avg.zh = mean(ln.zh, na.rm = T),
avg.mpw.b = mean(ln.mpw.b, na.rm = T),
avg.cw.m = mean(ln.cw.m, na.rm = T),
avg.cw.d = mean(ln.cw.d, na.rm = T),
avg.ow.m = mean(ln.ow.m, na.rm = T),
avg.oh = mean(ln.oh, na.rm = T),
avg.o.side = mean(ln.o.side, na.rm = T),
avg.c.side = mean(ln.c.side, na.rm = T)) %>%
as.data.frame()
#means of means
mean_by_formation = mean_by_formation_colony %>%
group_by(formation) %>%
summarize(n.col = length(unique(colony.id)),
avg.zh = mean(avg.zh, na.rm = T),
avg.mpw.b = mean(avg.mpw.b, na.rm = T),
avg.cw.m = mean(avg.cw.m, na.rm = T),
avg.cw.d = mean(avg.cw.d, na.rm = T),
avg.ow.m = mean(avg.ow.m, na.rm = T),
avg.oh = mean(avg.oh, na.rm = T),
avg.o.side = mean(avg.o.side, na.rm = T),
avg.c.side = mean(avg.c.side, na.rm = T)) %>%
as.data.frame()
colony_means = dat_lg_N %>%
group_by(colony.id) %>%
summarize(formation = formation[1],
n.zooid = length(unique(zooid.id)),
avg.zh = mean(ln.zh, na.rm = T),
avg.mpw.b = mean(ln.mpw.b, na.rm = T),
avg.cw.m = mean(ln.cw.m, na.rm = T),
avg.cw.d = mean(ln.cw.d, na.rm = T),
avg.ow.m = mean(ln.ow.m, na.rm = T),
avg.oh = mean(ln.oh, na.rm = T),
avg.o.side = mean(ln.o.side, na.rm = T),
avg.c.side = mean(ln.c.side, na.rm = T)) %>%
as.data.frame()
means = dat_lg_N %>%
summarize(avg.zh = mean(ln.zh, na.rm = T),
avg.mpw.b = mean(ln.mpw.b, na.rm = T),
avg.cw.m = mean(ln.cw.m, na.rm = T),
avg.cw.d = mean(ln.cw.d, na.rm = T),
avg.ow.m = mean(ln.ow.m, na.rm = T),
avg.oh = mean(ln.oh, na.rm = T),
avg.o.side = mean(ln.o.side, na.rm = T),
avg.c.side = mean(ln.c.side, na.rm = T)) %>%
as.data.frame()
#### CHECK SAMPLE SIZES ----
## number of zooids per colony
range(mean_by_formation_colony$n.zooid)
mean_by_formation
mean_by_formation_colony = dat_lg_N %>% #use this going forward
group_by(formation, colony.id) %>%
summarize(n.zooid = length(unique(zooid.id)),
avg.zh = mean(ln.zh, na.rm = T),
avg.mpw.b = mean(ln.mpw.b, na.rm = T),
avg.cw.m = mean(ln.cw.m, na.rm = T),
avg.cw.d = mean(ln.cw.d, na.rm = T),
avg.ow.m = mean(ln.ow.m, na.rm = T),
avg.oh = mean(ln.oh, na.rm = T),
avg.o.side = mean(ln.o.side, na.rm = T),
avg.c.side = mean(ln.c.side, na.rm = T)) %>%
as.data.frame()
mean_by_formation_colony
