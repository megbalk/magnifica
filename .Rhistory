sd.zh = sd(ln.zh, na.rm = T),
avg.mpw.b = mean(ln.mpw.b, na.rm = T),
sd.mpw.b = sd(ln.mpw.b, na.rm = T),
avg.cw.m = mean(ln.cw.m, na.rm = T),
sd.cw.m = sd(ln.cw.m, na.rm = T),
avg.cw.d = mean(ln.cw.d, na.rm = T),
sd.cw.d = sd(ln.cw.d, na.rm = T),
avg.ow.m = mean(ln.ow.m, na.rm = T),
sd.ow.m = sd(ln.ow.m, na.rm = T),
avg.oh = mean(ln.oh, na.rm = T),
sd.oh = sd(ln.oh, na.rm = T),
avg.o.side = mean(ln.o.side, na.rm = T),
sd.o.side = sd(ln.o.side, na.rm = T),
avg.c.side = mean(ln.c.side, na.rm = T),
sd.c.side = sd(ln.c.side, na.rm = T)) %>%
as.data.frame()
mean_by_formation_colony
mean_by_formation_colony = df %>% #use this going forward
dplyr::group_by(formation, colony.id) %>%
dplyr::summarize(n.zooid = length(zooid.id),
avg.zh = mean(ln.zh, na.rm = T),
sd.zh = sd(ln.zh, na.rm = T),
avg.mpw.b = mean(ln.mpw.b, na.rm = T),
sd.mpw.b = sd(ln.mpw.b, na.rm = T),
avg.cw.m = mean(ln.cw.m, na.rm = T),
sd.cw.m = sd(ln.cw.m, na.rm = T),
avg.cw.d = mean(ln.cw.d, na.rm = T),
sd.cw.d = sd(ln.cw.d, na.rm = T),
avg.ow.m = mean(ln.ow.m, na.rm = T),
sd.ow.m = sd(ln.ow.m, na.rm = T),
avg.oh = mean(ln.oh, na.rm = T),
sd.oh = sd(ln.oh, na.rm = T),
avg.o.side = mean(ln.o.side, na.rm = T),
sd.o.side = sd(ln.o.side, na.rm = T),
avg.c.side = mean(ln.c.side, na.rm = T),
sd.c.side = sd(ln.c.side, na.rm = T)) %>%
as.data.frame()
mean_by_formation_colony
min(mean_by_formation_colony$n.zooid) #5
mean_by_formation = df %>%
dplyr::group_by(formation) %>%
dplyr::summarize(num.col = length(unique(colony.id)),
num.zooid = length(unique(zooid.id)),
avg.zooid = ceiling(num.zooid/num.col), #round up to nearest integer
min.zh = min(ln.zh, na.rm = T),
max.zh = max(ln.zh, na.rm = T),
avg.zh = mean(ln.zh, na.rm = T),
sd.zh = sd(ln.zh, na.rm = T),
min.mpw.b = min(ln.mpw.b, na.rm = T),
max.mpw.b = max(ln.mpw.b, na.rm = T),
avg.mpw.b = mean(ln.mpw.b, na.rm = T),
sd.mpw.b = sd(ln.mpw.b, na.rm = T),
min.cw.m = min(ln.cw.m, na.rm = T),
max.cw.m = max(ln.cw.m, na.rm = T),
avg.cw.m = mean(ln.cw.m, na.rm = T),
sd.cw.m = sd(ln.cw.m, na.rm = T),
min.cw.d = min(ln.cw.d, na.rm = T),
max.cw.d = max(ln.cw.d, na.rm = T),
avg.cw.d = mean(ln.cw.d, na.rm = T),
sd.cw.d = sd(ln.cw.d, na.rm = T),
min.ow.m = min(ln.ow.m, na.rm = T),
max.ow.m = max(ln.ow.m, na.rm = T),
avg.ow.m = mean(ln.ow.m, na.rm = T),
sd.ow.m = sd(ln.ow.m, na.rm = T),
min.oh = min(ln.oh, na.rm = T),
max.oh = max(ln.oh, na.rm = T),
avg.oh = mean(ln.oh, na.rm = T),
sd.oh = sd(ln.oh, na.rm = T),
min.o.side = min(ln.o.side, na.rm = T),
max.o.side = max(ln.o.side, na.rm = T),
avg.o.side = mean(ln.o.side, na.rm = T),
sd.o.side = sd(ln.o.side, na.rm = T),
min.c.side = min(ln.c.side, na.rm = T),
max.c.side = max(ln.c.side, na.rm = T),
avg.c.side = mean(ln.c.side, na.rm = T),
sd.c.side = sd(ln.c.side, na.rm = T)) %>%
as.data.frame()
write.csv(mean_by_formation,
"./Results/mean.by.formations.csv",
row.names = FALSE)
colony_means = df %>%
dplyr::group_by(colony.id) %>%
dplyr::summarize(formation = formation[1],
n.zooid = length(unique(zooid.id)),
avg.zh = mean(ln.zh, na.rm = T),
avg.mpw.b = mean(ln.mpw.b, na.rm = T),
avg.cw.m = mean(ln.cw.m, na.rm = T),
avg.cw.d = mean(ln.cw.d, na.rm = T),
avg.ow.m = mean(ln.ow.m, na.rm = T),
avg.oh = mean(ln.oh, na.rm = T),
avg.o.side = mean(ln.o.side, na.rm = T),
avg.c.side = mean(ln.c.side, na.rm = T)) %>%
as.data.frame()
means = df %>%
dplyr::summarize(avg.zh = mean(ln.zh, na.rm = T),
avg.mpw.b = mean(ln.mpw.b, na.rm = T),
avg.cw.m = mean(ln.cw.m, na.rm = T),
avg.cw.d = mean(ln.cw.d, na.rm = T),
avg.ow.m = mean(ln.ow.m, na.rm = T),
avg.oh = mean(ln.oh, na.rm = T),
avg.o.side = mean(ln.o.side, na.rm = T),
avg.c.side = mean(ln.c.side, na.rm = T)) %>%
as.data.frame()
ggplot(data = df) +
geom_smooth(aes(x = df[, traits[1]],
y = df[, traits[2]],
alpha = 0.5)) +
geom_point(aes(x = df[, traits[1]],
y = df[, traits[2]],
group = formation,
col = formation,
alpha = 0.5)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[1]) +
scale_y_continuous(name = traits[2]) +
scale_color_manual(values = col.form)
summary(lm(df[, traits[2]] ~ df[, traits[1]]))
traits[1]
ggplot(data = df) +
geom_smooth(aes(x = df[, traits[1]],
y = df[, traits[3]],
alpha = 0.5)) +
geom_point(aes(x = df[, traits[1]],
y = df[, traits[3]],
group = formation,
col = formation,
alpha = 0.5)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[1]) +
scale_y_continuous(name = traits[3]) +
scale_color_manual(values = col.form)
summary(lm(df[, traits[3]] ~ df[, traits[1]]))
ggplot(data = df) +
geom_smooth(aes(x = df[, traits[1]],
y = df[, traits[4]],
alpha = 0.5)) +
geom_point(aes(x = df[, traits[1]],
y = df[, traits[4]],
group = formation,
col = formation,
alpha = 0.5)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[1]) +
scale_y_continuous(name = traits[4]) +
scale_color_manual(values = col.form)
summary(lm(df[, traits[4]] ~ df[, traits[1]]))
ggplot(data = df) +
geom_smooth(aes(x = df[, traits[1]],
y = df[, traits[5]],
alpha = 0.5)) +
geom_point(aes(x = df[, traits[1]],
y = df[, traits[5]],
group = formation,
col = formation,
alpha = 0.5)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[1]) +
scale_y_continuous(name = traits[5]) +
scale_color_manual(values = col.form)
summary(lm(df[, traits[5]] ~ df[, traits[1]]))
ggplot(data = df) +
geom_smooth(aes(x = df[, traits[1]],
y = df[, traits[6]],
alpha = 0.5)) +
geom_point(aes(x = df[, traits[1]],
y = df[, traits[6]],
group = formation,
col = formation,
alpha = 0.5)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[1]) +
scale_y_continuous(name = traits[6]) +
scale_color_manual(values = col.form)
summary(lm(df[, traits[6]] ~ df[, traits[1]]))
ggplot(data = df) +
geom_smooth(aes(x = df[, traits[1]],
y = df[, traits[7]],
alpha = 0.5)) +
geom_point(aes(x = df[, traits[1]],
y = df[, traits[7]],
group = formation,
col = formation,
alpha = 0.5)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[1]) +
scale_y_continuous(name = traits[7]) +
scale_color_manual(values = col.form)
#ln.c.side is not an issue really
summary(lm(df[, traits[7]] ~ df[, traits[1]]))
ggplot(data = df) +
geom_smooth(aes(x = df[, traits[1]],
y = df[, traits[8]],
alpha = 0.5)) +
geom_point(aes(x = df[, traits[1]],
y = df[, traits[8]],
group = formation,
col = formation,
alpha = 0.5)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[1]) +
scale_y_continuous(name = traits[8]) +
scale_color_manual(values = col.form)
#ln.o.side is not an issue really
summary(lm(df[, traits[7]] ~ df[, traits[1]]))
#### LOOK AT CHANGES OVER TIME AND BETWEEN FORMATIONS ------
## Add meta data
form.df <- form.meta[1:7,] #in same order as mean_by_formation
for(i in 1:nrow(form.df)){
form.df$mean.age[i] <- mean(form.df$Start_age[i], form.df$End_age[i], na.rm = TRUE)
}
form.df$age.range <- ""
for(i in 1:nrow(form.df)){
form.df$age.range[i] <- form.df$Start_age[i] - form.df$End_age[i]
}
form.df$age.range <- as.numeric(form.df$age.range)
reg.mean_by_formation.meta <- merge(reg.mean_by_formation, form.df,
by.x = "formation",
by.y = "formationCode")
mean_by_formation.meta <- merge(mean_by_formation, form.df,
by.x = "formation",
by.y = "formationCode")
## overall differnce in zooid height
mean_by_formation$avg.zh[mean_by_formation$formation == "NKLS"] - mean_by_formation$avg.zh[mean_by_formation$formation == "SHCSBSB"]
#-0.1514114 (decrease in length)
mean_by_formation$avg.ow.m[mean_by_formation$formation == "NKLS"] - mean_by_formation$avg.ow.m[mean_by_formation$formation == "SHCSBSB"]
## how is sd a function of sample size (number of zooids and number of colonies)?
#plot sd per colony by zooid no
ggplot(mean_by_formation_colony) +
geom_point(aes(x = n.zooid, y = sd.zh,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = "Number of Zooids per Colony") +
scale_y_continuous(expression(sd~ln~Zooid~Height~(mu*m))) +
scale_color_manual(values = col.form)
#plot sd per formation by colony no
ggplot(mean_by_formation) +
geom_point(aes(x = num.col, y = sd.zh,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = "Number of Colonies per Colony") +
scale_y_continuous(expression(sd~ln~Zooid~Height~(mu*m))) +
scale_color_manual(values = col.form)
anova(lm(mean_by_formation$sd.zh ~ mean_by_formation$num.col + mean_by_formation$num.zooid))
ggplot(data = mean_by_formation.meta) +
geom_point(aes(x = age.range, y = avg.zh,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = "Age Range (Ma)") +
scale_y_continuous(name = "Average Zooid Height (um)") +
scale_color_manual(values = col.form)
ggplot(data = mean_by_formation.meta) +
geom_point(aes(x = mean.age, y = avg.zh,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = "Age (Ma)") +
scale_y_continuous(expression(Average~ln~Zooid~Height~(mu*m))) +
scale_color_manual(values = col.form)
## how is sd a function of sample size (number of zooids and number of colonies)?
#plot sd per colony by zooid no
ggplot(mean_by_formation_colony) +
geom_point(aes(x = n.zooid, y = sd.zh,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = "Number of Zooids per Colony") +
scale_y_continuous(expression(sd~ln~Zooid~Height~(mu*m))) +
scale_color_manual(values = col.form)
#plot sd per formation by colony no
ggplot(mean_by_formation) +
geom_point(aes(x = num.col, y = sd.zh,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = "Number of Colonies per Colony") +
scale_y_continuous(expression(sd~ln~Zooid~Height~(mu*m))) +
scale_color_manual(values = col.form)
anova(lm(mean_by_formation$sd.zh ~ mean_by_formation$num.col + mean_by_formation$num.zooid))
ggplot(data = mean_by_formation.meta) +
geom_point(aes(x = age.range, y = avg.zh,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = "Age Range (Ma)") +
scale_y_continuous(name = "Average Zooid Height (um)") +
scale_color_manual(values = col.form)
ggplot(data = mean_by_formation.meta) +
geom_point(aes(x = mean.age, y = avg.zh,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_reverse(name = "Age (Ma)", limits = c(2.5, 0)) +
scale_y_continuous(expression(Average~ln~Zooid~Height~(mu*m))) +
scale_color_manual(values = col.form)
df.form.meta <- merge(df, form.df,
by.x = "formation",
by.y = "formationCode")
ggplot(data = df.form.meta) +
geom_point(aes(x = mean.age, y = ln.zh,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_reverse(name = "Age (Ma)", limits = c(2.5, 0)) +
scale_y_continuous(expression(ln~Zooid~Height~(mu*m))) +
scale_color_manual(values = col.form)
ggplot(data = reg.form.meta) +
geom_point(aes(x = ln.cw.d, y = ln.zh,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = "Cryptocyst Width at the Distal End (um)") +
scale_y_continuous(expression(ln~Zooid~Height~(mu*m))) +
scale_color_manual(values = col.form)
ggplot(data = form.meta) +
geom_point(aes(x = ln.cw.d, y = ln.zh,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = "Cryptocyst Width at the Distal End (um)") +
scale_y_continuous(expression(ln~Zooid~Height~(mu*m))) +
scale_color_manual(values = col.form)
colnames(form.meta)
ggplot(data = df.form.meta) +
geom_point(aes(x = ln.cw.d, y = ln.zh,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = "Cryptocyst Width at the Distal End (um)") +
scale_y_continuous(expression(ln~Zooid~Height~(mu*m))) +
scale_color_manual(values = col.form)
box.ln.zh <- ggplot(data = traits.melt[traits.melt$measurementType == "ln.zh",],
aes(x = formation,
y = measurementValue,
fill = formation)) +
geom_boxplot() +
scale_color_manual(values = col.form) +
scale_fill_manual(values = col.form) +
ggtitle("Boxplots of LN Zooid Heights") +
scale_x_discrete(name = "Formation",
guide = guide_axis(angle = 45)) +
ylab(expression(ln~Zooid~Height~(mu*m))) +
theme(text = element_text(size = 16),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
box.ln.zh
ggsave(box.ln.zh,
file = "./Results/boxplot.ln.zh.png",
width = 14, height = 10, units = "cm")
ggplot(data = mean_by_formation.meta) +
geom_point(aes(x = age.range, y = avg.zh,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = "Age Range (Ma)") +
scale_y_continuous(name = "Average Zooid Height (um)") +
scale_color_manual(values = col.form)
ggplot(data = mean_by_formation.meta) +
geom_point(aes(x = mean.age, y = avg.zh,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_reverse(name = "Age (Ma)", limits = c(2.5, 0)) +
scale_y_continuous(expression(Average~ln~Zooid~Height~(mu*m))) +
scale_color_manual(values = col.form)
p.zh.age <- ggplot(data = mean_by_formation.meta) +
geom_point(aes(x = mean.age, y = avg.zh,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_reverse(name = "Age (Ma)", limits = c(2.5, 0)) +
scale_y_continuous(expression(Average~ln~Zooid~Height~(mu*m))) +
scale_color_manual(values = col.form)
ggsave(p.zh.age,
file = "./Results/ln.zh.time.png",
width = 14, height = 10, units = "cm")
ggplot(data = df.form.meta) +
geom_point(aes(x = mean.age, y = ln.zh,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_reverse(name = "Age (Ma)", limits = c(2.5, 0)) +
scale_y_continuous(expression(ln~Zooid~Height~(mu*m))) +
scale_color_manual(values = col.form)
form.meta <- merge(df, form.df,
by.x = "formation",
by.y = "formationCode")
ggplot(data = form.meta) +
geom_point(aes(x = ln.cw.d, y = ln.zh,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = "Cryptocyst Width at the Distal End (um)") +
scale_y_continuous(expression(ln~Zooid~Height~(mu*m))) +
scale_color_manual(values = col.form)
box.ln.zh <- ggplot(data = traits.melt[traits.melt$measurementType == "ln.zh",],
aes(x = formation,
y = measurementValue,
fill = formation)) +
geom_boxplot() +
scale_color_manual(values = col.form) +
scale_fill_manual(values = col.form) +
ggtitle("Boxplots of LN Zooid Heights") +
scale_x_discrete(name = "Formation",
guide = guide_axis(angle = 45)) +
ylab(expression(ln~Zooid~Height~(mu*m))) +
theme(text = element_text(size = 16),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
#### LOAD LIBRARIES ----
library(coin)
library(corrplot)
library(data.table)
library(dplyr)
library(evolqg)
library(evolvability)
library(ggplot2)
library(grid)
library(gridBase)
library(gridExtra)
library(magrittr)
library(MASS)
library(MCMCglmm)
library(nse)
library(RColorBrewer)
library(reshape2)
library(rgl)
library(scales)
library(scatterplot3d)
library(tibble)
library(matrixcalc)
df <- read.csv("./Results/colonies.traits.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
form.meta <- read.csv("~/Documents/GitHub/bryozoa/stegino_metadata/newMetadata/formations.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
load(file = "./Results/sum.data.list.RData") #load the g matrices calculated above
mean_by_formation <- sum.data.list[[1]]
sum.data.list = list(mean_by_formation, mean_by_formation_colony)
#### LOAD PACKAGES ----
require(stringr)
require(dplyr)
require(ggplot2)
require(reshape2)
require(lmodel2)
require(tidyverse)
col.form = c("#F8766D", "#CD9600", "#7CAE00", "#00BE67",
"#00A9FF", "#C77CFF", "#FF61CC")
col.traits = c("#F8766D", "#CD9600", "#7CAE00", "#00BE67",
"#00BFC4", "#00A9FF", "#C77CFF", "#FF61CC")
traits = names(df[, c("ln.zh", "ln.mpw.b", "ln.cw.m", "ln.cw.d",
"ln.ow.m", "ln.oh", "ln.c.side", "ln.o.side")])
#### LOAD DATA ----
df <- read.csv("Results/traits_29Sept2023.csv",
header = TRUE)
form.meta <- read.csv("~/Documents/GitHub/bryozoa/stegino_metadata/newMetadata/formations.csv",
header = TRUE)
#this is downloaded from: http://www.lorraine-lisiecki.com/LR04_MISboundaries.txt
oxy.18 <- read.csv("Data/∂18O.csv",
header = TRUE)
#this is from Emanuela and is in the stegino_metadata repository
locality.df <- read.csv("Data/All.NZ.Samples_EDM_31.07.2023_sheet1.csv",
header = TRUE)
##### DISTRIBUTION -----
p.ln.zh <- ggplot(df) +
geom_density(aes(x = ln.zh)) +
ggtitle(paste0("Zooid height, N zooids = ", nrow(df), ", N colony = ", length(unique(df$colony.id)))) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_y_continuous(name = "Density") +
scale_x_continuous(expression(ln~Zooid~Height~(mu*m)))
p.ln.zh.form <- ggplot(df) +
geom_density(aes(x = ln.zh,
group = formation,
col = formation)) + #lots are bimodal
ggtitle(paste0("Distribution of traits, N zooids = ", length(unique(df$zooid.id)),
", N colony = ", length(unique(df$colony.id)))) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_y_continuous(name = "Density") +
scale_x_continuous(expression(ln~Zooid~Height~(mu*m)))
traits.melt <- melt(data = df,
id.vars = c("boxID", "zooid.id","imageName", "specimenNR",
"colony.id", "formation", "magnification"),
variable.name = "measurementType",
value.name = "measurementValue")
length(unique(traits.melt$colony.id)) #731 unique colonies [previously 742]
traits.stats <- traits.melt %>%
dplyr::group_by(measurementType) %>%
dplyr::summarise(avg = mean(measurementValue))
traits.stats.form <- traits.melt %>%
dplyr::group_by(measurementType, formation) %>%
dplyr::summarise(avg = mean(measurementValue))
traits.melt.trim <- traits.melt[traits.melt$measurementType %in% traits,]
