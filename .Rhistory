library(ggplot2)
library(data.table)
library(evolqg)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(eval = FALSE)
library(ggplot2)
library(data.table)
library(evolqg)
install.packages('evolqg')
library(ggplot2)
library(data.table)
library(evolqg)
install.packages("evolqg")
install.packages("classInt")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(eval = FALSE)
library(ggplot2)
library(data.table)
library(evolqg)
library(ggplot2)
library(data.table)
library(evolqg)
library(ggplot2)
library(data.table)
library(evolqg)
install.packages("evolqg")
install.packages('matrix')
install.packages('Matrix')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(eval = FALSE)
library(ggplot2)
library(data.table)
library(evolqg)
sessionInfo()
install.packages('evolqg')
install.packages('devtools')
sessionInfo()
library(devtools)
install_github("lem-usp/evolqg")
install_github("zarquon42b/Morpho", local=FALSE)
install.packages('units')
install.packages('rcpp')
install.packages('Rcpp')
install.packages('units')
install.packages('units')
install_github("zarquon42b/Morpho", local=FALSE)
install.packages('MCMCpack')
install.packages('Rvcg')
install.packages('Rvcg')
install.packages('sf')
install.packages('RcppEigen')
install.packages('SparseM')
install.packages('quantreg')
install.packages('quantreg')
install.packages('igraph')
devtools::install_github("igraph/rigraph")
install.packages('Matrix')
install.packages('Matrix')
install.packages("Matrix", repos="http://R-Forge.R-project.org")
install.packages("Matrix", repos="http://R-Forge.R-project.org")
devtools::install_github("igraph/rigraph")
install.packages('quantreg')
library(ggplot2)
library(data.table)
library(evolqg)
install.packages('evolqg')
library(ggplot2)
library(data.table)
library(evolqg)
library(dplyr)
library(nse)
install.packages('nse')
library(nse)
library(grid)
install.packages('grid')
install.packages("grid")
#library(grid)
library(gridBase)
library(gridExtra)
library(MCMCglmm)
library(MCMCglmm)
library(corrplot)
library(MASS)
library(reshape2)
library(scatterplot3d)
library(rgl)
library(scales)
library(RColorBrewer)
library(coin)
library(coin)
in_data<-read.table("chet_dat_rm.txt", header=TRUE,stringsAsFactors = F)
head(in_data)
in_age<-read.table("chet_age.txt", header=TRUE,stringsAsFactors = F)
colnames(in_age)=c("age","COL","SP")
head(in_age)
#Merge data sp by age
indat=merge(in_data,in_age,by="COL")
#Extract unique elements and trait names
colony_list<-unique(in_data$COL)
length(colony_list)
species_list<-unique(in_data$SP)
length(species_list)
traits=names(indat[,4:52])
colNums <- match(c(traits,"COL"),names(indat))
indat=as.data.frame(indat)
Fig <- list ()
for (i in 1:length(traits)){
trt=traits[i]
range_bin=c(min(indat[,3+i],na.rm = T),max(indat[,3+i],na.rm = T))
Fig[[i]] = ggplot(data=indat,aes_string(x=trt,fill="SP.x"))+
geom_histogram(position="identity",binwidth = (range_bin[2]-range_bin[1])/30)+
theme(legend.position="none",text = element_text(size=20))
rm(range_bin)
}
ml <- marrangeGrob(Fig, nrow=7, ncol=7)
capabilities()
Sys.getenv("DISPLAY")
x11()
x11()
Sys.getenv("DISPLAY")
capabilities()
capabilities()
#### LOAD PACKAGES ----
require(stringr)
require(dplyr)
require(ggplot2)
require(reshape2)
require(lmodel2)
require(tidyverse)
require(stringr)
setwd("~/Documents/GitHub/bryozoa/magnifica/Scripts")
setwd("~/Documents/GitHub/bryozoa/magnifica/")
#### LOAD DATA ----
bryo.images <- read.table("./Data/Steginoporella_magnifica_image_metadata_17Apr2023.csv",
header = TRUE,
sep = ";")
nrow(bryo.images) #1890
bryo.images.30 <- bryo.images[bryo.images$Magnification == 30,]
nrow(bryo.images.30) #1835
##### add in full file name #####
bryo.images.30$fileName.tif <- paste0(bryo.images.30$fileName, ".tif")
#### CREATE OLD FILE NAMES - DELETE LATER ####
recon.df <- read.table("./Data/image_merge_txt_usingfileName_DONE_17Apr2023.csv",
header = TRUE, sep = ";")
setdiff(recon.df$newFileName, bryo.images$fileName) #none
setdiff(bryo.images$fileName, recon.df$newFileName) #none
##### combine files to get path #####
recon.df.path <- recon.df[, c("newFileName", "path.tif")]
bryo.images.path <- merge(bryo.images.30, recon.df.path,
by.x = "fileName", by.y = "newFileName",
all.x = TRUE, all.y = FALSE)
nrow(bryo.images.path)
nrow(recon.df)
bryo.images.removed <- bryo.images[bryo.images$Magnification != 30,]
write.csv(bryo.images.removed,
"./Data/imagesRemoved.csv",
row.names = FALSE)
write.csv(bryo.images.path,
"./Data/filteredImageswithDupes.csv",
row.names = FALSE)
