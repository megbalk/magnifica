summarise(n.zooid = length(unique(zooid.id)),
n.sm.zooid = count(unique(zooid.id[df.bins$zh.bin %in% bins])),
prop.sm = n.sm.zooid/n.zooid)
#look at proportions
prop.sm <- df.bins %>%
group_by(colony.id) %>%
summarise(n.zooid = length(unique(zooid.id)),
n.sm.zooid = n(unique(zooid.id[df.bins$zh.bin %in% bins])),
prop.sm = n.sm.zooid/n.zooid)
#look at proportions
prop.sm <- df.bins %>%
group_by(colony.id) %>%
summarise(n.zooid = length(unique(zooid.id)),
n.sm.zooid = sum(unique(zooid.id[df.bins$zh.bin %in% bins])),
prop.sm = n.sm.zooid/n.zooid)
str(df.bins$zh.bin)
length(unique(df.bins$zooid.id[df.bins$zh.bin %in% bins]))
nrow(prop.sm)
df.bin.f
1+12+41+95+183+153+52+23
df$zh.bin <- as.character(df$zh.bin)
#look at proportions
prop.sm <- df.bins %>%
group_by(colony.id) %>%
summarise(n.zooid = length(unique(zooid.id)),
n.sm.zooid = length(unique(zooid.id[df.bins$zh.bin %in% bins])),
prop.sm = n.sm.zooid/n.zooid)
View(prop.sm)
#look at proportions
prop.sm <- df.bins %>%
group_by(colony.id) %>%
summarise(n.zooid = length(unique(zooid.id)),
n.sm.zooid = length(unique(zooid.id[zh.bin %in% bins])),
prop.sm = n.sm.zooid/n.zooid)
prop.sm
df$sm <- FALSE
df$sm <- ""
if(isTRUE(df$zh.bin %in% bins)){
df$sm <- TRUE
}
else{
if!(isTRUE(df$zh.bin %in% bins)){
if(!(isTRUE(df$zh.bin %in% bins))){
df$sm <- FALSE
}
sm
df$sm
unique(df$sm)
df$sm <- ""
if(isTRUE(df$zh.bin %in% bins)){
df$sm <- TRUE
}
unique(df$sm )
df$sm[df$zh.bin %in% bins] <- TRUE
unique(df$sm )
df.bins$zh.bin <- as.character(df.bins$zh.bin)
df.bins$sm <- ""
df.bins$sm[df.bins$zh.bin %in% bins] <- TRUE
unique(df.bins$sm)
df.bins$sm <- FALSE
df.bins$sm[df.bins$zh.bin %in% bins] <- TRUE
unique(df.bins$sm)
#look at proportions
prop.sm <- df.bins %>%
group_by(colony.id) %>%
summarise(n.zooid = length(unique(zooid.id)),
n.sm.zooid = sum(sm),
prop.sm = n.sm.zooid/n.zooid)
prop.sm
colnames(df.bins)
df.bins$sm
#look at proportions
prop.sm <- df.bins %>%
group_by(colony.id) %>%
summarise(n.zooid = length(unique(zooid.id)),
n.sm.zooid = sum(sm),
prop.sm = n.sm.zooid/n.zooid)
prop.sm
str(df.bins$sm)
unique(df.bins$sm)
View(df.bins)
summarise(n.zooid = length((zooid.id),
#look at proportions
prop.sm <- df.bins %>%
#look at proportions
prop.sm <- df.bins %>%
group_by(colony.id) %>%
summarise(n.zooid = length(zooid.id),
n.sm.zooid = sum(sm),
prop.sm = n.sm.zooid/n.zooid)
prop.sm
#look at proportions
prop.sm <- df.bins %>%
group_by(colony.id) %>%
summarise(n.zooid = length(zooid.id),
n.sm.zooid = length(sm[df.bins$sm==TRUE]),
prop.sm = n.sm.zooid/n.zooid)
prop.sm
#look at proportions
prop.sm <- df.bins %>%
group_by(colony.id) %>%
summarise(n.zooid = length(zooid.id),
n.sm.zooid = n(sm),
prop.sm = n.sm.zooid/n.zooid)
#look at proportions
prop.sm <- df.bins %>%
group_by(colony.id) %>%
summarise(n.zooid = length(zooid.id),
n.sm.zooid = count(sm),
prop.sm = n.sm.zooid/n.zooid)
#look at proportions
prop.sm <- df.bins %>%
group_by(colony.id) %>%
summarise(n.zooid = length(zooid.id),
n.sm.zooid = sum(sm),
prop.sm = n.sm.zooid/n.zooid)
prop.sm
View(prop.sm)
#goes from 100% to 20%; perhaps make 20% the cut off
rm.col <- prop.sm$colony.id[prop.sm$prop.sm == 1]
rm.col
length(rm.col)
#for those with 20%, see where the sizes are
sm.colonies <- prop.sm$colony.id[prop.sm$prop.sm < 1 &
prop.sm$prop.sm > 0]
sm.colonies
length(sm.colonies) #
range(df$ln.zh[df$colony.id %in% sm.colonies])
df$ln.zh[df$colony.id %in% sm.colonies]
#5.800815 7.439169
sort(df$ln.zh[df$colony.id %in% sm.colonies])
df.bins
colnames(df.bins)
sm.colonies
prop.sm[prop.sm$prop.sm < 1 &
prop.sm$prop.sm > 0,]
View(prop.sm[prop.sm$prop.sm < 1 &
prop.sm$prop.sm > 0,])
#for those with 20%, see where the sizes are
sm.zooids <- prop.sm$colony.id[prop.sm$prop.sm < 1 &
prop.sm$prop.sm > 0]
length(sm.zooids) #21
small.colonies <- df[df$colony.id %in% rm.col,]
reg.colonies <- df[!(df$colony.id %in% rm.col),]
nrow(df)
nrow(small.colonies)
nrow(reg.colonies)
6274+541
getwd()
setwd("~/Documents/GitHub/bryozoa/magnifica/Scripts")
setwd("~/Documents/GitHub/bryozoa/magnifica/")
write.csv(small.colonies,
"./Results/small.colonies.traits.csv",
row.names = FALSE)
write.csv(reg.colonies,
"./Results/colonies.traits.csv",
row.names = FALSE)
df <- read.csv("./Results/colonies.traits.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
sm.df <- read.csv("./Results/small.colonies.traits.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
colnames(df )
col.form = c("#F8766D", "#CD9600", "#7CAE00", "#00BE67",
"#00A9FF", "#C77CFF", "#FF61CC")
col.traits = c("#F8766D", "#CD9600", "#7CAE00", "#00BE67",
"#00BFC4", "#00A9FF", "#C77CFF", "#FF61CC")
df$zooid.id <- paste0(df$boxID, "_", df$image)
colnames(df)[colnames(df) == 'specimenNR'] <- 'colony.id'
df <- read.csv("./Results/colonies.traits.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
sm.df <- read.csv("./Results/small.colonies.traits.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
colnames(df )
zooid_list <- unique(df$zooid.id)
length(zooid_list) #15773
colony_list <- unique(df$colony.id)
length(colony_list) #742
##### FORMATIONS ----
# arrange formations from oldest to youngest
df$formation <- factor(df$formation, levels = c("NKLS", "NKBS", "Tewkesbury",
"Waipuru", "Upper Kai-Iwi",
"Tainui", "SHCSBSB"))
formation_list <- unique(df$formation)
length(formation_list) #7
#same order as in df
names(df)
traits = names(df[, c("ln.zh", "ln.mpw.b", "ln.cw.m", "ln.cw.d",
"ln.ow.m", "ln.oh", "ln.c.side", "ln.o.side")])
##### TRIM DATASET ----
df.trim <- df %>%
dplyr::select(zooid.id, colony.id, formation, matches(traits))
colNums <- match(c(traits, "zooid.id"), names(df.trim))
colNums
##### DISTRIBUTIONS -----
p.zh = ggplot(data = df) +
geom_density(aes(x = df[, traits[1]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[1]) +
scale_color_manual(values = col.form)
p.zh
p.mpw.b = ggplot(data = df) +
geom_density(aes(x = df[, traits[2]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[2]) +
scale_color_manual(values = col.form)
p.mpw.b
p.cw.m = ggplot(data = df) +
geom_density(aes(x = df[, traits[3]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[3]) +
scale_color_manual(values = col.form)
p.cw.m
p.cw.d = ggplot(data = df) +
geom_density(aes(x = df[, traits[4]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[4]) +
scale_color_manual(values = col.form)
p.cw.d
p.ow.m = ggplot(data = df) +
geom_density(aes(x = df[, traits[5]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[5]) +
scale_color_manual(values = ol.form)
p.ow.m
p.ow.m = ggplot(data = df) +
geom_density(aes(x = df[, traits[5]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[5]) +
scale_color_manual(values = col.form)
p.ow.m
p.oh = ggplot(data = df) +
geom_density(aes(x = df[, traits[6]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[6]) +
scale_color_manual(values = col.form)
p.oh
p.c.side = ggplot(data = df) +
geom_density(aes(x = df[, traits[7]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[7]) +
scale_color_manual(values = col.form)
p.c.side
p.o.side = ggplot(data = df) +
geom_density(aes(x = df[, traits[8]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[8]) +
scale_color_manual(values = col.form)
p.o.side
Fig = list(p.zh, p.mpw.b, p.cw.m, p.cw.d, p.ow.m, p.oh, p.c.side, p.o.side)
ml <- marrangeGrob(Fig, nrow = 4, ncol = 2)
ml
ggsave(ml, file = "./Results/trait.interest_distribution_reg.png",
width = 14, height = 10, units = "cm")
ml <- marrangeGrob(Fig, nrow = 4, ncol = 2)
#### LOAD LIBRARIES ----
library(ggplot2)
library(data.table)
library(evolqg)
library(dplyr)
library(nse)
library(grid)
library(gridBase)
library(gridExtra)
library(MCMCglmm)
library(corrplot)
library(MASS)
library(reshape2)
library(scatterplot3d)
library(rgl)
library(scales)
library(RColorBrewer)
library(coin)
library(tibble)
library(magrittr)
library(evoTS)
library(paleoTS)
ml <- marrangeGrob(Fig, nrow = 4, ncol = 2)
ml
ggsave(ml, file = "./Results/trait.interest_distribution_reg.png",
width = 14, height = 10, units = "cm")
#ln.zh
sub.ln.zh <- sample(df[, traits[1]],
5000, replace = FALSE, prob = NULL)
shapiro.test(sub.ln.zh) #p-value < 2.2e-16
shapiro.test(df$ln.zh) #p-value < 2.2e-16
sub.ln.zh
nrow(df[, traits[1]])
#ln.zh
sub.ln.zh <- sample(df[, traits[1]],
5000, replace = FALSE, prob = NULL)
shapiro.test(sub.ln.zh) #p-value < 2.2e-16
#ln.mpw.b
sub.ln.mpw.b <- sample(df[, traits[2]],
5000, replace = FALSE, prob = NULL)
shapiro.test(sub.ln.mpw.b) #p-value < 2.2e-16
#ln.cw.m
sub.ln.cw.m <- sample(df[, traits[3]],
5000, replace = FALSE, prob = NULL)
shapiro.test(sub.ln.cw.m) #p-value < 2.2e-16
#ln.cw.d
sub.ln.cw.d <- sample(df[, traits[4]],
5000, replace = FALSE, prob = NULL)
shapiro.test(sub.ln.cw.d) #p-value < 2.2e-16
#ln.ow.m
sub.ln.ow.m <- sample(df[, traits[5]],
5000, replace = FALSE, prob = NULL)
shapiro.test(sub.ln.ow.m) #p-value < 2.2e-16
#ln.oh
sub.ln.oh <- sample(df[, traits[6]],
5000, replace = FALSE, prob = NULL)
shapiro.test(sub.ln.oh) #p-value < 2.2e-16
#ln.c.side
sub.ln.c.side <- sample(df[, traits[7]],
5000, replace = FALSE, prob = NULL)
shapiro.test(sub.ln.c.side) #p-value < 2.2e-16
#ln.o.side
sub.ln.o.side <- sample(df[, traits[8]],
5000, replace = FALSE, prob = NULL)
shapiro.test(sub.ln.o.side) #p-value < 2.2e-16
#### REDUCE TO TRAITS OF INTEREST ----
trt_lg_N = c("formation", "colony.id", "zooid.id", traits)
dat_lg_N = df[intersect(colnames(df), trt_lg_N)]
head(dat_lg_N) #traits in same order as df and traits
mean_by_formation_colony = dat_lg_N %>% #use this going forward
group_by(formation, colony.id) %>%
summarize(n.zooid = length(unique(zooid.id)),
avg.zh = mean(ln.zh, na.rm = T),
avg.mpw.b = mean(ln.mpw.b, na.rm = T),
avg.cw.m = mean(ln.cw.m, na.rm = T),
avg.cw.d = mean(ln.cw.d, na.rm = T),
avg.ow.m = mean(ln.ow.m, na.rm = T),
avg.oh = mean(ln.oh, na.rm = T),
avg.o.side = mean(ln.o.side, na.rm = T),
avg.c.side = mean(ln.c.side, na.rm = T)) %>%
as.data.frame()
dat_lg_N
mean_by_formation_colony = dat_lg_N %>% #use this going forward
group_by(formation, colony.id) %>%
summarize(n.zooid = length(unique(zooid.id)),
avg.zh = mean(ln.zh, na.rm = T),
avg.mpw.b = mean(ln.mpw.b, na.rm = T),
avg.cw.m = mean(ln.cw.m, na.rm = T),
avg.cw.d = mean(ln.cw.d, na.rm = T),
avg.ow.m = mean(ln.ow.m, na.rm = T),
avg.oh = mean(ln.oh, na.rm = T),
avg.o.side = mean(ln.o.side, na.rm = T),
avg.c.side = mean(ln.c.side, na.rm = T)) %>%
as.data.frame()
mean_by_formation_colony1 = dat_lg_N %>% #use this going forward
group_by(formation, colony.id) %>%
summarize(n.zooid = length(unique(zooid.id)),
avg.zh = mean(ln.zh, na.rm = T),
avg.mpw.b = mean(ln.mpw.b, na.rm = T),
avg.cw.m = mean(ln.cw.m, na.rm = T),
avg.cw.d = mean(ln.cw.d, na.rm = T),
avg.ow.m = mean(ln.ow.m, na.rm = T),
avg.oh = mean(ln.oh, na.rm = T),
avg.o.side = mean(ln.o.side, na.rm = T),
avg.c.side = mean(ln.c.side, na.rm = T)) %>%
as.data.frame()
#### LOAD LIBRARIES ----
library(ggplot2)
library(data.table)
library(evolqg)
library(dplyr)
library(nse)
library(grid)
library(gridBase)
library(gridExtra)
library(MCMCglmm)
library(corrplot)
library(MASS)
library(reshape2)
library(scatterplot3d)
library(rgl)
library(scales)
library(RColorBrewer)
library(coin)
library(tibble)
library(magrittr)
library(evoTS)
library(paleoTS)
df <- read.csv("./Results/colonies.traits.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
sm.df <- read.csv("./Results/small.colonies.traits.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
col.form = c("#F8766D", "#CD9600", "#7CAE00", "#00BE67",
"#00A9FF", "#C77CFF", "#FF61CC")
col.traits = c("#F8766D", "#CD9600", "#7CAE00", "#00BE67",
"#00BFC4", "#00A9FF", "#C77CFF", "#FF61CC")
zooid_list <- unique(df$zooid.id)
length(zooid_list) #6274 (was 15773)
colony_list <- unique(df$colony.id)
length(colony_list) #572 (was 742)
##### FORMATIONS ----
# arrange formations from oldest to youngest
df$formation <- factor(df$formation, levels = c("NKLS", "NKBS", "Tewkesbury",
"Waipuru", "Upper Kai-Iwi",
"Tainui", "SHCSBSB"))
formation_list <- unique(df$formation)
length(formation_list) #7
#same order as in df
names(df)
traits = names(df[, c("ln.zh", "ln.mpw.b", "ln.cw.m", "ln.cw.d",
"ln.ow.m", "ln.oh", "ln.c.side", "ln.o.side")])
##### TRIM DATASET ----
df.trim <- df %>%
dplyr::select(zooid.id, colony.id, formation, matches(traits))
colNums <- match(c(traits, "zooid.id"), names(df.trim))
df = as.data.frame(df.trim)
##### DISTRIBUTIONS -----
p.zh = ggplot(data = df) +
geom_density(aes(x = df[, traits[1]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[1]) +
scale_color_manual(values = col.form)
p.mpw.b = ggplot(data = df) +
geom_density(aes(x = df[, traits[2]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[2]) +
scale_color_manual(values = col.form)
p.cw.m = ggplot(data = df) +
geom_density(aes(x = df[, traits[3]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[3]) +
scale_color_manual(values = col.form)
p.cw.d = ggplot(data = df) +
geom_density(aes(x = df[, traits[4]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[4]) +
scale_color_manual(values = col.form)
p.ow.m = ggplot(data = df) +
geom_density(aes(x = df[, traits[5]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[5]) +
scale_color_manual(values = col.form)
p.oh = ggplot(data = df) +
geom_density(aes(x = df[, traits[6]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[6]) +
scale_color_manual(values = col.form)
#### LOAD LIBRARIES ----
library(ggplot2)
library(data.table)
library(evolqg)
library(dplyr)
library(nse)
library(grid)
library(gridBase)
library(gridExtra)
library(MCMCglmm)
library(corrplot)
library(MASS)
library(reshape2)
library(scatterplot3d)
