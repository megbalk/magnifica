}
if(isTRUE(endsWith(imageName[i], ".txt"))){
ext[i] <- "txt"
}
else{
ext[i] <- "tif"
}
}
folder <- c()
formation <- c()
imageName <- c()
ext <- c()
for(i in 1:length(list.parse)){
folder[i] <- list.parse[[i]][1]
if(isTRUE(endsWith(list.parse[[i]][2], ".txt"))){
formation[i] <- "NONE"
}
else if(isTRUE(endsWith(list.parse[[i]][2], ".tif"))){
formation[i] <- "NONE"
}
else{
formation[i] <- list.parse[[i]][2]
}
if(isTRUE(endsWith(list.parse[[i]][2], ".txt"))){
imageName[i] <- list.parse[[i]][2]
}
else if(isTRUE(endsWith(list.parse[[i]][2], ".tif"))){
imageName[i] <- list.parse[[i]][2]
}
else{
imageName[i] <- list.parse[[i]][3]
}
if(isTRUE(endsWith(imageName[i], ".txt"))){
ext[i] <- "txt"
}
else{
ext[i] <- "tif"
}
}
image <- str_extract(imageName, pattern = "[^.]+")
image
imageName.list <- str_split(image,
pattern = "_")
specimenNR <- c()
number <- c()
colonyCurve <- c()
pictureNumber <- c()
AV <- c()
magnification <- c()
backscatter <- c()
for(i in 1:length(imageName.list)){
number[i] <- imageName.list[[i]][1]
colonyCurve[i] <- imageName.list[[i]][2]
pictureNumber[i] <- imageName.list[[i]][3]
AV[i] <- imageName.list[[i]][4]
magnification[i] <- str_extract(imageName.list[[i]][5],
pattern = "[^.]+")
backscatter[i] <- str_extract(imageName.list[[i]][6],
pattern = "[^.]+")
specimenNR[i] <- paste0(imageName.list[[i]][1], imageName.list[[i]][2])
}
df.list <- data.frame(path = listPath,
folder = folder,
formation = formation,
image = image,
ext = ext,
imageName = imageName,
specimenNR = specimenNR,
number = number,
colonyCurve = colonyCurve,
pictureNumber = pictureNumber,
AV = AV,
magnification = magnification,
backscatter = backscatter,
stringsAsFactors = FALSE)
nrow(df.list) #3779
nrow(df.list[df.list$ext == "tif",]) #1890, an extra image
df.list$newFormation <- ""
df.list$newFormation[grepl("^0", df.list$specimenNR)] <- "NKBS"
df.list$newFormation[grepl("^1", df.list$specimenNR)] <- "NKBS"
df.list$newFormation[grepl("^2", df.list$specimenNR)] <- "NKBS"
df.list$newFormation[grepl("^3", df.list$specimenNR)] <- "NKBS"
df.list$newFormation[grepl("^4", df.list$specimenNR)] <- "NKLS"
df.list$newFormation[grepl("^5", df.list$specimenNR)] <- "NKLS"
df.list$newFormation[grepl("^6", df.list$specimenNR)] <- "Tewkesbury"
df.list$newFormation[grepl("^7", df.list$specimenNR)] <- "SHCSBSB"
df.list$newFormation[grepl("^8", df.list$specimenNR)] <- "Tainui"
df.list$newFormation[grepl("^10", df.list$specimenNR)] <- "Upper Kai-Iwi"
df.list$newFormation[grepl("^11", df.list$specimenNR)] <- "Waipuru"
write.csv(df.list,
"./Data/imageList.csv",
row.names = FALSE)
#### LOAD PACKAGES ----
require(stringr)
require(dplyr)
df.list <- read.table("./Data/imageList.csv",
header = TRUE,
sep = ";")
files.df <- read.table("./Data/txt_metadata.csv",
header = TRUE,
sep = ";")
df.list$imageName[1]
files.df$ImageName[1]
nrow(files.df)
nrow(df.list)
files.df$image <- str_extract(files.df$ImageName, pattern = "[^.]+")
files.df$image
## Meghan A. Balk
## meghan.balk@nhm.uio.no
## This code:
## 1) extracts file names from the zip file of Steginoporella images
## 2) creates a csv file with the information parsed
## 3) compares the files to the bryozoan metadata file
#### LOAD PACKAGES ----
require(stringr)
require(dplyr)
require(splitstackshape)
require(data.table)
#### EXTRACT FILE NAMES ----
list = list.files(path = "/Users/mab/Library/CloudStorage/Dropbox/Rocks-Paradox/Bryozoans/Stegino images",
full.names = TRUE,
recursive = TRUE)
## remove abstract book
list.rm <- list[!grepl("/Users/mab/Library/CloudStorage/Dropbox/Rocks-Paradox/Bryozoans/Stegino images/Stegs/ISME 14 ABSTRACT BOOK",
list)]
#### TXT ONLY ----
list.trim <- list.rm[!grepl("*.tif",
list.rm)]
length(list.trim) #1889
##unlist
txtPath <- unlist(list.trim)
#### READ TXT FILES ----
##practice with one file
f <- read.table("/Users/mab/Library/CloudStorage/Dropbox/Rocks-Paradox/Bryozoans/Stegino images/Sara/002_CV_1_15v_x30.txt",
sep = "^",
fileEncoding="UTF-16",
skip = 1)
## now make two columns, using "=" as deliminator
ff <- cSplit(f, 'V1',
sep="=",
stripWhite = TRUE,
type.convert = FALSE)
#seems Condition is multiple "="
condition <- str_split(ff[ff$V1_1 == "Condition",],
pattern = "\ ")
av <- c("AV", gsub(".0kV", "v",condition[[3]][1]))
mag <- c(condition[[3]][2], condition[[4]][1])
wd <- c(condition[[4]][2], condition[[5]][1])
lensMode <- c(condition[[5]][2], condition[[6]][1])
image <- c("path", "/Users/mab/Library/CloudStorage/Dropbox/Rocks-Paradox/Bryozoans/Stegino images/Sara/002_CV_1_15v_x30.txt")
cond.paste <- paste(ff$V1_2[ff$V1_1 == "Condition"],
ff$V1_3[ff$V1_1 == "Condition"],
ff$V1_4[ff$V1_1 == "Condition"],
ff$V1_5[ff$V1_1 == "Condition"],
ff$V1_6[ff$V1_1 == "Condition"],
sep = " ")
ff2 <- ff
ff2$V1_2[ff2$V1_1 == "Condition"] <- cond.paste
ff3 <- ff2[,1:2]
ff4 <- rbind(image, as.data.frame(ff3), av, mag, wd, lensMode)
ff4$V1_1
## now for all!
files.df <- data.frame()
for(i in 1:length(txtPath)){
f <- read.table(txtPath[i],
sep = "^",
fileEncoding = "UTF-16",
skip = 1)
## now make two columns, using "=" as deliminator
ff <- cSplit(f, 'V1',
sep = "=",
stripWhite = TRUE,
type.convert = FALSE)
#seems Condition is multiple "="
condition <- str_split(ff[ff$V1_1 == "Condition",],
pattern = "\ ")
av <- c(condition[[2]][1],condition[[3]][1])
mag <- c(condition[[3]][2], condition[[4]][1])
wd <- c(condition[[4]][2], condition[[5]][1])
lensMode <- c(condition[[5]][2], condition[[6]][1])
image <- c("path", txtPath[i])
cond.paste <- paste(ff$V1_2[ff$V1_1 == "Condition"],
ff$V1_3[ff$V1_1 == "Condition"],
ff$V1_4[ff$V1_1 == "Condition"],
ff$V1_5[ff$V1_1 == "Condition"],
ff$V1_6[ff$V1_1 == "Condition"],
sep = " ")
ff2 <- ff
ff2$V1_2[ff2$V1_1 == "Condition"] <- cond.paste
ff3 <- ff2[,1:2]
ff4 <- rbind(image, as.data.frame(ff3), av, mag, wd, lensMode)
names <- ff4$V1_1
ff5 <- as.data.frame(t(ff4[,-1]))
colnames(ff5) <- names
files.df <- rbind(files.df, ff5)
}
nrow(files.df) #1889
files.df$image <- str_extract(files.df$ImageName, pattern = "[^.]+")
imageName.parse <- str_split(files.df$image,
pattern = "_")
files.df$specimenNR <- ""
files.df$number <- ""
files.df$colonyCurve <- ""
files.df$pictureNumber <- ""
files.df$AV <- ""
files.df$magnification <- ""
files.df$backscatter <- ""
for(i in 1:nrow(files.df)){
files.df$number[i] <- imageName.parse[[i]][1]
files.df$colonyCurve[i] <- imageName.parse[[i]][2]
files.df$pictureNumber[i] <- imageName.parse[[i]][3]
files.df$AV[i] <- imageName.parse[[i]][4]
files.df$magnification[i] <- str_extract(imageName.parse[[i]][5],
pattern = "[^.]+")
files.df$backscatter[i] <- str_extract(imageName.parse[[i]][6],
pattern = "[^.]+")
files.df$specimenNR[i] <- paste0(imageName.parse[[i]][1], imageName.parse[[i]][2])
}
files.df$image <-
#write.csv(files.df,
#          "./Data/txt_metadata.csv",
#          row.names = FALSE)
## Meghan A. Balk
## meghan.balk@nhm.uio.no
## This code:
## 1) extracts file names from the zip file of Steginoporella images
## 2) creates a csv file with the information parsed
## 3) compares the files to the bryozoan metadata file
#### LOAD PACKAGES ----
require(stringr)
require(dplyr)
#### EXTRACT FILE NAMES ----
##https://stackoverflow.com/questions/54510134/getting-list-of-file-names-in-a-directory
# To list all files of a folder in a list variable including files
# from sub-folders. The code below gets the full path of files not just names.
#list = list.files(path = full_path_to_directory ,full.names=TRUE,recursive=TRUE)
# To get names of all files from their corresponding paths in all_names variable.
#all_names = basename(list)
# To write all_names variable to a CSV file.
#write.csv(all_names, "test.csv")
## get folder names
list = list.files(path = "/Users/mab/Library/CloudStorage/Dropbox/Rocks-Paradox/Bryozoans/Stegino images",
full.names = TRUE,
recursive = TRUE)
#get rid of abstract book, I think
list.rm <- list[!grepl("/Users/mab/Library/CloudStorage/Dropbox/Rocks-Paradox/Bryozoans/Stegino images/Stegs/ISME 14 ABSTRACT BOOK", list)]
#### CREATE CSV ----
listPath <- unlist(list.rm)
length(listPath) #3779
##### PARSE FILE NAMES -----
list.trim <- gsub(list.rm,
pattern = "/Users/mab/Library/CloudStorage/Dropbox/Rocks-Paradox/Bryozoans/Stegino images/",
replacement = "")
list.parse <- str_split(list.trim,
pattern = "/")
#first folder is either Sara (folder name Sara) or Mali (folder names Stegs and Stegs2)
#subfolder folder, when given, is the formation or grouping
folder <- c()
formation <- c()
ImageName <- c()
ext <- c()
for(i in 1:length(list.parse)){
folder[i] <- list.parse[[i]][1]
if(isTRUE(endsWith(list.parse[[i]][2], ".txt"))){
formation[i] <- "NONE"
}
else if(isTRUE(endsWith(list.parse[[i]][2], ".tif"))){
formation[i] <- "NONE"
}
else{
formation[i] <- list.parse[[i]][2]
}
if(isTRUE(endsWith(list.parse[[i]][2], ".txt"))){
ImageName[i] <- list.parse[[i]][2]
}
else if(isTRUE(endsWith(list.parse[[i]][2], ".tif"))){
ImageName[i] <- list.parse[[i]][2]
}
else{
ImageName[i] <- list.parse[[i]][3]
}
if(isTRUE(endsWith(ImageName[i], ".txt"))){
ext[i] <- "txt"
}
else{
ext[i] <- "tif"
}
}
##### PARSE IMAGE NAME -----
image <- str_extract(ImageName, pattern = "[^.]+")
ImageName.list <- str_split(image,
pattern = "_")
specimenNR <- c()
number <- c()
colonyCurve <- c()
pictureNumber <- c()
AV <- c()
magnification <- c()
backscatter <- c()
for(i in 1:length(ImageName.list)){
number[i] <- ImageName.list[[i]][1]
colonyCurve[i] <- ImageName.list[[i]][2]
pictureNumber[i] <- ImageName.list[[i]][3]
AV[i] <- ImageName.list[[i]][4]
magnification[i] <- str_extract(ImageName.list[[i]][5],
pattern = "[^.]+")
backscatter[i] <- str_extract(ImageName.list[[i]][6],
pattern = "[^.]+")
specimenNR[i] <- paste0(ImageName.list[[i]][1], ImageName.list[[i]][2])
}
##### COMBINE & WRITE CSV ----
df.list <- data.frame(path = listPath,
folder = folder,
formation = formation,
image = image,
ext = ext,
ImageName = ImageName,
specimenNR = specimenNR,
number = number,
colonyCurve = colonyCurve,
pictureNumber = pictureNumber,
AV = AV,
magnification = magnification,
backscatter = backscatter,
stringsAsFactors = FALSE)
nrow(df.list) #3779
nrow(df.list[df.list$ext == "tif",]) #1890, an extra image
df.list$newFormation <- ""
df.list$newFormation[grepl("^0", df.list$specimenNR)] <- "NKBS"
df.list$newFormation[grepl("^1", df.list$specimenNR)] <- "NKBS"
df.list$newFormation[grepl("^2", df.list$specimenNR)] <- "NKBS"
df.list$newFormation[grepl("^3", df.list$specimenNR)] <- "NKBS"
df.list$newFormation[grepl("^4", df.list$specimenNR)] <- "NKLS"
df.list$newFormation[grepl("^5", df.list$specimenNR)] <- "NKLS"
df.list$newFormation[grepl("^6", df.list$specimenNR)] <- "Tewkesbury"
df.list$newFormation[grepl("^7", df.list$specimenNR)] <- "SHCSBSB"
df.list$newFormation[grepl("^8", df.list$specimenNR)] <- "Tainui"
df.list$newFormation[grepl("^10", df.list$specimenNR)] <- "Upper Kai-Iwi"
df.list$newFormation[grepl("^11", df.list$specimenNR)] <- "Waipuru"
#write.csv(df.list,
#          "./Data/imageList.csv",
#          row.names = FALSE)
write.csv(df.list,
"./Data/imageList.csv",
row.names = FALSE)
files.df$image <-
write.csv(files.df,
"./Data/txt_metadata.csv",
row.names = FALSE)
#### LOAD PACKAGES ----
require(stringr)
require(dplyr)
df.list <- read.table("./Data/imageList.csv",
header = TRUE,
sep = ";")
files.df <- read.table("./Data/txt_metadata.csv",
header = TRUE,
sep = ";")
df.list$imageName[1]
files.df$ImageName[1]
df.list$image[1]
files.df$image[1]
files.df$image
str_extract(files.df$ImageName, pattern = "[^.]+")
files.df$image <- str_extract(files.df$ImageName, pattern = "[^.]+")
files.df$image
## Meghan A. Balk
## meghan.balk@nhm.uio.no
## This code:
## 1) extracts file names from the zip file of Steginoporella images
## 2) creates a csv file with the information parsed
## 3) compares the files to the bryozoan metadata file
#### LOAD PACKAGES ----
require(stringr)
require(dplyr)
require(splitstackshape)
require(data.table)
#### EXTRACT FILE NAMES ----
list = list.files(path = "/Users/mab/Library/CloudStorage/Dropbox/Rocks-Paradox/Bryozoans/Stegino images",
full.names = TRUE,
recursive = TRUE)
## remove abstract book
list.rm <- list[!grepl("/Users/mab/Library/CloudStorage/Dropbox/Rocks-Paradox/Bryozoans/Stegino images/Stegs/ISME 14 ABSTRACT BOOK",
list)]
#### TXT ONLY ----
list.trim <- list.rm[!grepl("*.tif",
list.rm)]
length(list.trim) #1889
##unlist
txtPath <- unlist(list.trim)
#### READ TXT FILES ----
##practice with one file
f <- read.table("/Users/mab/Library/CloudStorage/Dropbox/Rocks-Paradox/Bryozoans/Stegino images/Sara/002_CV_1_15v_x30.txt",
sep = "^",
fileEncoding="UTF-16",
skip = 1)
## now make two columns, using "=" as deliminator
ff <- cSplit(f, 'V1',
sep="=",
stripWhite = TRUE,
type.convert = FALSE)
#seems Condition is multiple "="
condition <- str_split(ff[ff$V1_1 == "Condition",],
pattern = "\ ")
av <- c("AV", gsub(".0kV", "v",condition[[3]][1]))
mag <- c(condition[[3]][2], condition[[4]][1])
wd <- c(condition[[4]][2], condition[[5]][1])
lensMode <- c(condition[[5]][2], condition[[6]][1])
image <- c("path", "/Users/mab/Library/CloudStorage/Dropbox/Rocks-Paradox/Bryozoans/Stegino images/Sara/002_CV_1_15v_x30.txt")
cond.paste <- paste(ff$V1_2[ff$V1_1 == "Condition"],
ff$V1_3[ff$V1_1 == "Condition"],
ff$V1_4[ff$V1_1 == "Condition"],
ff$V1_5[ff$V1_1 == "Condition"],
ff$V1_6[ff$V1_1 == "Condition"],
sep = " ")
ff2 <- ff
ff2$V1_2[ff2$V1_1 == "Condition"] <- cond.paste
ff3 <- ff2[,1:2]
ff4 <- rbind(image, as.data.frame(ff3), av, mag, wd, lensMode)
ff4$V1_1
## now for all!
files.df <- data.frame()
for(i in 1:length(txtPath)){
f <- read.table(txtPath[i],
sep = "^",
fileEncoding = "UTF-16",
skip = 1)
## now make two columns, using "=" as deliminator
ff <- cSplit(f, 'V1',
sep = "=",
stripWhite = TRUE,
type.convert = FALSE)
#seems Condition is multiple "="
condition <- str_split(ff[ff$V1_1 == "Condition",],
pattern = "\ ")
av <- c(condition[[2]][1],condition[[3]][1])
mag <- c(condition[[3]][2], condition[[4]][1])
wd <- c(condition[[4]][2], condition[[5]][1])
lensMode <- c(condition[[5]][2], condition[[6]][1])
image <- c("path", txtPath[i])
cond.paste <- paste(ff$V1_2[ff$V1_1 == "Condition"],
ff$V1_3[ff$V1_1 == "Condition"],
ff$V1_4[ff$V1_1 == "Condition"],
ff$V1_5[ff$V1_1 == "Condition"],
ff$V1_6[ff$V1_1 == "Condition"],
sep = " ")
ff2 <- ff
ff2$V1_2[ff2$V1_1 == "Condition"] <- cond.paste
ff3 <- ff2[,1:2]
ff4 <- rbind(image, as.data.frame(ff3), av, mag, wd, lensMode)
names <- ff4$V1_1
ff5 <- as.data.frame(t(ff4[,-1]))
colnames(ff5) <- names
files.df <- rbind(files.df, ff5)
}
nrow(files.df) #1889
files.df$image <- str_extract(files.df$ImageName, pattern = "[^.]+")
imageName.parse <- str_split(files.df$image,
pattern = "_")
files.df$specimenNR <- ""
files.df$number <- ""
files.df$colonyCurve <- ""
files.df$pictureNumber <- ""
files.df$AV <- ""
files.df$magnification <- ""
files.df$backscatter <- ""
for(i in 1:nrow(files.df)){
files.df$number[i] <- imageName.parse[[i]][1]
files.df$colonyCurve[i] <- imageName.parse[[i]][2]
files.df$pictureNumber[i] <- imageName.parse[[i]][3]
files.df$AV[i] <- imageName.parse[[i]][4]
files.df$magnification[i] <- str_extract(imageName.parse[[i]][5],
pattern = "[^.]+")
files.df$backscatter[i] <- str_extract(imageName.parse[[i]][6],
pattern = "[^.]+")
files.df$specimenNR[i] <- paste0(imageName.parse[[i]][1], imageName.parse[[i]][2])
}
files.df$image <-
#write.csv(files.df,
#          "./Data/txt_metadata.csv",
#          row.names = FALSE)
files.df$image
write.csv(files.df,
"./Data/txt_metadata.csv",
row.names = FALSE)
df.list <- read.table("./Data/imageList.csv",
header = TRUE,
sep = ";")
files.df <- read.table("./Data/txt_metadata.csv",
header = TRUE,
sep = ";")
df.list$image[1]
files.df$image[1]
nrow(files.df)
nrow(df.list)
df.images <- df.list[df.list$ext == "tif",]
nrow(df.images) #there's an extra image...
df.image.meta <- merge(df.images, files.df,
by = "i")
df.image.meta <- merge(df.images, files.df,
by = "image")
nrow(df.image.meta) #2 extra pictures!
write.csv(df.image.meta,
"./Data/imageFilesMetadata.csv",
row.names = FALSE)
df.image.meta <- merge(df.images, files.df,
by = "image",
all.x = TRUE, all.y = TRUE)
write.csv(df.image.meta,
"./Data/imageFilesMetadata.csv",
row.names = FALSE)
nrow(df.image.meta) #fewer images...
