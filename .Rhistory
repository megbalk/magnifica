p.vcv.col.wp[3] <- model_G[[2]]$VCV[3, 19] #cw.m
p.vcv.col.wp[4] <- model_G[[2]]$VCV[4, 28] #cw.d
p.vcv.col.wp[5] <- model_G[[2]]$VCV[5, 37] #ow.m
p.vcv.col.wp[6] <- model_G[[2]]$VCV[8, 64] #oh
p.vcv.col.wp[7] <- model_G[[2]]$VCV[6, 46] #c.side
p.vcv.col.wp[8] <- model_G[[2]]$VCV[7, 55] #o.side
p.vcv.col.wp
diag(phen.var[[2]]) #oh not bigger, of course
#just units
#c(65, 74, 83, 92, 101, 110, 119, 128) #model g has oh coming last
p.vcv.unt.wp <- c()
p.vcv.unt.wp[1] <- model_G[[2]]$VCV[1, 65] #zh
p.vcv.unt.wp[2] <- model_G[[2]]$VCV[2, 74] #mpb.w
p.vcv.unt.wp[3] <- model_G[[2]]$VCV[3, 83] #cw.m
p.vcv.unt.wp[4] <- model_G[[2]]$VCV[4, 92] #cw.d
p.vcv.unt.wp[5] <- model_G[[2]]$VCV[5, 101] #ow.m
p.vcv.unt.wp[6] <- model_G[[2]]$VCV[8, 128] #oh
p.vcv.unt.wp[7] <- model_G[[2]]$VCV[6, 110] #c.side
p.vcv.unt.wp[8] <- model_G[[2]]$VCV[7, 119] #o.side
p.vcv.unt.wp
diag(phen.var[[2]])
p.vcv.unt.nkbs
diag(phen.var[[4]])
diag(phen.var[[4]])
p.vcv.unt.wp
diag(phen.var[[4]]) #oh not bigger, of course
p.vcv.col.wp
colnames(model_G[[5]]$VCV)
#just colony.id
#c(1, 10, 19, 28, 37, 46, 55, 64)
p.vcv.col.uki <- c()
p.vcv.col.uki[1] <- model_G[[2]]$VCV[1, 1] #zh
p.vcv.col.uki[2] <- model_G[[2]]$VCV[2, 10] #mpb.w
p.vcv.col.uki[3] <- model_G[[2]]$VCV[3, 19] #cw.m
p.vcv.col.uki[4] <- model_G[[2]]$VCV[4, 28] #cw.d
p.vcv.col.uki[5] <- model_G[[2]]$VCV[5, 37] #ow.m
p.vcv.col.uki[6] <- model_G[[2]]$VCV[8, 64] #oh
p.vcv.col.uki[7] <- model_G[[2]]$VCV[6, 46] #c.side
p.vcv.col.uki[8] <- model_G[[2]]$VCV[7, 55] #o.side
diag(phen.var[[5]]) #oh not bigger, of course
p.vcv.col.uki
#just units
#c(65, 74, 83, 92, 101, 110, 119, 128) #model g has oh coming last
p.vcv.unt.uki <- c()
p.vcv.unt.uki[1] <- model_G[[2]]$VCV[1, 65] #zh
p.vcv.unt.uki[2] <- model_G[[2]]$VCV[2, 74] #mpb.w
p.vcv.unt.uki[3] <- model_G[[2]]$VCV[3, 83] #cw.m
p.vcv.unt.uki[4] <- model_G[[2]]$VCV[4, 92] #cw.d
p.vcv.unt.uki[5] <- model_G[[2]]$VCV[5, 101] #ow.m
p.vcv.unt.uki[6] <- model_G[[2]]$VCV[8, 128] #oh
p.vcv.unt.uki[7] <- model_G[[2]]$VCV[6, 110] #c.side
p.vcv.unt.uki[8] <- model_G[[2]]$VCV[7, 119] #o.side
p.vcv.unt.uki
diag(phen.var[[5]]) #cw.d is smaller
#just units
#c(65, 74, 83, 92, 101, 110, 119, 128) #model g has oh coming last
p.vcv.unt.wp <- c()
p.vcv.unt.wp[1] <- model_G[[2]]$VCV[1, 65] #zh
p.vcv.unt.wp[2] <- model_G[[2]]$VCV[2, 74] #mpb.w
p.vcv.unt.wp[3] <- model_G[[2]]$VCV[3, 83] #cw.m
p.vcv.unt.wp[4] <- model_G[[2]]$VCV[4, 92] #cw.d
p.vcv.unt.wp[5] <- model_G[[2]]$VCV[5, 101] #ow.m
#just colony.id
#c(1, 10, 19, 28, 37, 46, 55, 64)
p.vcv.col.nkbs <- c()
p.vcv.col.nkbs[1] <- model_G[[2]]$VCV[1, 1] #zh
p.vcv.col.nkbs[2] <- model_G[[2]]$VCV[2, 10] #mpb.w
p.vcv.col.nkbs[3] <- model_G[[2]]$VCV[3, 19] #cw.m
p.vcv.col.nkbs[4] <- model_G[[2]]$VCV[4, 28] #cw.d
p.vcv.col.nkbs[5] <- model_G[[2]]$VCV[5, 37] #ow.m
p.vcv.col.nkbs[6] <- model_G[[2]]$VCV[8, 64] #oh
p.vcv.col.nkbs[7] <- model_G[[2]]$VCV[6, 46] #c.side
p.vcv.col.nkbs[8] <- model_G[[2]]$VCV[7, 55] #o.side
p.vcv.col.nkbs
diag(phen.var[[2]]) #oh not bigger, of course
#just units
#c(65, 74, 83, 92, 101, 110, 119, 128) #model g has oh coming last
p.vcv.unt.nkbs <- c()
p.vcv.unt.nkbs[1] <- model_G[[2]]$VCV[1, 65] #zh
p.vcv.unt.nkbs[2] <- model_G[[2]]$VCV[2, 74] #mpb.w
p.vcv.unt.nkbs[3] <- model_G[[2]]$VCV[3, 83] #cw.m
p.vcv.unt.nkbs[4] <- model_G[[2]]$VCV[4, 92] #cw.d
p.vcv.unt.nkbs[5] <- model_G[[2]]$VCV[5, 101] #ow.m
p.vcv.unt.nkbs[6] <- model_G[[2]]$VCV[8, 128] #oh
p.vcv.unt.nkbs[7] <- model_G[[2]]$VCV[6, 110] #c.side
p.vcv.unt.nkbs[8] <- model_G[[2]]$VCV[7, 119] #o.side
p.vcv.unt.nkbs
diag(phen.var[[2]])
colnames(model_G[[4]]$VCV)
#just colony.id
#c(1, 10, 19, 28, 37, 46, 55, 64)
p.vcv.col.wp <- c()
p.vcv.col.wp[1] <- model_G[[4]]$VCV[1, 1] #zh
p.vcv.col.wp[2] <- model_G[[4]]$VCV[2, 10] #mpb.w
p.vcv.col.wp[3] <- model_G[[4]]$VCV[3, 19] #cw.m
p.vcv.col.wp[4] <- model_G[[4]]$VCV[4, 28] #cw.d
p.vcv.col.wp[5] <- model_G[[4]]$VCV[5, 37] #ow.m
p.vcv.col.wp[6] <- model_G[[4]]$VCV[8, 64] #oh
p.vcv.col.wp[7] <- model_G[[4]]$VCV[6, 46] #c.side
p.vcv.col.wp[8] <- model_G[[4]]$VCV[7, 55] #o.side
diag(phen.var[[4]]) #oh not bigger, of course
p.vcv.col.wp
#just units
#c(65, 74, 83, 92, 101, 110, 119, 128) #model g has oh coming last
p.vcv.unt.wp <- c()
p.vcv.unt.wp[1] <- model_G[[4]]$VCV[1, 65] #zh
p.vcv.unt.wp[2] <- model_G[[4]]$VCV[2, 74] #mpb.w
p.vcv.unt.wp[3] <- model_G[[4]]$VCV[3, 83] #cw.m
p.vcv.unt.wp[4] <- model_G[[4]]$VCV[4, 92] #cw.d
p.vcv.unt.wp[5] <- model_G[[4]]$VCV[5, 101] #ow.m
p.vcv.unt.wp[6] <- model_G[[4]]$VCV[8, 128] #oh
p.vcv.unt.wp[7] <- model_G[[4]]$VCV[6, 110] #c.side
p.vcv.unt.wp[8] <- model_G[[4]]$VCV[7, 119] #o.side
diag(phen.var[[4]]) #cw.d is smaller
p.vcv.unt.wp
#just colony.id
#c(1, 10, 19, 28, 37, 46, 55, 64)
p.vcv.col.uki <- c()
p.vcv.col.uki[1] <- model_G[[5]]$VCV[1, 1] #zh
p.vcv.col.uki[2] <- model_G[[5]]$VCV[2, 10] #mpb.w
p.vcv.col.uki[3] <- model_G[[5]]$VCV[3, 19] #cw.m
p.vcv.col.uki[4] <- model_G[[5]]$VCV[4, 28] #cw.d
p.vcv.col.uki[5] <- model_G[[5]]$VCV[5, 37] #ow.m
p.vcv.col.uki[6] <- model_G[[5]]$VCV[8, 64] #oh
p.vcv.col.uki[7] <- model_G[[5]]$VCV[6, 46] #c.side
p.vcv.col.uki[8] <- model_G[[5]]$VCV[7, 55] #o.side
p.vcv.col.uki
diag(phen.var[[5]]) #oh not bigger, of course
#just units
#c(65, 74, 83, 92, 101, 110, 119, 128) #model g has oh coming last
p.vcv.unt.uki <- c()
p.vcv.unt.uki[1] <- model_G[[5]]$VCV[1, 65] #zh
p.vcv.unt.uki[2] <- model_G[[5]]$VCV[2, 74] #mpb.w
p.vcv.unt.uki[3] <- model_G[[5]]$VCV[3, 83] #cw.m
p.vcv.unt.uki[4] <- model_G[[5]]$VCV[4, 92] #cw.d
p.vcv.unt.uki[5] <- model_G[[5]]$VCV[5, 101] #ow.m
p.vcv.unt.uki[6] <- model_G[[5]]$VCV[8, 128] #oh
p.vcv.unt.uki[7] <- model_G[[5]]$VCV[6, 110] #c.side
p.vcv.unt.uki[8] <- model_G[[5]]$VCV[7, 119] #o.side
p.vcv.unt.uki
diag(phen.var[[5]]) #cw.d is smaller
#just to look; highest 7836, smallest 454
by_form = lapply(by_form, function(x){dim(x)[1]})
by_form
#### SPLIT BY FORMATION ----
## by zooids:
by_form = split.data.frame(dat_lg_N,
dat_lg_N$formation)
#### SPLIT BY FORMATION ----
## by zooids:
by_form = split.data.frame(dat_lg_N,
dat_lg_N$formation)
#### LOAD LIBRARIES ----
library(ggplot2)
library(data.table)
library(evolqg)
library(dplyr)
library(nse)
library(grid)
library(gridBase)
library(gridExtra)
library(MCMCglmm)
library(corrplot)
library(MASS)
library(reshape2)
library(scatterplot3d)
library(rgl)
library(scales)
library(RColorBrewer)
library(coin)
df <- read.csv("./Results/traits_26Jun2023.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
df$zooid.id <- paste0(df$boxID, "_", df$image)
colnames(df)[colnames(df) == 'specimenNR'] <- 'colony.id'
#### PLOT THEME ----
#formations and colors:
#NKLS = #F8766D
#NKBS = #CD9600
#Twekesbury = #7CAE00
#Waipuru = #00BE67
#Upper Kai-Iwi = #00A9FF
#Tainui = #C77CFF
#SHCSBSB = #FF61CC
col.form = c("#F8766D", "#CD9600", "#7CAE00", "#00BE67", "#00A9FF", "#C77CFF", "#FF61CC")
zooid_list <- unique(df$zooid.id)
length(zooid_list) #15773
colony_list <- unique(df$colony.id)
length(colony_list) #742
##### FORMATIONS ----
# arrange formations from oldest to youngest
df$formation <- factor(df$formation, levels = c("NKLS", "NKBS", "Tewkesbury",
"Waipuru", "Upper Kai-Iwi",
"Tainui", "SHCSBSB"))
formation_list <- unique(df$formation)
length(formation_list) #7
##### LN TRANSFORM -----
df$ln.zh <- log(df$zh)
df$ln.mpw.b <- log(df$mpw.b)
df$ln.cw.m <- log(df$cw.m)
df$ln.cw.d <- log(df$cw.d)
df$ln.ow.m <- log(df$ow.m)
df$ln.oh <- log(df$oh)
df$ln.o.side <- log(df$o.side)
df$ln.c.side <- log(df$c.side)
traits = names(df[, c("ln.zh", "ln.mpw.b", "ln.cw.m", "ln.cw.d",
"ln.ow.m", "ln.oh", "ln.c.side", "ln.o.side")])
##### TRIM DATASET ----
df.trim <- df %>%
dplyr::select(zooid.id, colony.id, formation, matches(traits))
colNums <- match(c(traits, "zooid.id"), names(df.trim))
df = as.data.frame(df.trim)
##### DISTRIBUTIONS -----
p.zh = ggplot(data = df) +
geom_density(aes(x = df[, traits[1]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[1]) +
scale_color_manual(values = col.form)
names(df)
p.mpw.b = ggplot(data = df) +
geom_density(aes(x = df[, traits[2]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[2]) +
scale_color_manual(values = col.form)
p.cw.m = ggplot(data = df) +
geom_density(aes(x = df[, traits[3]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[3]) +
scale_color_manual(values = col.form)
p.cw.d = ggplot(data = df) +
geom_density(aes(x = df[, traits[4]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[4]) +
scale_color_manual(values = col.form)
p.ow.m = ggplot(data = df) +
geom_density(aes(x = df[, traits[5]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[5]) +
scale_color_manual(values = col.form)
p.oh = ggplot(data = df) +
geom_density(aes(x = df[, traits[6]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[6]) +
scale_color_manual(values = col.form)
p.c.side = ggplot(data = df) +
geom_density(aes(x = df[, traits[7]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[7]) +
scale_color_manual(values = col.form)
p.o.side = ggplot(data = df) +
geom_density(aes(x = df[, traits[8]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[8]) +
scale_color_manual(values = col.form)
Fig = list(p.zh, p.mpw.b, p.cw.m, p.cw.d, p.ow.m, p.oh, p.c.side, p.o.side)
ml <- marrangeGrob(Fig, nrow = 4, ncol = 2)
ml
#### REDUCE TO TRAITS OF INTEREST ----
trt_lg_N = c("formation", "colony.id", "zooid.id", traits)
dat_lg_N = df[intersect(colnames(df), trt_lg_N)]
head(dat_lg_N)
dat_lg_N
mean_by_formation_colony = dat_lg_N %>% #use this going forward
group_by(formation, colony.id) %>%
summarize(n.zooid = length(unique(zooid.id)),
avg.zh = mean(ln.zh, na.rm = T),
avg.mpw.b = mean(ln.mpw.b, na.rm = T),
avg.cw.m = mean(ln.cw.m, na.rm = T),
avg.cw.d = mean(ln.cw.d, na.rm = T),
avg.ow.m = mean(ln.ow.m, na.rm = T),
avg.oh = mean(ln.oh, na.rm = T),
avg.o.side = mean(ln.o.side, na.rm = T),
avg.c.side = mean(ln.c.side, na.rm = T)) %>%
as.data.frame()
#means of means
mean_by_formation = mean_by_formation_colony %>%
group_by(formation) %>%
summarize(n.col = length(unique(colony.id)),
avg.zh = mean(avg.zh, na.rm = T),
avg.mpw.b = mean(avg.mpw.b, na.rm = T),
avg.cw.m = mean(avg.cw.m, na.rm = T),
avg.cw.d = mean(avg.cw.d, na.rm = T),
avg.ow.m = mean(avg.ow.m, na.rm = T),
avg.oh = mean(avg.oh, na.rm = T),
avg.o.side = mean(avg.o.side, na.rm = T),
avg.c.side = mean(avg.c.side, na.rm = T)) %>%
as.data.frame()
colony_means = dat_lg_N %>%
group_by(colony.id) %>%
summarize(formation = formation[1],
n.zooid = length(unique(zooid.id)),
avg.zh = mean(ln.zh, na.rm = T),
avg.mpw.b = mean(ln.mpw.b, na.rm = T),
avg.cw.m = mean(ln.cw.m, na.rm = T),
avg.cw.d = mean(ln.cw.d, na.rm = T),
avg.ow.m = mean(ln.ow.m, na.rm = T),
avg.oh = mean(ln.oh, na.rm = T),
avg.o.side = mean(ln.o.side, na.rm = T),
avg.c.side = mean(ln.c.side, na.rm = T)) %>%
as.data.frame()
means = dat_lg_N %>%
summarize(avg.zh = mean(ln.zh, na.rm = T),
avg.mpw.b = mean(ln.mpw.b, na.rm = T),
avg.cw.m = mean(ln.cw.m, na.rm = T),
avg.cw.d = mean(ln.cw.d, na.rm = T),
avg.ow.m = mean(ln.ow.m, na.rm = T),
avg.oh = mean(ln.oh, na.rm = T),
avg.o.side = mean(ln.o.side, na.rm = T),
avg.c.side = mean(ln.c.side, na.rm = T)) %>%
as.data.frame()
#### CHECK SAMPLE SIZES ----
## number of zooids per colony
range(mean_by_formation_colony$n.zooid)
mean_by_formation
mean_by_formation_colony = dat_lg_N %>% #use this going forward
group_by(formation, colony.id) %>%
summarize(n.zooid = length(unique(zooid.id)),
avg.zh = mean(ln.zh, na.rm = T),
avg.mpw.b = mean(ln.mpw.b, na.rm = T),
avg.cw.m = mean(ln.cw.m, na.rm = T),
avg.cw.d = mean(ln.cw.d, na.rm = T),
avg.ow.m = mean(ln.ow.m, na.rm = T),
avg.oh = mean(ln.oh, na.rm = T),
avg.o.side = mean(ln.o.side, na.rm = T),
avg.c.side = mean(ln.c.side, na.rm = T)) %>%
as.data.frame()
mean_by_formation_colony
data(PlodiaPO)
model1<-MCMCglmm(PO~1, random=~FSfamily, data=PlodiaPO, verbose=FALSE,
nitt=1300, burnin=300, thin=1)
library(ggplot2)
library(data.table)
library(evolqg)
library(dplyr)
library(nse)
library(grid)
library(gridBase)
library(gridExtra)
library(MCMCglmm)
library(corrplot)
library(MASS)
library(reshape2)
library(scatterplot3d)
library(rgl)
library(scales)
library(RColorBrewer)
library(coin)
data(PlodiaPO)
model1<-MCMCglmm(PO~1, random=~FSfamily, data=PlodiaPO, verbose=FALSE,
nitt=1300, burnin=300, thin=1)
summary(model1)
data(PlodiaPO)
PlodiaPO
head(PlodiaPO)
model1
head(model1)
model1$VCV
data(bird.families)
bird.families
phylo.effect<-rbv(bird.families, 1, nodes="TIPS")
phenotype<-phylo.effect+rnorm(dim(phylo.effect)[1], 0, 1)
#
test.data<-data.frame(phenotype=phenotype, taxon=row.names(phenotype))
Ainv<-inverseA(bird.families)$Ainv
# inverse matrix of shared phyloegnetic history
prior<-list(R=list(V=1, nu=0.002), G=list(G1=list(V=1, nu=0.002)))
model2<-MCMCglmm(phenotype~1, random=~taxon, ginverse=list(taxon=Ainv),
data=test.data, prior=prior, verbose=FALSE, nitt=1300, burnin=300, thin=1)
plot(model2$VCV)
library(ggplot2)
library(data.table)
library(evolqg)
library(dplyr)
library(nse)
library(grid)
library(gridBase)
library(gridExtra)
library(MCMCglmm)
library(corrplot)
library(MASS)
library(reshape2)
library(scatterplot3d)
library(rgl)
library(scales)
library(RColorBrewer)
library(coin)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(eval = FALSE)
library(ggplot2)
library(data.table)
library(evolqg)
library(dplyr)
library(nse)
library(grid)
library(gridBase)
library(gridExtra)
library(MCMCglmm)
library(corrplot)
library(MASS)
library(reshape2)
library(scatterplot3d)
library(rgl)
library(scales)
library(RColorBrewer)
library(coin)
in_data<-read.table("chet_dat_rm.txt", header=TRUE,stringsAsFactors = F)
head(in_data)
in_age<-read.table("chet_age.txt", header=TRUE,stringsAsFactors = F)
colnames(in_age)=c("age","COL","SP")
head(in_age)
#Merge data sp by age
indat=merge(in_data,in_age,by="COL")
#Extract unique elements and trait names
colony_list<-unique(in_data$COL)
length(colony_list)
species_list<-unique(in_data$SP)
length(species_list)
traits=names(indat[,4:52])
colNums <- match(c(traits,"COL"),names(indat))
indat=as.data.frame(indat)
Fig <- list ()
for (i in 1:length(traits)){
trt=traits[i]
range_bin=c(min(indat[,3+i],na.rm = T),max(indat[,3+i],na.rm = T))
Fig[[i]] = ggplot(data=indat,aes_string(x=trt,fill="SP.x"))+
geom_histogram(position="identity",binwidth = (range_bin[2]-range_bin[1])/30)+
theme(legend.position="none",text = element_text(size=20))
rm(range_bin)
}
ml <- marrangeGrob(Fig, nrow=7, ncol=7)
ml
trt_lg_N=c("COL","SP.x","age","LZ","WZ","LO","WO","LD","LAVS", "LAVL","NUMA")
dat_lg_N=indat[ intersect(colnames(indat), trt_lg_N)]
head(dat_lg_N)
trt_lg_N=c("COL","SP.x","age","LZ","WZ","LO","WO","LD","LAVS", "LAVL","NUMA")
dat_lg_N=indat[ intersect(colnames(indat), trt_lg_N)]
head(dat_lg_N)
mean_by_age=setDT(na.omit(dat_lg_N))[, lapply(.SD, mean, na.rm=F), by = .(SP.x,age)]
head(mean_by_age[order(mean_by_age$SP.x)])
colony_means=setDT(na.omit(dat_lg_N))[, lapply(.SD, mean, na.rm=F), by = .(SP.x,COL)]
head(colony_means[order(colony_means$SP.x)])
sp_mean=setDT(na.omit(dat_lg_N))[, lapply(.SD, mean, na.rm=F), by = .(SP.x)]
head(sp_mean[order(sp_mean$SP.x)])
dat_lda=dat_lg_N
dat_lda[,3:10]=scale(dat_lda[,3:10],center=F,scale=T)
data_discriminant=dat_lda
#Selecting the species that are present in Cheetham's Figure for comparison.
data_discriminant=data_discriminant[data_discriminant$SP.x=='auric'|
data_discriminant$SP.x=='lacry'|
data_discriminant$SP.x=='nsp09'|
data_discriminant$SP.x=='nsp10'|
data_discriminant$SP.x=='coll'|
data_discriminant$SP.x=='nsp03'|
data_discriminant$SP.x=='nsp04',]
data_plot=na.omit(data_discriminant[,1:10])
r3 <- lda(formula = SP.x ~ .,
data = data_plot[,2:10], method='mle')
plda = predict(object = r3, # predictions
newdata = data_plot)
prop.lda = r3$svd^2/sum(r3$svd^2) #proportion of the variance explained by each LD axis
dataset = data.frame(species = (data_plot)[,"SP.x"],
lda = plda$x)
p1 <- ggplot(dataset) + geom_point(aes(lda.LD1, lda.LD2, color = species), size = 4) +
labs(x = paste("LD1 (", percent(prop.lda[1]), ")", sep=""),
y = paste("LD2 (", percent(prop.lda[2]), ")", sep=""))
#Preparing the data
colony_SP=split.data.frame(dat_lg_N,dat_lg_N$SP.x)
sample_sizes=lapply(colony_SP,function(x){dim(x)[1]})
enough=as.matrix(sample_sizes)>100
colony_final=colony_SP[names(enough[enough==T,])]
col_data=lapply(colony_final,function(x) x[complete.cases(x),])
#Setting priors for MCMC chain
phen.var=lapply(col_data,function (x){ (cov(x[,3:10]))})
prior=lapply(phen.var, function (x){list(G=list(G1=list(V=x/2,nu=2),
G2=list(V=x/4,nu=2)),
R=list(V=x/4,nu=2))})
#Running the MCMC chain
model_G=list()
for (i in 1:1){
model_G[[i]]<-MCMCglmm(cbind(LZ,WZ, LO, WO, LD, LAVS, LAVL, NUMA)~trait-1,
random=~us(trait):COL + us(trait):age,
rcov=~us(trait):units,
family=rep("gaussian",8),
data=col_data[[i]],
nitt=1500000,thin=1000,burnin=500000,
prior=prior[[i]],verbose=TRUE)
}
