ggsave(p.dist.gmat.b,
file = "./Results/dist.g.mat.to.mag.beta.png",
width = 14, height = 10, units = "cm")
summary(lm(as.numeric(dist.gmat) ~ as.numeric(mag.beta),
data = diff.beta.gmax.df)) #nonsig; no relationship
Gmax_glob <- eigen(Glob_ext_pos)$vectors[,1]
Gmax_glob_norm  <- f.normalize_vector(Gmax_glob)
## Global G
# Calculate the dot product of the unit vectors
dot_product.glob_Gmax_t1 <- sum(Gmax_glob_norm * evolved_difference_unit_length_t1) #0.12008
# Calculate the angle in radians
angle_radians.glob_Gmax_t1 <- acos(dot_product.glob_Gmax_t1)
# Convert the angle to degrees
angle_degrees.glob_Gmax_t1 <- angle_radians.glob_Gmax_t1 * (180 / pi)
dot_product.glob_Gmax_t1
angle_degrees.glob_Gmax_t1
# Calculate the dot product of the unit vectors
dot_product.glob_Gmax_t2 <- sum(Gmax_glob_norm * evolved_difference_unit_length_t2) #0.5914551
# Calculate the angle in radians
angle_radians.glob_Gmax_t2 <- acos(dot_product.glob_Gmax_t2)
# Convert the angle to degrees
angle_degrees.glob_Gmax_t2 <- angle_radians.glob_Gmax_t2 * (180 / pi)
# Calculate the dot product of the unit vectors
dot_product.glob_Gmax_t3 <- sum(Gmax_glob_norm * evolved_difference_unit_length_t3) #-0.9511204
# Calculate the angle in radians
angle_radians.glob_Gmax_t3 <- acos(dot_product.glob_Gmax_t3)
# Convert the angle to degrees
angle_degrees.glob_Gmax_t3 <- angle_radians.glob_Gmax_t3 * (180 / pi)
# Calculate the dot product of the unit vectors
dot_product.glob_Gmax_t4 <- sum(Gmax_glob_norm * evolved_difference_unit_length_t4) #-0.8357084
# Calculate the angle in radians
angle_radians.glob_Gmax_t4 <- acos(dot_product.glob_Gmax_t4)
# Convert the angle to degrees
angle_degrees.glob_Gmax_t4 <- angle_radians.glob_Gmax_t4 * (180 / pi)
# Calculate the dot product of the unit vectors
dot_product.glob_Gmax_t5 <- sum(Gmax_glob_norm * evolved_difference_unit_length_t5) #0.7010653
# Calculate the angle in radians
angle_radians.glob_Gmax_t5 <- acos(dot_product.glob_Gmax_t5)
# Convert the angle to degrees
angle_degrees.glob_Gmax_t5 <- angle_radians.glob_Gmax_t5 * (180 / pi)
# Calculate the dot product of the unit vectors
dot_product.glob_Gmax_t6 <- sum(Gmax_glob_norm * evolved_difference_unit_length_t6) #0.01431066
# Calculate the angle in radians
angle_radians.glob_Gmax_t6 <- acos(dot_product.glob_Gmax_t6)
# Convert the angle to degrees
angle_degrees.glob_Gmax_t6 <- angle_radians.glob_Gmax_t6 * (180 / pi)
## for 2-4 as well:
dot_product.G2_NKLS <- sum(G2_NKLS_norm * evolved_difference_unit_length_t1) #0.12008
dot_product.glob_Gmax_t2
angle_degrees.glob_Gmax_t2
dot_product.glob_Gmax_t4
dot_product.glob_Gmax_t3
angle_degrees.glob_Gmax_t3
180-161.8272
dot_product.glob_Gmax_t4
angle_degrees.glob_Gmax_t4
180-129.7169
# Calculate the dot product of the unit vectors
dot_product.glob_Gmax_t5 <- sum(Gmax_glob_norm * evolved_difference_unit_length_t5) #0.7010653
dot_product.glob_Gmax_t5
angle_degrees.glob_Gmax_t5
dot_product.glob_Gmax_t6
angle_degrees.glob_Gmax_t6
180-94.87648
#trait means by time
mean_by_formation
###### OBSERVED EVOLVABILITY ------
### The evolvability in the direction of divergence from sample/formation 1 to sample/formation 2
#observed_evolvability_in_direction_of_change<-t(evolved_difference_unit_length)%*%as.matrix(G_matrix_1)%*%evolved_difference_unit_length
p_observed_evolvability_in_direction_of_change_t1 <- t(evolved_difference_unit_length_t1)%*%as.matrix(P_ext_NKLS)%*%evolved_difference_unit_length_t1
p_observed_evolvability_in_direction_of_change_t2 <- t(evolved_difference_unit_length_t2)%*%as.matrix(P_ext_NKBS)%*%evolved_difference_unit_length_t2
p_observed_evolvability_in_direction_of_change_t3 <- t(evolved_difference_unit_length_t3)%*%as.matrix(P_ext_tewk)%*%evolved_difference_unit_length_t3
p_observed_evolvability_in_direction_of_change_t4 <- t(evolved_difference_unit_length_t4)%*%as.matrix(P_ext_uki)%*%evolved_difference_unit_length_t4
p_observed_evolvability_in_direction_of_change_t5 <- t(evolved_difference_unit_length_t5)%*%as.matrix(P_ext_tai)%*%evolved_difference_unit_length_t5
p_observed_evolvability_in_direction_of_change_t6 <- t(evolved_difference_unit_length_t6)%*%as.matrix(P_ext_SHCSBSB)%*%evolved_difference_unit_length_t6
###### OBSERVED CONDITIONAL EVOLVABILITY ------
### The conditional evolvability in the direction of divergence
#observed_conditional_evolvability_in_direction_of_change<-1/(t(evolved_difference_unit_length)%*%solve(as.matrix(G_matrix_1))%*%evolved_difference_unit_length)
p_observed_conditional_evolvability_in_direction_of_change_t1 <- 1/(t(evolved_difference_unit_length_t1)%*%solve(as.matrix(P_ext_NKLS))%*%evolved_difference_unit_length_t1)
p_observed_conditional_evolvability_in_direction_of_change_t2 <- 1/(t(evolved_difference_unit_length_t2)%*%solve(as.matrix(P_ext_NKBS))%*%evolved_difference_unit_length_t2)
p_observed_conditional_evolvability_in_direction_of_change_t3 <- 1/(t(evolved_difference_unit_length_t3)%*%solve(as.matrix(P_ext_tewk))%*%evolved_difference_unit_length_t3)
p_observed_conditional_evolvability_in_direction_of_change_t4 <- 1/(t(evolved_difference_unit_length_t4)%*%solve(as.matrix(P_ext_uki))%*%evolved_difference_unit_length_t4)
p_observed_conditional_evolvability_in_direction_of_change_t5 <- 1/(t(evolved_difference_unit_length_t5)%*%solve(as.matrix(P_ext_tai))%*%evolved_difference_unit_length_t5)
p_observed_conditional_evolvability_in_direction_of_change_t6 <- 1/(t(evolved_difference_unit_length_t6)%*%solve(as.matrix(P_ext_SHCSBSB))%*%evolved_difference_unit_length_t6)
### Generate 10,000 selection gradients in random directions in the n-dimensional space
n_dimensions <- 8 # number of traits in G matrix
Beta <- randomBeta(10000, n_dimensions)
# Compute the mean, minimum and maximum evolvability (e_mean, e_min, e_max) for a G matrix based on 10,000 random selection gradients
p_X_t1 <- evolvabilityBeta(as.matrix(P_ext_NKLS), Beta)
p_sumX_t1 <- summary(p_X_t1) #provides you with info on mean, minimum and maximum evolvability  (e_mean, e_min, e_max) and conditional evolvability  (c_mean, c_min, c_max) for a given G matrix
p_X_t2 <- evolvabilityBeta(as.matrix(P_ext_NKBS), Beta)
p_sumX_t2 <- summary(p_X_t2) #provides you with info on mean, minimum and maximum evolvability  (e_mean, e_min, e_max) and conditional evolvability  (c_mean, c_min, c_max) for a given G matrix
p_X_t3 <- evolvabilityBeta(as.matrix(P_ext_tewk), Beta)
p_sumX_t3 <- summary(p_X_t3) #provides you with info on mean, minimum and maximum evolvability  (e_mean, e_min, e_max) and conditional evolvability  (c_mean, c_min, c_max) for a given G matrix
p_X_t4 <- evolvabilityBeta(as.matrix(P_ext_uki), Beta)
p_sumX_t4 <- summary(p_X_t4) #provides you with info on mean, minimum and maximum evolvability  (e_mean, e_min, e_max) and conditional evolvability  (c_mean, c_min, c_max) for a given G matrix
p_X_t5 <- evolvabilityBeta(as.matrix(P_ext_tai), Beta)
p_sumX_t5 <- summary(p_X_t5) #provides you with info on mean, minimum and maximum evolvability  (e_mean, e_min, e_max) and conditional evolvability  (c_mean, c_min, c_max) for a given G matrix
p_X_t6 <- evolvabilityBeta(as.matrix(P_ext_SHCSBSB), Beta)
p_sumX_t6 <- summary(p_X_t6) #provides you with info on mean, minimum and maximum evolvability  (e_mean, e_min, e_max) and conditional evolvability  (c_mean, c_min, c_max) for a given G matrix
p_X_t7 <- evolvabilityBeta(as.matrix(P_ext_mod), Beta)
p_sumX_t7 <- summary(p_X_t7) #provides you with info on mean, minimum and maximum evolvability  (e_mean, e_min, e_max) and conditional evolvability  (c_mean, c_min, c_max) for a given G matrix
p_X_sum <- data.frame(p_c.mean = c(p_sumX_t1$Averages[[3]], p_sumX_t2$Averages[[3]], p_sumX_t3$Averages[[3]],
p_sumX_t4$Averages[[3]], p_sumX_t5$Averages[[3]], p_sumX_t6$Averages[[3]],
p_sumX_t7$Averages[[3]]),
p_c.min = c(p_sumX_t1$Minimum[[3]], p_sumX_t2$Minimum[[3]], p_sumX_t3$Minimum[[3]],
p_sumX_t4$Minimum[[3]], p_sumX_t5$Minimum[[3]], p_sumX_t6$Minimum[[3]],
p_sumX_t7$Minimum[[3]]),
p_c.max = c(p_sumX_t1$Maximum[[3]], p_sumX_t2$Maximum[[3]], p_sumX_t3$Maximum[[3]],
p_sumX_t4$Maximum[[3]], p_sumX_t5$Maximum[[3]], p_sumX_t6$Maximum[[3]],
p_sumX_t7$Maximum[[3]]),
p_e.mean = c(p_sumX_t1$Averages[[1]], p_sumX_t2$Averages[[1]], p_sumX_t3$Averages[[1]],
p_sumX_t4$Averages[[1]], p_sumX_t5$Averages[[1]], p_sumX_t6$Averages[[1]],
p_sumX_t7$Averages[[1]]),
p_e.min = c(p_sumX_t1$Minimum[[1]], p_sumX_t2$Minimum[[1]], p_sumX_t3$Minimum[[1]],
p_sumX_t4$Minimum[[1]], p_sumX_t5$Minimum[[1]], p_sumX_t6$Minimum[[1]],
p_sumX_t7$Minimum[[1]]),
p_e.max = c(p_sumX_t1$Maximum[[1]], p_sumX_t2$Maximum[[1]], p_sumX_t3$Maximum[[1]],
p_sumX_t4$Maximum[[1]], p_sumX_t5$Maximum[[1]], p_sumX_t6$Maximum[[1]],
p_sumX_t7$Maximum[[1]]),
p_observed_e = c(p_observed_evolvability_in_direction_of_change_t1,
p_observed_evolvability_in_direction_of_change_t2,
p_observed_evolvability_in_direction_of_change_t3,
p_observed_evolvability_in_direction_of_change_t4,
p_observed_evolvability_in_direction_of_change_t5,
p_observed_evolvability_in_direction_of_change_t6,
""),
p_observed_c = c(p_observed_conditional_evolvability_in_direction_of_change_t1,
p_observed_conditional_evolvability_in_direction_of_change_t2,
p_observed_conditional_evolvability_in_direction_of_change_t3,
p_observed_conditional_evolvability_in_direction_of_change_t4,
p_observed_conditional_evolvability_in_direction_of_change_t5,
p_observed_conditional_evolvability_in_direction_of_change_t6,
""),
row.names = levels(formation_list))
write.csv(p_X_sum,
"./Results/p_evolvability.summary.no.wai.csv")
## PLOT
p_X_sum$formation <- rownames(p_X_sum)
p_X_sum$formation <- factor(p_X_sum$formation, levels = c("NKLS", "NKBS",
"Tewkesbury", "Upper Kai-Iwi",
"Tainui", "SHCSBSB", "modern"))
p_X_sum$form.trans <- c("NKLS to NKBS",
"NKBS to Tewkesbury",
"Tewkesbury to Upper Kai-Iwi",
"Upper Kai-Iwi to Tainui",
"Tainui to SHCSBSB",
"SHCSBSB to modern",
"")
p_X_sum$form.trans <- factor(p_X_sum$form.trans, levels = c("NKLS to NKBS",
"NKBS to Tewkesbury",
"Tewkesbury to Upper Kai-Iwi",
"Upper Kai-Iwi to Tainui",
"Tainui to SHCSBSB",
"SHCSBSB to modern",
""))
p_X_sum.trim <- p_X_sum[1:6,]
p.p_evol <- ggplot(p_X_sum.trim, aes(x = form.trans)) +
geom_boxplot(aes(ymin = p_e.min,
lower = p_e.min,
middle = p_e.mean,
ymax = p_e.max,
upper = p_e.max,
fill = "gray"),
stat = "identity", fill = "gray") +
geom_point(aes(y = as.numeric(p_observed_e),
color = "black"),
size = 5, shape = 17, color = "black") +
scale_x_discrete(name = "Formation",
guide = guide_axis(angle = 45)) +
scale_y_continuous(name = "Evolvability") +
plot.theme
### Proportion of variance in n-dimensional trait space that is explained by PC1 (i.e., the first eigenvector)
#eigen(as.matrix(G_matrix_1))$values[1]/sum(eigen(as.matrix(G_matrix_1))$values)
eigen(as.matrix(P_ext_NKLS))$values[1]/sum(eigen(as.matrix(P_ext_NKLS))$values) #0.4448337; G: 0.4731959
eigen(as.matrix(P_ext_NKBS))$values[1]/sum(eigen(as.matrix(P_ext_NKBS))$values) #0.4611266; G: 0.4819061
eigen(as.matrix(P_ext_tewk))$values[1]/sum(eigen(as.matrix(P_ext_tewk))$values) #0.4759648; G: 0.4578517
eigen(as.matrix(P_ext_uki))$values[1]/sum(eigen(as.matrix(P_ext_uki))$values) #0.4968204; G: 0.5058219
eigen(as.matrix(P_ext_tai))$values[1]/sum(eigen(as.matrix(P_ext_tai))$values) #0.4023307; G: 0.3844157
eigen(as.matrix(P_ext_SHCSBSB))$values[1]/sum(eigen(as.matrix(P_ext_SHCSBSB))$values) #0.4271263; G: 0.4479779
eigen(as.matrix(P_ext_mod))$values[1]/sum(eigen(as.matrix(P_ext_mod))$values) #0.4686239; G: 0.5337849
### How much is the direction of Pmax (i.e., the direction first ) varying between different G-matrices?
Pmax_NKLS <- eigen(P_ext_NKLS)$vectors[,1]
Pmax_NKBS <- eigen(P_ext_NKBS)$vectors[,1]
Pmax_tewk <- eigen(P_ext_tewk)$vectors[,1]
Pmax_uki <- eigen(P_ext_uki)$vectors[,1]
Pmax_tai <- eigen(P_ext_tai)$vectors[,1]
Pmax_SHCSBSB <- eigen(P_ext_SHCSBSB)$vectors[,1]
Pmax_mod <- eigen(P_ext_mod)$vectors[,1]
# Put Gmax to norm length
Pmax_NKLS_norm <- f.normalize_vector(Pmax_NKLS)
Pmax_NKBS_norm <- f.normalize_vector(Pmax_NKBS)
Pmax_tewk_norm <- f.normalize_vector(Pmax_tewk)
Pmax_uki_norm <- f.normalize_vector(Pmax_uki)
Pmax_tai_norm <- f.normalize_vector(Pmax_tai)
Pmax_SHCSBSB_norm <- f.normalize_vector(Pmax_SHCSBSB)
Pmax_mod_norm <- f.normalize_vector(Pmax_mod)
# Calculate the dot product of the unit vectors
dot_product.Pmax_NKLS_NKBS <- sum(Pmax_NKLS_norm * Pmax_NKBS_norm) #0.9924478
# Calculate the angle in radians
angle_radians.Pmax_NKLS_NKBS <- acos(dot_product.Pmax_NKLS_NKBS)
# Convert the angle to degrees
angle_degrees.Pmax_NKLS_NKBS <- angle_radians.Pmax_NKLS_NKBS * (180 / pi)
dot_product.Pmax_NKBS_tewk <- sum(Pmax_NKBS_norm * Pmax_tewk_norm) #0.9979371
# Calculate the angle in radians
angle_radians.Pmax_NKBS_tewk <- acos(dot_product.Pmax_NKBS_tewk)
# Convert the angle to degrees
angle_degrees.Pmax_NKBS_tewk <- angle_radians.Pmax_NKBS_tewk * (180 / pi)
dot_product.Pmax_tewk_uki <- sum(Pmax_tewk_norm * Pmax_uki_norm) #0.9136565
# Calculate the angle in radians
angle_radians.Pmax_tewk_uki <- acos(dot_product.Pmax_tewk_uki)
# Convert the angle to degrees
angle_degrees.Pmax_tewk_uki <- angle_radians.Pmax_tewk_uki * (180 / pi)
dot_product.Pmax_uki_tai <- sum(Pmax_uki_norm * Pmax_tai_norm) #0.8899413
# Calculate the angle in radians
angle_radians.Pmax_uki_tai <- acos(dot_product.Pmax_uki_tai)
# Convert the angle to degrees
angle_degrees.Pmax_uki_tai <- angle_radians.Pmax_uki_tai * (180 / pi)
dot_product.Pmax_tai_SHCSBSB <- sum(Pmax_tai_norm * Pmax_SHCSBSB_norm) #0.9944918
# Calculate the angle in radians
angle_radians.Pmax_tai_SHCSBSB <- acos(dot_product.Pmax_tai_SHCSBSB)
# Convert the angle to degrees
angle_degrees.Pmax_tai_SHCSBSB <- angle_radians.Pmax_tai_SHCSBSB * (180 / pi)
dot_product.Pmax_SHCSBSB_mod <- sum(Pmax_SHCSBSB_norm * Pmax_mod_norm) #0.9175009
# Calculate the angle in radians
angle_radians.Pmax_SHCSBSB_mod <- acos(dot_product.Pmax_SHCSBSB_mod)
# Convert the angle to degrees
angle_degrees.Pmax_SHCSBSB_mod <- angle_radians.Pmax_SHCSBSB_mod * (180 / pi)
corr.diff_Ps <- c(dot_product.Pmax_NKLS_NKBS, dot_product.Pmax_NKBS_tewk,
dot_product.Pmax_tewk_uki, dot_product.Pmax_uki_tai,
dot_product.Pmax_tai_SHCSBSB, dot_product.Pmax_SHCSBSB_mod)
angle_diff_Ps <- c(angle_degrees.Pmax_NKLS_NKBS, angle_degrees.Pmax_NKBS_tewk,
angle_degrees.Pmax_tewk_uki,
angle_degrees.Pmax_uki_tai, angle_degrees.Pmax_tai_SHCSBSB,
angle_degrees.Pmax_SHCSBSB_mod)
dot_product.Pmax_NKLS_NKBS
angle_degrees.Pmax_NKLS_NKBS
### See if change is in direction of P max
## use Pmax of t1 and compare to ∆z
# Calculate the dot product of the unit vectors
dot_product.Pmax_NKLS_max <- sum(Pmax_NKLS_norm * evolved_difference_unit_length_t1)
# Calculate the angle in radians
angle_radians.Pmax_NKLS_max <- acos(dot_product.Pmax_NKLS_max)
# Convert the angle to degrees
angle_degrees.Pmax_NKLS_max <- angle_radians.Pmax_NKLS_max * (180 / pi)
# Calculate the dot product of the unit vectors
dot_product.Pmax_NKBS_max <- sum(Pmax_NKBS_norm * evolved_difference_unit_length_t2)
# Calculate the angle in radians
angle_radians.Pmax_NKBS_max <- acos(dot_product.Pmax_NKBS_max)
# Convert the angle to degrees
angle_degrees.Pmax_NKBS_max <- angle_radians.Pmax_NKBS_max * (180 / pi)
# Calculate the dot product of the unit vectors
dot_product.Pmax_tewk_max <- sum(Pmax_tewk_norm * evolved_difference_unit_length_t3)
# Calculate the angle in radians
angle_radians.Pmax_tewk_max <- acos(dot_product.Pmax_tewk_max)
# Convert the angle to degrees
angle_degrees.Pmax_tewk_max <- angle_radians.Pmax_tewk_max * (180 / pi)
# Calculate the dot product of the unit vectors
dot_product.Pmax_uki_max <- sum(Pmax_uki_norm * evolved_difference_unit_length_t4)
# Calculate the angle in radians
angle_radians.Pmax_uki_max <- acos(dot_product.Pmax_uki_max)
# Convert the angle to degrees
angle_degrees.Pmax_uki_max <- angle_radians.Pmax_uki_max * (180 / pi)
# Calculate the dot product of the unit vectors
dot_product.Pmax_tai_max <- sum(Pmax_tai_norm * evolved_difference_unit_length_t5)
# Calculate the angle in radians
angle_radians.Pmax_tai_max <- acos(dot_product.Pmax_tai_max)
# Convert the angle to degrees
angle_degrees.Pmax_tai_max <- angle_radians.Pmax_tai_max * (180 / pi)
# Calculate the dot product of the unit vectors
dot_product.Pmax_SHCSBSB_max <- sum(Pmax_SHCSBSB_norm * evolved_difference_unit_length_t6)
# Calculate the angle in radians
angle_radians.Pmax_SHCSBSB_max <- acos(dot_product.Pmax_SHCSBSB_max)
# Convert the angle to degrees
angle_degrees.Pmax_SHCSBSB_max <- angle_radians.Pmax_SHCSBSB_max * (180 / pi)
corr.diff_Pmax_to_P <- c(dot_product.Pmax_NKLS_max, dot_product.Pmax_NKBS_max,
dot_product.Pmax_tewk_max, dot_product.Pmax_uki_max,
dot_product.Pmax_tai_max, dot_product.Pmax_SHCSBSB_max, "")
angle_diff_Pmax_to_P <- c(angle_degrees.Pmax_NKLS_max, angle_degrees.Pmax_NKBS_max,
angle_degrees.Pmax_tewk_max,
angle_degrees.Pmax_uki_max, angle_degrees.Pmax_tai_max,
angle_degrees.Pmax_SHCSBSB_max, "")
dot_product.Pmax_NKLS_max
angle_degrees.Pmax_NKLS_max
180-103.3285
dot_product.Pmax_NKBS_max
angle_degrees.Pmax_NKBS_max
dot_product.Pmax_tewk_max
angle_degrees.Pmax_tewk_max
180-149.8183
dot_product.Pmax_uki_max
angle_degrees.Pmax_uki_max
180-134.3997
dot_product.Pmax_tai_max
angle_degrees.Pmax_tai_max
dot_product.Pmax_SHCSBSB_max
angle_degrees.Pmax_SHCSBSB_max
180-99.50977
formation <- c("NKLS", "NKBS", "Tewkesbury",
"Upper Kai-Iwi", "Tainui", "SHCSBSB", "modern")
formation <- factor(formation, levels = c("NKLS", "NKBS", "Tewkesbury",
"Upper Kai-Iwi", "Tainui", "SHCSBSB", "modern"))
formation_list <- c("NKLS", "NKBS", "Tewkesbury",
"Upper Kai-Iwi", "Tainui", "SHCSBSB", "modern")
formation_list <- factor(formation, levels = c("NKLS", "NKBS", "Tewkesbury",
"Upper Kai-Iwi", "Tainui", "SHCSBSB", "modern"))
formation_list
biplot(G_pc_NKLS, scale = 0)
biplot(G_pc_NKBS, scale = 0)
biplot(G_pc_tewk, scale = 0)
biplot(G_pc_uki, scale = 0)
biplot(G_pc_tai, scale = 0)
biplot(G_pc_SHCSBSB, scale = 0)
biplot(G_pc_mod, scale = 0)
p.g.pheno
p.ang_g
p.ang_g <- ggplot(diff_between_Gs) +
geom_point(aes(x = angle.diff_Gs.time, y = angle_diff_Gs),
size = 5, shape = 15) +
scale_x_discrete(name = "Formation Transition",
guide = guide_axis(angle = 45)) +
scale_y_continuous(name = "Angle difference between G matrices",
lim = c(0, 90)) +
plot.theme
p.ang_g <- ggplot(diff_between_Gs) +
geom_point(aes(x = angle.diff_Gs.time, y = angle_diff_Gs),
size = 5, shape = 15) +
scale_x_discrete(name = "Formation Transition",
guide = guide_axis(angle = 45)) +
scale_y_continuous(name = "Angle difference between G matrices",
lim = c(0, 90)) +
plot.theme
p.ang_g
ggsave(p.ang_g,
file = "./Results/angle.g.diff.w.modern.no.wai.png",
width = 20, height = 20, units = "cm")
source("./Scripts/0-env.R")
df <- read.csv("./Results/colonies.traits_26Feb2024.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
load(file = "./Results/sum.data.list.w.modern.RData") #load the g matrices calculated above
mean_by_formation <- sum.data.list[[1]]
mean_by_formation_colony <- sum.data.list[[2]]
means <- sum.data.list[[3]]
diff.df <- read.csv("./Results/diff.in.traits.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
diff.df <- diff.df[1:6,]
#### TEMPERATURE COMPARITONS ----
forms <- c("NKLS", "NKBS", "Tewkesbury",
"Upper Kai-Iwi", "Tainui",
"SHCSBSB", "modern")
form.meta.trim <- form.meta[form.meta$formationCode %in% forms,]
##### TEMPERATURE OVER TIME -----
p.deltaO <- ggplot(form.meta.trim) +
geom_point(aes(formationCode, med.O18),
shape = 16, size = 5) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
ylab(expression(delta^18~O)) +
xlab(label = "Formation") +
plot.theme
form.meta.trim
df <- read.csv("./Results/colonies.traits_26Feb2024.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
head(df)
wabo.iv <- read.csv("Data/output_16May2024.csv",
header = TRUE)
head(wabo.iv)
wabo.iv$image <- gsub("bryozoa_lab_images/WABO_IV/",
"",
wabo.iv$id)
wabo.iv$image <- gsub(".jpg",
"",
wabo.iv$image)
length(unique(wabo.iv$image)) #1395
wabo.sp.nr <- wabo.iv$image
wabo.sp.nr.sp <- str_split(wabo.sp.nr, "_")
wabo.sp.nr.new <- c()
for(i in 1:length(wabo.sp.nr.sp)){
wabo.sp.nr.new[i] <- paste0(wabo.sp.nr.sp[[i]][1], wabo.sp.nr.sp[[i]][2])
}
wabo.iv$specimenNR <- wabo.sp.nr.new
#check that they match
zz <- wabo.iv[,c("image", "specimenNR")]
View(zz)
length(unique(wabo.iv$specimenNR)) #732 colonies
wabo.iv$form.no <- as.numeric(str_extract(wabo.iv$specimenNR,
"[0-9]+"))
wabo.iv$form.no <- as.numeric(str_extract(wabo.iv$specimenNR,
"[0-9]+"))
wabo.iv$formation <- ""
wabo.iv$formation[wabo.iv$form.no <= 399] <- "NKBS"
wabo.iv$formation[wabo.iv$form.no >= 400 &
wabo.iv$form.no <= 599] <- "NKLS"
wabo.iv$formation[wabo.iv$form.no >= 600 &
wabo.iv$form.no <= 699] <- "Tewkesbury"
wabo.iv$formation[wabo.iv$form.no >= 700 &
wabo.iv$form.no <= 799] <- "SHCSBSB"
wabo.iv$formation[wabo.iv$form.no >= 800 &
wabo.iv$form.no <= 899] <- "Tainui"
wabo.iv$formation[wabo.iv$form.no >= 1000 &
wabo.iv$form.no <= 1099] <- "Upper Kai-Iwi"
wabo.iv$formation[wabo.iv$form.no >= 1100 &
wabo.iv$form.no <= 1199] <- "Tewkesbury" #formerly Waipuru
unique(wabo.iv$formation)
wabo.iv[wabo.iv$formation == "",]
## check for dupes
#fossils
wabo.iv$id[1]
zz <- wabo.iv[duplicated(wabo.iv$box_id),]
nrow(zz) #3
zz
wabo.iv$new.id <- paste0(wabo.iv$box_id, "_", wabo.iv$image)
xx <- wabo.iv[duplicated(wabo.iv$new.id),]
nrow(xx) #0! yay!
colnames(wabo.iv)
View(wabo.iv)
head(wabo.iv$id)
help("str_split")
#check if 5 of each colony
path.split <- str_split(wabo.iv$id,
pattern = "_")
path.split
head(unlist(path.split))
path.list <- unlist(path.split)
path.list
path.split[1]
path.split[[1]]
path.split[[1]][8]
install.packages('rlist')
require(rlist)
head(wabo.iv$id)
#check if 5 of each colony
path.trim <- gsub(wabo.iv$id,
pattern = "bryozoa_lab_images/WABO_IV/",
replacement = "")
path.split <- str_split(path.trim,
pattern = "_")
head(path.split)
mag <- c()
col.id <- c()
for(i in 1:length(path.split)){
mag[i] <- list.parse[[i]][5]
col.id[i] <- paste0(list.parse[[i]][1], list.parse[[i]][2])
}
for(i in 1:length(path.split)){
mag[i] <- path.split[[i]][5]
col.id[i] <- paste0(path.split[[i]][1], path.split[[i]][2])
}
mag <- c()
col.id <- c()
for(i in 1:length(path.split)){
mag[i] <- path.split[[i]][5]
col.id[i] <- paste0(path.split[[i]][1], path.split[[i]][2])
}
mag == 30
head(mag)
mag == "x30"
head(col.id)
table(col.id)
sort(table(col.id))
path.split
length(path.split)
sort(table(col.id))
mag <- c()
col.id <- c()
col <- c()
side <- c()
for(i in 1:length(path.split)){
mag[i] <- path.split[[i]][5]
col[i] <- path.split[[i]][1]
side[i] <- path.split[[i]][2]
col.id[i] <- paste0(path.split[[i]][1], path.split[[i]][2])
}
colonies <- rbind(col, side, col.id)
colonies <- cbind(col, side, col.id)
colonies <- as.data.frame(cbind(col, side, col.id))
sort(table(colonies$col.id))
colonies$form.no <- as.numeric(str_extract(colonies$col,
"[0-9]+"))
colonies$formation <- ""
colonies$formation[colonies$form.no <= 399] <- "NKBS"
colonies$formation[colonies$form.no >= 400 &
colonies$form.no <= 599] <- "NKLS"
colonies$formation[colonies$form.no >= 600 &
colonies$form.no <= 699] <- "Tewkesbury"
colonies$formation[colonies$form.no >= 700 &
colonies$form.no <= 799] <- "SHCSBSB"
colonies$formation[colonies$form.no >= 800 &
colonies$form.no <= 899] <- "Tainui"
colonies$formation[colonies$form.no >= 1000 &
colonies$form.no <= 1099] <- "Upper Kai-Iwi"
colonies$formation[colonies$form.no >= 1100 &
colonies$form.no <= 1199] <- "Tewkesbury" #formerly Waipuru
unique(colonies$formation)
colonies[colonies$formation == "",]
sort(table(colonies$col.id))
few <- c("076iCV", "074iCV", "1028CV", "1029CV", "843F",
"065iCC", "073iaCV", "073ibCV")
table(colonies$formation[!(colonies$col.id %in% few)])
colonies
table(colonies$formation[unique(colonies$col.id) & !(colonies$col.id %in% few)])
colonies[!(colonies$col.id %in% few),] %>%
group_by(formation) %>%
summarise(n = n())
colonies[!(colonies$col.id %in% few),] %>%
group_by(formation) %>%
summarise(n = length(unique(col.id)))
