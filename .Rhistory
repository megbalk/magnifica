scale_x_continuous(name = "LN trait measurement (pixels)")
p.dist
ggsave(p.dist, file = "./Results/trait_distribution_4Aug2023.png", width = 14, height = 10, units = "cm")
###### BIMODALITY ------
##explore bimodality, using zooid height as an example then see if it generalizes
p.ln.zh <- ggplot(df) +
geom_density(aes(x = ln.zh)) +
ggtitle(paste0("Zooid height, N zooids = ", nrow(df), ", N colony = ", length(keep))) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_y_continuous(name = "Density") +
scale_x_continuous(name = "LN Zooid Height")
p.ln.zh
ggsave(p.zh, file = "./Results/zooid_height_4Aug2023.png", width = 14, height = 10, units = "cm")
##driven by formation?
#all but Punneki Limestone are bimodal
p.zh.form <- ggplot(df) +
geom_density(aes(x = ln.zh,
group = formation,
col = formation)) +
ggtitle(paste0("Zooid height by formation, N zooids = ", nrow(df), ", N colony = ", length(keep))) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_y_continuous(name = "Density") +
scale_x_continuous(name = "LN Zooid Height")
p.zh.form
ggsave(p.zh.form, file = "./Results/zooid_height_by_formation_4Aug2023.png", width = 14, height = 10, units = "cm")
## test where hump is...
# frequency by size bin (quarter ln bins)
df.bins <- df %>% mutate(zh.bin = cut(ln.zh, breaks = seq(5.5, 7.5, .1)))
df.bins
df.bin.f <- df.bins %>%
group_by(zh.bin) %>%
summarise(n = n())
View(df.bin.f)
## test where hump is...
# frequency by size bin (quarter ln bins)
df.bins <- df %>%
mutate(zh.bin = cut(ln.zh, breaks = seq(5.5, 7.5, .1))) %>%
as.data.frame()
df.bin.f <- df.bins %>%
group_by(zh.bin) %>%
summarise(n = n()) %>%
as.data.frame()
#(6.2,6.3]
#6.25 like I eyeballed
write.csv(df.bin.f,
"./Results/zh.bin.frequency.csv",
row.names = FALSE)
sm.traits <- df[df$ln.zh < 6.25,]
sm.colonies <- unique(sm.traits$colony.id) #43 out of 604; was 95 images out of 891
nrow(sm.colonies)
length(sm.colonies)
bins <- c("(5.5,5.6]", "(5.6,5.7]", "(5.7,5.8]",
"(5.8,5.9]", "(5.9,6]", "(6,6.1]",
"(6.1,6.2]", "(6.2,6.3]")
df.bins$zh.bin <- as.character(df.bins$zh.bin)
df.bins$sm <- FALSE
df.bins$sm[df.bins$zh.bin %in% bins] <- TRUE
#look at proportions
prop.sm <- df.bins %>%
group_by(colony.id) %>%
summarise(n.zooid = length(zooid.id),
n.sm.zooid = sum(sm),
prop.sm = n.sm.zooid/n.zooid)
View(prop.sm)
write.csv(prop.sm,
"./Results/proportion.small.colonies.csv",
row.names = FALSE)
#goes from 100% to 20%; perhaps make 20% the cut off
rm.col <- prop.sm$colony.id[prop.sm$prop.sm == 1]
rm.col
length(rm.col) #32 colonies
small.colonies <- df[df$colony.id %in% rm.col,]
reg.colonies <- df[!(df$colony.id %in% rm.col),]
write.csv(small.colonies,
"./Results/small.colonies.traits.csv",
row.names = FALSE)
write.csv(reg.colonies,
"./Results/colonies.traits.csv",
row.names = FALSE)
#for those with 20%, see where the sizes are
sm.zooids <- prop.sm$colony.id[prop.sm$prop.sm < 1 &
prop.sm$prop.sm > 0]
length(sm.zooids) #21
sm.zooids
range(df$ln.zh[df$colony.id %in% sm.zooids])
#5.800815 7.439169
sort(df$ln.zh[df$colony.id %in% sm.zooids])
##driven by magnification?
#not that I can tell...
p.zh.mag <- ggplot(df) +
geom_density(aes(x = ln.zh,
group = magnification,
col = magnification)) +
ggtitle(paste0("Zooid height by magnification, N zooids = ", nrow(df), ", N colony = ", length(keep))) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_y_continuous(name = "Density") +
scale_x_continuous(name = "LN Zooid Height")
p.zh.form
p.zh.mag
nrow(df[df$magnification == "x30",]) #6815
length(unique(df$colony.id[df$magnification == "x30"])) #604
## really convince self that these are the same individuals
# make data more manageable by reducing it to the three formations
# make data even more manageable by reducing it to the small hump that is seen
nk.wa.uki <- df[df$formation == "NKBS" |
df$formation == "Waipuru" |
df$formation == "Upper Kai-Iwi",]
sm.zoo <- nk.wa.uki[nk.wa.uki$ln.zh <= 6.25,]
nrow(sm.zoo) #543 (was 943) zooids
length(unique(sm.zoo$colony.id)) #36 (was 64) colonies
table(sm.zoo$colony.id) #a lot of one offs, but some clusters
## look at a couple of these:
sm.zoo[sm.zoo$colony.id == "077CV",]
##SAME INDIVIDUALS?
## really convince self that these are the same individuals
# make data more manageable by reducing it to the three formations
# make data even more manageable by reducing it to the small hump that is seen
nk.wa.uki <- df[df$formation == "NKBS" |
df$formation == "Waipuru" |
df$formation == "Upper Kai-Iwi",]
sm.zoo <- nk.wa.uki[nk.wa.uki$ln.zh <= 6.25,]
nrow(sm.zoo) #543 (was 943) zooids
length(unique(sm.zoo$colony.id)) #36 (was 64) colonies
table(sm.zoo$colony.id) #a lot of one offs, but some clusters
## look at a couple of these:
sm.zoo[sm.zoo$colony.id == "077CV",]
p.ow.zh <- ggplot(data = df) +
geom_smooth(aes(x = ln.zh, y = ln.ow.m), method = "lm") +
geom_point(aes(x = ln.zh, y = ln.ow.m)) + #two clusters
ggtitle(paste0("Scaling of operculum mid-width with zooid height, N zooids = ", nrow(df), ", N colony = ", length(keep))) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_y_continuous(name = "LN Operculum mid-width") +
scale_x_continuous(name = "LN Zooid height")
p.ow.zh
ggsave(p.ow.zh, file = "./Results/ow.zh.scaling.png", width = 14, height = 10, units = "cm")
slice_max(df, n = 2, order_by = ln.ow.m)
slice_max(df, n = 2, order_by = lnzh)
zh.owm.model <- lm(ln.ow.m ~ ln.zh,
data = df)
slice_max(df, n = 2, order_by = ln.zh)
zh.owm.model <- lm(ln.ow.m ~ ln.zh,
data = df)
zh.owm.model
###### LOOK AT RESULTS FROM IMG J -----
table(sm.zoo$colony.id)
unique(sm.zoo$imageName[sm.zoo$colony.id == "077CV"]) #from images 1, 2, 3
## image 077_CV
imgj.res_077_1 <- read.csv("./Data/ImgJ/077_CV_1_Results.csv", header = TRUE)
imgj.res_077_2 <- read.csv("./Data/ImgJ/077_CV_2_Results.csv", header = TRUE)
imgj.res_077_3 <- read.csv("./Data/ImgJ/077_CV_3_Results.csv", header = TRUE)
imgj_077 <- rbind(imgj.res_077_1, imgj.res_077_2, imgj.res_077_3)
## scale
imgj_077$scale.zh <- imgj_077$Length/.606
## log
imgj_077$ln.zh <- log(imgj_077$scale.zh)
imgj_077$ln.zh # all small!!
##273S
unique(sm.zoo$imageName[sm.zoo$colony.id == "273S"]) #from images 1, 2, 3
imgj.res_273_1 <- read.csv("./Data/ImgJ/273_S_1_Results.csv", header = TRUE)
imgj.res_273_2 <- read.csv("./Data/ImgJ/273_S_2_Results.csv", header = TRUE)
imgj.res_273_3 <- read.csv("./Data/ImgJ/273_S_3_Results.csv", header = TRUE)
imgj_273 <- rbind(imgj.res_273_1, imgj.res_273_2, imgj.res_273_3)
## scale
imgj_273$scale.zh <- imgj_273$Length/.606
## log
imgj_273$ln.zh <- log(imgj_273$scale.zh)
imgj_273$ln.zh #all small!
col.form = c("#F8766D", "#CD9600", "#7CAE00", "#00BE67",
"#00A9FF", "#C77CFF", "#FF61CC")
col.traits = c("#F8766D", "#CD9600", "#7CAE00", "#00BE67",
"#00BFC4", "#00A9FF", "#C77CFF", "#FF61CC")
ggplot(data = df) +
geom_smooth(aes(x = df[, traits[1]],
y = df[, traits[2]],
alpha = 0.5)) +
geom_point(aes(x = df[, traits[1]],
y = df[, traits[2]],
group = formation,
col = formation,
alpha = 0.5)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[1]) +
scale_y_continuous(name = traits[2]) +
scale_color_manual(values = col.form)
summary(lm(df[, traits[2]] ~ df[, traits[1]]))
ggplot(data = df) +
geom_smooth(aes(x = df[, traits[1]],
y = df[, traits[3]],
alpha = 0.5)) +
geom_point(aes(x = df[, traits[1]],
y = df[, traits[3]],
group = formation,
col = formation,
alpha = 0.5)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[1]) +
scale_y_continuous(name = traits[3]) +
scale_color_manual(values = col.form)
summary(lm(df[, traits[3]] ~ df[, traits[1]]))
ggplot(data = df) +
geom_smooth(aes(x = df[, traits[1]],
y = df[, traits[4]],
alpha = 0.5)) +
geom_point(aes(x = df[, traits[1]],
y = df[, traits[4]],
group = formation,
col = formation,
alpha = 0.5)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[1]) +
scale_y_continuous(name = traits[4]) +
scale_color_manual(values = col.form)
summary(lm(df[, traits[4]] ~ df[, traits[1]]))
summary(lm(df[, traits[3]] ~ df[, traits[1]]))
summary(lm(df[, traits[4]] ~ df[, traits[1]]))
ggplot(data = df) +
geom_smooth(aes(x = df[, traits[1]],
y = df[, traits[5]],
alpha = 0.5)) +
geom_point(aes(x = df[, traits[1]],
y = df[, traits[5]],
group = formation,
col = formation,
alpha = 0.5)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[1]) +
scale_y_continuous(name = traits[5]) +
scale_color_manual(values = col.form)
summary(lm(df[, traits[5]] ~ df[, traits[1]]))
ggplot(data = df) +
geom_smooth(aes(x = df[, traits[1]],
y = df[, traits[6]],
alpha = 0.5)) +
geom_point(aes(x = df[, traits[1]],
y = df[, traits[6]],
group = formation,
col = formation,
alpha = 0.5)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[1]) +
scale_y_continuous(name = traits[6]) +
scale_color_manual(values = col.form)
summary(lm(df[, traits[6]] ~ df[, traits[1]]))
ggplot(data = df) +
geom_smooth(aes(x = df[, traits[1]],
y = df[, traits[7]],
alpha = 0.5)) +
geom_point(aes(x = df[, traits[1]],
y = df[, traits[7]],
group = formation,
col = formation,
alpha = 0.5)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[1]) +
scale_y_continuous(name = traits[7]) +
scale_color_manual(values = col.form)
#ln.c.side is not an issue really
summary(lm(df[, traits[7]] ~ df[, traits[1]]))
ggplot(data = df) +
geom_smooth(aes(x = df[, traits[1]],
y = df[, traits[8]],
alpha = 0.5)) +
geom_point(aes(x = df[, traits[1]],
y = df[, traits[8]],
group = formation,
col = formation,
alpha = 0.5)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[1]) +
scale_y_continuous(name = traits[8]) +
scale_color_manual(values = col.form)
#ln.o.side is not an issue really
summary(lm(df[, traits[7]] ~ df[, traits[1]]))
#### LOAD LIBRARIES ----
library(ggplot2)
library(data.table)
library(evolqg)
library(dplyr)
library(nse)
library(grid)
library(gridBase)
library(gridExtra)
library(MCMCglmm)
library(corrplot)
library(MASS)
library(reshape2)
library(scatterplot3d)
library(rgl)
library(scales)
library(RColorBrewer)
library(coin)
library(tibble)
library(magrittr)
library(evoTS)
library(paleoTS)
df <- read.csv("./Results/colonies.traits.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
sm.df <- read.csv("./Results/small.colonies.traits.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
col.form = c("#F8766D", "#CD9600", "#7CAE00", "#00BE67",
"#00A9FF", "#C77CFF", "#FF61CC")
col.traits = c("#F8766D", "#CD9600", "#7CAE00", "#00BE67",
"#00BFC4", "#00A9FF", "#C77CFF", "#FF61CC")
head( df)
colnames( df)
zooid_list <- unique(df$zooid.id)
length(zooid_list) #6274 (was 15773)
colony_list <- unique(df$colony.id)
length(colony_list) #572 (was 742)
##### FORMATIONS ----
# arrange formations from oldest to youngest
df$formation <- factor(df$formation, levels = c("NKLS", "NKBS", "Tewkesbury",
"Waipuru", "Upper Kai-Iwi",
"Tainui", "SHCSBSB"))
formation_list <- unique(df$formation)
length(formation_list) #7
#same order as in df
names(df)
traits = names(df[, c("ln.zh", "ln.mpw.b", "ln.cw.m", "ln.cw.d",
"ln.ow.m", "ln.oh", "ln.c.side", "ln.o.side")])
##### TRIM DATASET ----
df.trim <- df %>%
dplyr::select(zooid.id, colony.id, formation, matches(traits))
colNums <- match(c(traits, "zooid.id"), names(df.trim))
colNums
df = as.data.frame(df.trim)
##### DISTRIBUTIONS -----
p.zh = ggplot(data = df) +
geom_density(aes(x = df[, traits[1]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[1]) +
scale_color_manual(values = col.form)
p.mpw.b = ggplot(data = df) +
geom_density(aes(x = df[, traits[2]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[2]) +
scale_color_manual(values = col.form)
p.cw.m = ggplot(data = df) +
geom_density(aes(x = df[, traits[3]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[3]) +
scale_color_manual(values = col.form)
p.cw.d = ggplot(data = df) +
geom_density(aes(x = df[, traits[4]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[4]) +
scale_color_manual(values = col.form)
p.ow.m = ggplot(data = df) +
geom_density(aes(x = df[, traits[5]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[5]) +
scale_color_manual(values = col.form)
p.oh = ggplot(data = df) +
geom_density(aes(x = df[, traits[6]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[6]) +
scale_color_manual(values = col.form)
p.c.side = ggplot(data = df) +
geom_density(aes(x = df[, traits[7]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[7]) +
scale_color_manual(values = col.form)
p.o.side = ggplot(data = df) +
geom_density(aes(x = df[, traits[8]],
group = formation,
col = formation)) +
theme(text = element_text(size = 16),
legend.position = "none") +
scale_x_continuous(name = traits[8]) +
scale_color_manual(values = col.form)
Fig = list(p.zh, p.mpw.b, p.cw.m, p.cw.d, p.ow.m, p.oh, p.c.side, p.o.side)
ml <- marrangeGrob(Fig, nrow = 4, ncol = 2)
ml
ggsave(ml, file = "./Results/trait.interest_distribution_reg.png",
width = 14, height = 10, units = "cm")
#ln.zh
sub.ln.zh <- sample(df[, traits[1]],
5000, replace = FALSE, prob = NULL)
shapiro.test(sub.ln.zh) #p-value < 2.2e-16
#ln.mpw.b
sub.ln.mpw.b <- sample(df[, traits[2]],
5000, replace = FALSE, prob = NULL)
shapiro.test(sub.ln.mpw.b) #p-value < 2.2e-16
#ln.cw.m
sub.ln.cw.m <- sample(df[, traits[3]],
5000, replace = FALSE, prob = NULL)
shapiro.test(sub.ln.cw.m) #p-value < 0.1432
#ln.cw.d
sub.ln.cw.d <- sample(df[, traits[4]],
5000, replace = FALSE, prob = NULL)
shapiro.test(sub.ln.cw.d) #p-value < 0.003805
#ln.ow.m
sub.ln.ow.m <- sample(df[, traits[5]],
5000, replace = FALSE, prob = NULL)
shapiro.test(sub.ln.ow.m) #p-value < 2.2e-16
#ln.oh
sub.ln.oh <- sample(df[, traits[6]],
5000, replace = FALSE, prob = NULL)
shapiro.test(sub.ln.oh) #p-value < 2.2e-16
#ln.c.side
sub.ln.c.side <- sample(df[, traits[7]],
5000, replace = FALSE, prob = NULL)
shapiro.test(sub.ln.c.side) #p-value < 0.0003926
shapiro.test(sub.ln.mpw.b) #p-value < 2.2e-16
shapiro.test(sub.ln.cw.m) #p-value < 0.1432
shapiro.test(sub.ln.cw.d) #p-value < 0.003805
shapiro.test(sub.ln.ow.m) #p-value < 2.2e-16
#ln.oh
sub.ln.oh <- sample(df[, traits[6]],
5000, replace = FALSE, prob = NULL)
shapiro.test(sub.ln.oh) #p-value < 2.2e-16
#ln.c.side
sub.ln.c.side <- sample(df[, traits[7]],
5000, replace = FALSE, prob = NULL)
shapiro.test(sub.ln.c.side) #p-value < 0.0003926
#ln.o.side
sub.ln.o.side <- sample(df[, traits[8]],
5000, replace = FALSE, prob = NULL)
shapiro.test(sub.ln.o.side) #p-value < 2.2e-16
#### REDUCE TO TRAITS OF INTEREST ----
trt_lg_N = c("formation", "colony.id", "zooid.id", traits)
dat_lg_N = df[intersect(colnames(df), trt_lg_N)]
head(dat_lg_N) #traits in same order as df and traits
mean_by_formation_colony = dat_lg_N %>% #use this going forward
group_by(formation, colony.id) %>%
summarize(n.zooid = length(unique(zooid.id)),
avg.zh = mean(ln.zh, na.rm = T),
avg.mpw.b = mean(ln.mpw.b, na.rm = T),
avg.cw.m = mean(ln.cw.m, na.rm = T),
avg.cw.d = mean(ln.cw.d, na.rm = T),
avg.ow.m = mean(ln.ow.m, na.rm = T),
avg.oh = mean(ln.oh, na.rm = T),
avg.o.side = mean(ln.o.side, na.rm = T),
avg.c.side = mean(ln.c.side, na.rm = T)) %>%
as.data.frame()
mean_by_formation_colony
mean_by_formation_colony1 = dat_lg_N %>% #use this going forward
group_by(formation, colony.id) %>%
summarize(n.zooid = length(unique(zooid.id)),
avg.zh = mean(ln.zh, na.rm = T),
avg.mpw.b = mean(ln.mpw.b, na.rm = T),
avg.cw.m = mean(ln.cw.m, na.rm = T),
avg.cw.d = mean(ln.cw.d, na.rm = T),
avg.ow.m = mean(ln.ow.m, na.rm = T),
avg.oh = mean(ln.oh, na.rm = T),
avg.o.side = mean(ln.o.side, na.rm = T),
avg.c.side = mean(ln.c.side, na.rm = T)) %>%
as.data.frame()
mean_by_formation_colony1
dat_lg_N
head(dat_lg_N)
mean_by_formation_colony = dat_lg_N %>% #use this going forward
group_by(formation, colony.id) %>%
summarize(n.zooid = length(zooid.id),
avg.zh = mean(ln.zh, na.rm = T),
avg.mpw.b = mean(ln.mpw.b, na.rm = T),
avg.cw.m = mean(ln.cw.m, na.rm = T),
avg.cw.d = mean(ln.cw.d, na.rm = T),
avg.ow.m = mean(ln.ow.m, na.rm = T),
avg.oh = mean(ln.oh, na.rm = T),
avg.o.side = mean(ln.o.side, na.rm = T),
avg.c.side = mean(ln.c.side, na.rm = T)) %>%
as.data.frame()
mean_by_formation_colony2 = dat_lg_N %>% #use this going forward
group_by(formation, colony.id) %>%
summarize(n.zooid = length(zooid.id),
avg.zh = mean(ln.zh, na.rm = T),
avg.mpw.b = mean(ln.mpw.b, na.rm = T),
avg.cw.m = mean(ln.cw.m, na.rm = T),
avg.cw.d = mean(ln.cw.d, na.rm = T),
avg.ow.m = mean(ln.ow.m, na.rm = T),
avg.oh = mean(ln.oh, na.rm = T),
avg.o.side = mean(ln.o.side, na.rm = T),
avg.c.side = mean(ln.c.side, na.rm = T)) %>%
as.data.frame()
mean_by_formation_colony2
